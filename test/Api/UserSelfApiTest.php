<?php
/**
 * UserSelfApiTest.
 * PHP version 5
 *
 * @category Class
 * @package OpenEuropa\SyncopePhpClient
 * @author OpenAPI Generator team
 * @link https://openapi-generator.tech
 */

/**
 * Apache Syncope
 *
 * Apache Syncope 2.1.2-SNAPSHOT
 *
 * OpenAPI spec version: 2.1.2-SNAPSHOT
 * Contact: dev@syncope.apache.org
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenEuropa\SyncopePhpClient\Test\Api;

use \OpenEuropa\SyncopePhpClient\Configuration;
use \OpenEuropa\SyncopePhpClient\ApiException;
use \OpenEuropa\SyncopePhpClient\ObjectSerializer;

/**
 * UserSelfApiTest Class Doc Comment.
 *
 * @category Class.
 * @package OpenEuropa\SyncopePhpClient
 * @author OpenAPI Generator team
 * @link https://openapi-generator.tech
 */
class UserSelfApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases.
     */
    public static function setUpBeforeClass()  {
    }

    /**
     * Setup before running each test case.
     */
    public function setUp()  {
    }

    /**
     * Clean up after running each test case.
     */
    public function tearDown()  {
    }

    /**
     * Clean up after running all test cases.
     */
    public static function tearDownAfterClass()  {
    }

    /**
     * Test case for confirmPasswordReset.
     *
     * Reset the password value for the user matching the provided token, if available and still valid.  If the token actually matches one of users, and if it is still valid at the time of submission, the matching  user's password value is set as provided. The new password value will need anyway to comply with all relevant  password policies..
     *
     */
    public function testConfirmPasswordReset()  {
    }

    /**
     * Test case for create1.
     *
     * Self-registration for new user..
     *
     */
    public function testCreate1()  {
    }

    /**
     * Test case for delete1.
     *
     * Self-deletes user..
     *
     */
    public function testDelete1()  {
    }

    /**
     * Test case for mustChangePassword.
     *
     * Changes own password when change was forced by an administrator..
     *
     */
    public function testMustChangePassword()  {
    }

    /**
     * Test case for read29.
     *
     * Returns the user making the service call..
     *
     */
    public function testRead29()  {
    }

    /**
     * Test case for requestPasswordReset.
     *
     * Provides answer for the security question configured for user matching the given username, if any.  If provided answer matches the one stored for that user, a password reset token is internally generated,  otherwise an error is returned..
     *
     */
    public function testRequestPasswordReset()  {
    }

    /**
     * Test case for status1.
     *
     * Self-perform a status update..
     *
     */
    public function testStatus1()  {
    }

    /**
     * Test case for update1.
     *
     * Self-updates user..
     *
     */
    public function testUpdate1()  {
    }

    /**
     * Test case for update2.
     *
     * Self-updates user..
     *
     */
    public function testUpdate2()  {
    }
}
