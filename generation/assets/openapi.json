{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Apache Syncope",
    "description" : "Apache Syncope 2.1.2-SNAPSHOT",
    "contact" : {
      "name" : "The Apache Syncope community",
      "url" : "http://syncope.apache.org",
      "email" : "dev@syncope.apache.org"
    },
    "license" : {
      "name" : "Apache 2.0 License",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "2.1.2-SNAPSHOT"
  },
  "servers" : [ {
    "url" : "http://syncope-vm.apache.org:9080/syncope/rest"
  } ],
  "paths" : {
    "/accessTokens/refresh" : {
      "post" : {
        "tags" : [ "AccessTokens" ],
        "summary" : "Returns an empty response bearing the X-Syncope-Token header value, with extended lifetime.\n The provided value is a signed JSON Web Token.",
        "operationId" : "refresh",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "JWT successfully refreshed",
            "headers" : {
              "X-Syncope-Token-Expire" : {
                "description" : "Expiration of the refreshed JWT",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Syncope-Token" : {
                "description" : "Generated JWT",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/accessTokens/login" : {
      "post" : {
        "tags" : [ "AccessTokens" ],
        "summary" : "Returns an empty response bearing the X-Syncope-Token header value, in case of successful authentication.\n The provided value is a signed JSON Web Token.",
        "operationId" : "login",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "JWT successfully generated",
            "headers" : {
              "X-Syncope-Token-Expire" : {
                "description" : "Expiration of the generated JWT",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Syncope-Token" : {
                "description" : "Generated JWT",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid username or password"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ]
      }
    },
    "/accessTokens/logout" : {
      "post" : {
        "tags" : [ "AccessTokens" ],
        "summary" : "Invalidates the access token of the requesting user.",
        "operationId" : "logout",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/accessTokens/{key}" : {
      "delete" : {
        "tags" : [ "AccessTokens" ],
        "summary" : "Invalidates the access token matching the provided key.",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "access token key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/accessTokens" : {
      "get" : {
        "tags" : [ "AccessTokens" ],
        "summary" : "Returns a paged list of existing access tokens matching the given query.",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "query conditions",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          }
        }, {
          "name" : "orderby",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/anyObjects/{key}" : {
      "get" : {
        "tags" : [ "AnyObjects" ],
        "summary" : "Reads the any object matching the provided key.",
        "operationId" : "readAnyObject",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "if value looks like a UUID then it is interpreted as key, otherwise as a (user)name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Any object matching the provided key; if value looks like a UUID then it is interpreted as key, otherwise as a name.",
            "headers" : {
              "ETag" : {
                "description" : "Opaque identifier for the latest modification made to the entity returned by this endpoint",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnyObjectTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnyObjectTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnyObjectTO"
                }
              }
            }

          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "AnyObjects" ],
        "summary" : "Updates any object matching the provided key.",
        "operationId" : "updateAnyObject",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Any Object's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyObjectTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyObjectTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyObjectTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Any object successfully updated enriched with propagation status information, as Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "AnyObjects" ],
        "summary" : "Deletes any object matching provided key.",
        "operationId" : "deleteAnyObject",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "User, Group or Any Object successfully deleted enriched with propagation status information, as Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "AnyObjects" ],
        "summary" : "Updates any object matching the provided key.",
        "operationId" : "updateAnyObjectPartial",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Any Object's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyObjectPatch"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyObjectPatch"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyObjectPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Any object successfully updated enriched with propagation status information, as Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/anyObjects" : {
      "get" : {
        "tags" : [ "AnyObjects" ],
        "summary" : "Returns a paged list of any objects matching the given query.",
        "operationId" : "searchAnyObject",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "query conditions",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          }
        }, {
          "name" : "orderby",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "realm",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "/"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "fiql",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "AnyObjects" ],
        "summary" : "Creates a new any object.",
        "operationId" : "createAnyObject",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyObjectTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyObjectTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyObjectTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "Any object successfully created enriched with propagation status information, as Entity,or empty if 'Prefer: return-no-content' was specified",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "UUID generated for the any object created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the any object created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/anyObjects/{key}/associate/{action}" : {
      "post" : {
        "tags" : [ "AnyObjects" ],
        "summary" : "Executes resource-related operations on given entity.",
        "operationId" : "associateAnyObject",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Entity's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "path",
          "description" : "Association action",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "LINK", "PROVISION", "ASSIGN" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssociationPatch"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssociationPatch"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssociationPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "multipart/mixed" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Batch results available, returned as Response entity"
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/anyObjects/{key}/deassociate/{action}" : {
      "post" : {
        "tags" : [ "AnyObjects" ],
        "summary" : "Executes resource-related operations on given entity.",
        "operationId" : "deassociateAnyObject",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Entity's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "path",
          "description" : "Deassociation action",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "UNLINK", "DEPROVISION", "UNASSIGN" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeassociationPatch"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeassociationPatch"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeassociationPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "multipart/mixed" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Batch results available, returned as Response entity"
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/anyObjects/{key}/{schemaType}/{schema}" : {
      "get" : {
        "tags" : [ "AnyObjects" ],
        "summary" : "Reads the attribute, owned by the given any object, for the given schema type and schema.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
        "operationId" : "readAnyObjectAttribute",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "any object key or name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaType",
          "in" : "path",
          "description" : "schema type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PLAIN", "DERIVED", "VIRTUAL" ]
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "schema",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "AnyObjects" ],
        "summary" : "Adds or replaces the attribute, owned by the given any object, for the given schema type and schema.",
        "operationId" : "updateAnyObjectAttribute",
        "parameters" : [ {
          "name" : "schema",
          "in" : "path",
          "description" : "Attribute schema's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "schema type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaType",
          "in" : "path",
          "description" : "attribute",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PLAIN", "DERIVED", "VIRTUAL" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttrTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttrTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttrTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "AnyObjects" ],
        "summary" : "Deletes the attribute, owned by the given any object, for the given schema type and schema.",
        "operationId" : "deleteAnyObjectAttribute",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "any object key or name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaType",
          "in" : "path",
          "description" : "schema type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PLAIN", "DERIVED", "VIRTUAL" ]
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "schema",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "any object key or name",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/anyObjects/{key}/{schemaType}" : {
      "get" : {
        "tags" : [ "AnyObjects" ],
        "summary" : "Reads the list of attributes owned by the given any object for the given schema type.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
        "operationId" : "readAnyObjectAttributeForSchema",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "any object key or name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaType",
          "in" : "path",
          "description" : "schema type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PLAIN", "DERIVED", "VIRTUAL" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/anyTypeClasses/{key}" : {
      "get" : {
        "tags" : [ "AnyTypeClasses" ],
        "summary" : "Returns anyTypeClass with matching key.",
        "operationId" : "readAnyTypeClass",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "anyTypeClass key to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "AnyTypeClasses" ],
        "summary" : "Updates the anyTypeClass matching the provided key.",
        "operationId" : "updateAnyTypeClass",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "AnyTypeClass's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "anyTypeClass key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyTypeClassTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyTypeClassTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyTypeClassTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "AnyTypeClasses" ],
        "summary" : "Deletes the anyTypeClass matching the provided key.",
        "operationId" : "deleteAnyTypeClass",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "anyTypeClass key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/anyTypeClasses" : {
      "get" : {
        "tags" : [ "AnyTypeClasses" ],
        "summary" : "Returns a list of all anyTypeClasss.",
        "operationId" : "listAnyTypeClass",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "AnyTypeClasses" ],
        "summary" : "Creates a new anyTypeClass.",
        "operationId" : "createAnyTypeClass",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "anyTypeClass to be created",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyTypeClassTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyTypeClassTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyTypeClassTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "AnyTypeClass successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "Key value for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/anyTypes/{key}" : {
      "get" : {
        "tags" : [ "AnyTypes" ],
        "summary" : "Returns anyType with matching key.",
        "operationId" : "readAnyType",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "anyType key to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "AnyTypes" ],
        "summary" : "Updates the anyType matching the provided key.",
        "operationId" : "updateAnyType",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "AnyType's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "anyType key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyTypeTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyTypeTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyTypeTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "AnyTypes" ],
        "summary" : "Deletes the anyType matching the provided key.",
        "operationId" : "deleteAnyType",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "anyType key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/anyTypes" : {
      "get" : {
        "tags" : [ "AnyTypes" ],
        "summary" : "Returns a list of all anyTypes.",
        "operationId" : "listAnyType",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "AnyTypes" ],
        "summary" : "Creates a new anyType.",
        "operationId" : "createAnyType",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "anyType to be created",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyTypeTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyTypeTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyTypeTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "AnyType successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "Key value for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/applications/privileges/{key}" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Returns privilege with matching key.",
        "operationId" : "readPrivilege",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "privilege key to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/applications/{key}" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Returns application with matching key.",
        "operationId" : "read_5",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "application key to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Applications" ],
        "summary" : "Updates the application matching the provided key.",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Application's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "application key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Applications" ],
        "summary" : "Deletes the application matching the provided key.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "application key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/applications" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Returns a list of all applications.",
        "operationId" : "list_3",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Applications" ],
        "summary" : "Creates a new application.",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "application to be created",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "Application successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "Key value for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/camelRoutes/restartContext" : {
      "post" : {
        "tags" : [ "CamelRoutes" ],
        "summary" : "Restart the underlying Apache Camel context.",
        "operationId" : "restartContext",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/camelRoutes/metrics" : {
      "get" : {
        "tags" : [ "CamelRoutes" ],
        "summary" : "Provides Camel metrics.",
        "operationId" : "metrics",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/camelRoutes/{anyTypeKind}/{key}" : {
      "get" : {
        "tags" : [ "CamelRoutes" ],
        "summary" : "Read the route with the given key.",
        "operationId" : "read_6",
        "parameters" : [ {
          "name" : "anyTypeKind",
          "in" : "path",
          "description" : "any type kind",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "USER", "GROUP", "ANY_OBJECT" ]
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "route key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "CamelRoutes" ],
        "summary" : "Update the given route.",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Camel route's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "anyTypeKind",
          "in" : "path",
          "description" : "to be updated",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "USER", "GROUP", "ANY_OBJECT" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CamelRouteTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CamelRouteTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CamelRouteTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/camelRoutes/{anyTypeKind}" : {
      "get" : {
        "tags" : [ "CamelRoutes" ],
        "summary" : "List all routes for the given any type kind.",
        "operationId" : "list_4",
        "parameters" : [ {
          "name" : "anyTypeKind",
          "in" : "path",
          "description" : "any type kind",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "USER", "GROUP", "ANY_OBJECT" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/configurations/stream" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Exports internal storage content as downloadable XML file.",
        "operationId" : "export",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/configurations/{schema}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Returns configuration parameter with matching schema.",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "schema",
          "in" : "path",
          "description" : "identifier of configuration to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Configuration" ],
        "summary" : "Creates / updates the configuration parameter with the given schema.",
        "operationId" : "set",
        "parameters" : [ {
          "name" : "schema",
          "in" : "path",
          "description" : "Configuration schema",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "configuration parameter schema",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttrTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttrTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttrTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Configuration" ],
        "summary" : "Deletes the configuration parameter with matching schema.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "schema",
          "in" : "path",
          "description" : "configuration parameter schema",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/configurations" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Returns all configuration parameters.",
        "operationId" : "list_5",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/connectorsHistory/{key}" : {
      "post" : {
        "tags" : [ "ConnectorHistory" ],
        "summary" : "Restores the connector configuration history instance matching the provided key.",
        "operationId" : "restore",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "connector configuration history instance key to be restored",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "connector configuration history instance key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "ConnectorHistory" ],
        "summary" : "Deletes the connector configuration history instance matching the provided key.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "connector configuration history instance key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/connectorsHistory/{connectorKey}" : {
      "get" : {
        "tags" : [ "ConnectorHistory" ],
        "summary" : "Returns a list of all connector configuration history instances for the given connector instance key.",
        "operationId" : "list_6",
        "parameters" : [ {
          "name" : "connectorKey",
          "in" : "path",
          "description" : "connector instance key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/connectors/reload" : {
      "post" : {
        "tags" : [ "Connectors" ],
        "summary" : "Reload all connector bundles and instances.",
        "operationId" : "reload",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/connectors/bundles" : {
      "get" : {
        "tags" : [ "Connectors" ],
        "summary" : "Returns available connector bundles with property keys in selected language.",
        "operationId" : "getBundles",
        "parameters" : [ {
          "name" : "lang",
          "in" : "query",
          "description" : "language to select property keys; default language is English",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/connectors/{key}/supportedObjectClasses" : {
      "post" : {
        "tags" : [ "Connectors" ],
        "summary" : "Builds the list of ConnId object classes information for the connector bundle matching the given connector\n instance key, with the provided configuration.",
        "operationId" : "buildObjectClassInfo",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Connector instance's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeSpecial",
          "in" : "query",
          "description" : "if set to true, special schema names (like '__PASSWORD__') will be included;\n default is false",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnInstanceTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnInstanceTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnInstanceTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/connectors/byResource/{resourceName}" : {
      "get" : {
        "tags" : [ "Connectors" ],
        "summary" : "Returns connector instance for matching resource.",
        "operationId" : "readByResource",
        "parameters" : [ {
          "name" : "resourceName",
          "in" : "path",
          "description" : "resource name to be used for connector lookup",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lang",
          "in" : "query",
          "description" : "language to select property keys, null for default (English).\n An ISO 639 alpha-2 or alpha-3 language code, or a language subtag up to 8 characters in length.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/connectors/{key}" : {
      "get" : {
        "tags" : [ "Connectors" ],
        "summary" : "Returns connector instance with matching key.",
        "operationId" : "read_7",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "connector instance key to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lang",
          "in" : "query",
          "description" : "language to select property keys, null for default (English).\n An ISO 639 alpha-2 or alpha-3 language code, or a language subtag up to 8 characters in length.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Connectors" ],
        "summary" : "Updates the connector instance matching the provided key.",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Connector instance's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "connector instance key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnInstanceTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnInstanceTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnInstanceTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Connectors" ],
        "summary" : "Deletes the connector instance matching the provided key.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "connector instance key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "connector instance to be used for connection check",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/connectors/check" : {
      "post" : {
        "tags" : [ "Connectors" ],
        "summary" : "Checks whether the connection to resource could be established.",
        "operationId" : "check",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "connector instance to be used for connection check",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnInstanceTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnInstanceTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnInstanceTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/connectors" : {
      "get" : {
        "tags" : [ "Connectors" ],
        "summary" : "Returns a list of all connector instances with property keys in the matching language.",
        "operationId" : "list_7",
        "parameters" : [ {
          "name" : "lang",
          "in" : "query",
          "description" : "language to select property keys, null for default (English).\n An ISO 639 alpha-2 or alpha-3 language code, or a language subtag up to 8 characters in length.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Connectors" ],
        "summary" : "Creates a new connector instance.",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "connector instance to be created",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnInstanceTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnInstanceTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnInstanceTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "ConnInstance successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "UUID generated for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/domains/{key}" : {
      "get" : {
        "tags" : [ "Domains" ],
        "summary" : "Returns domain with matching key.",
        "operationId" : "read_8",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "domain key to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Domains" ],
        "summary" : "Updates the domain matching the provided key.",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Domain's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "domain key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Domains" ],
        "summary" : "Deletes the domain matching the provided key.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "domain key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/domains" : {
      "get" : {
        "tags" : [ "Domains" ],
        "summary" : "Returns a list of all domains.",
        "operationId" : "list_8",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Domains" ],
        "summary" : "Creates a new domain.",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "domain to be created",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "Domain successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "Key value for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/dynRealms/{key}" : {
      "get" : {
        "tags" : [ "DynamicRealms" ],
        "summary" : "Returns dynamic realm with matching key.",
        "operationId" : "read_9",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "dynamic realm key to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "DynamicRealms" ],
        "summary" : "Updates the dynamic realm matching the provided key.",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "DynRealm's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "dynamic realm key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DynRealmTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DynRealmTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DynRealmTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "DynamicRealms" ],
        "summary" : "Deletes the dynamic realm matching the provided key.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "dynamic realm key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/dynRealms" : {
      "get" : {
        "tags" : [ "DynamicRealms" ],
        "summary" : "Returns a list of all dynamic realms.",
        "operationId" : "list_9",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "DynamicRealms" ],
        "summary" : "Creates a new dynamic realm.",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "dynamic realm to be created",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DynRealmTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DynRealmTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DynRealmTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "DynRealm successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "Key value for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/groups/{key}/members/{action}" : {
      "post" : {
        "tags" : [ "Groups" ],
        "summary" : "(De)provision all members of the given group from / onto all the resources associated to it.",
        "operationId" : "provisionMembers",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "group key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "path",
          "description" : "action type to perform on all group members",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PROVISION", "DEPROVISION" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/groups/own" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "This method allows a user to read his own groups.",
        "operationId" : "own",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/groups/{key}" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Reads the any object matching the provided key.",
        "operationId" : "readGroup",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "if value looks like a UUID then it is interpreted as key, otherwise as a (user)name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Group matching the provided key; if value looks like a UUID then it is interpreted as key, otherwise as a name.",
            "headers" : {
              "ETag" : {
                "description" : "Opaque identifier for the latest modification made to the entity returned by this endpoint",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Groups" ],
        "summary" : "Updates group matching the provided key.",
        "operationId" : "updateGroup",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Group's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Group successfully updated enriched with propagation status information, as Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Groups" ],
        "summary" : "Deletes any object matching provided key.",
        "operationId" : "deleteGroup",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "User, Group or Any Object successfully deleted enriched with propagation status information, as Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Groups" ],
        "summary" : "Updates group matching the provided key.",
        "operationId" : "updateGroup",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Group's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupPatch"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupPatch"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Group successfully updated enriched with propagation status information, as Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/groups" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Returns a paged list of any objects matching the given query.",
        "operationId" : "searchGroup",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "query conditions",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          }
        }, {
          "name" : "orderby",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "realm",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "/"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "fiql",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Groups" ],
        "summary" : "Creates a new group.",
        "operationId" : "createGroup",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "Group successfully created enriched with propagation status information, as Entity,or empty if 'Prefer: return-no-content' was specified",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "UUID generated for the group created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the group created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/groups/{key}/associate/{action}" : {
      "post" : {
        "tags" : [ "Groups" ],
        "summary" : "Executes resource-related operations on given entity.",
        "operationId" : "associateGroup",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Entity's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "path",
          "description" : "Association action",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "LINK", "PROVISION", "ASSIGN" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssociationPatch"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssociationPatch"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssociationPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "multipart/mixed" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Batch results available, returned as Response entity"
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/groups/{key}/deassociate/{action}" : {
      "post" : {
        "tags" : [ "Groups" ],
        "summary" : "Executes resource-related operations on given entity.",
        "operationId" : "deassociateGroup",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Entity's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "path",
          "description" : "Deassociation action",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "UNLINK", "DEPROVISION", "UNASSIGN" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeassociationPatch"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeassociationPatch"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeassociationPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "multipart/mixed" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Batch results available, returned as Response entity"
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/groups/{key}/{schemaType}/{schema}" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Reads the attribute, owned by the given any object, for the given schema type and schema.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
        "operationId" : "readGroupAttribute",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "any object key or name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaType",
          "in" : "path",
          "description" : "schema type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PLAIN", "DERIVED", "VIRTUAL" ]
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "schema",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Groups" ],
        "summary" : "Adds or replaces the attribute, owned by the given any object, for the given schema type and schema.",
        "operationId" : "updateGroupAttribute",
        "parameters" : [ {
          "name" : "schema",
          "in" : "path",
          "description" : "Attribute schema's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "schema type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaType",
          "in" : "path",
          "description" : "attribute",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PLAIN", "DERIVED", "VIRTUAL" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttrTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttrTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttrTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Groups" ],
        "summary" : "Deletes the attribute, owned by the given any object, for the given schema type and schema.",
        "operationId" : "deleteGroupAttribute",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "any object key or name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaType",
          "in" : "path",
          "description" : "schema type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PLAIN", "DERIVED", "VIRTUAL" ]
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "schema",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "any object key or name",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/groups/{key}/{schemaType}" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Reads the list of attributes owned by the given any object for the given schema type.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
        "operationId" : "readGroupAttributeForSchema",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "any object key or name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaType",
          "in" : "path",
          "description" : "schema type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PLAIN", "DERIVED", "VIRTUAL" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/implementations/{type}/{key}" : {
      "get" : {
        "tags" : [ "Implementations" ],
        "summary" : "Returns implementation with matching type and key.",
        "operationId" : "read_13",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "implementation type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "JWT_SSO_PROVIDER", "REPORTLET", "ACCOUNT_RULE", "PASSWORD_RULE", "ITEM_TRANSFORMER", "TASKJOB_DELEGATE", "RECON_FILTER_BUILDER", "LOGIC_ACTIONS", "PROPAGATION_ACTIONS", "PULL_ACTIONS", "PUSH_ACTIONS", "PULL_CORRELATION_RULE", "PUSH_CORRELATION_RULE", "VALIDATOR", "RECIPIENTS_PROVIDER", "AUDIT_APPENDER" ]
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "key of implementation to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Implementations" ],
        "summary" : "Updates an existing implementation.",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Implementation's type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "JWT_SSO_PROVIDER", "REPORTLET", "ACCOUNT_RULE", "PASSWORD_RULE", "ITEM_TRANSFORMER", "TASKJOB_DELEGATE", "RECON_FILTER_BUILDER", "LOGIC_ACTIONS", "PROPAGATION_ACTIONS", "PULL_ACTIONS", "PUSH_ACTIONS", "PULL_CORRELATION_RULE", "PUSH_CORRELATION_RULE", "VALIDATOR", "RECIPIENTS_PROVIDER", "AUDIT_APPENDER" ]
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Implementation's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImplementationTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImplementationTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImplementationTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Implementations" ],
        "summary" : "Creates a new implementation.",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Implementation's type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "JWT_SSO_PROVIDER", "REPORTLET", "ACCOUNT_RULE", "PASSWORD_RULE", "ITEM_TRANSFORMER", "TASKJOB_DELEGATE", "RECON_FILTER_BUILDER", "LOGIC_ACTIONS", "PROPAGATION_ACTIONS", "PULL_ACTIONS", "PUSH_ACTIONS", "PULL_CORRELATION_RULE", "PUSH_CORRELATION_RULE", "VALIDATOR", "RECIPIENTS_PROVIDER", "AUDIT_APPENDER" ]
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Implementation's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImplementationTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImplementationTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImplementationTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Implementations" ],
        "summary" : "Deletes the implementation matching the given key and type.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "implementation type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "JWT_SSO_PROVIDER", "REPORTLET", "ACCOUNT_RULE", "PASSWORD_RULE", "ITEM_TRANSFORMER", "TASKJOB_DELEGATE", "RECON_FILTER_BUILDER", "LOGIC_ACTIONS", "PROPAGATION_ACTIONS", "PULL_ACTIONS", "PUSH_ACTIONS", "PULL_CORRELATION_RULE", "PUSH_CORRELATION_RULE", "VALIDATOR", "RECIPIENTS_PROVIDER", "AUDIT_APPENDER" ]
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "key for implementation to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/implementations/{type}" : {
      "get" : {
        "tags" : [ "Implementations" ],
        "summary" : "Returns a list of all implementations of the given type.",
        "operationId" : "list_10",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "implementation type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "JWT_SSO_PROVIDER", "REPORTLET", "ACCOUNT_RULE", "PASSWORD_RULE", "ITEM_TRANSFORMER", "TASKJOB_DELEGATE", "RECON_FILTER_BUILDER", "LOGIC_ACTIONS", "PROPAGATION_ACTIONS", "PULL_ACTIONS", "PUSH_ACTIONS", "PULL_CORRELATION_RULE", "PUSH_CORRELATION_RULE", "VALIDATOR", "RECIPIENTS_PROVIDER", "AUDIT_APPENDER" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/loggers/events" : {
      "get" : {
        "tags" : [ "Loggers" ],
        "summary" : "Returns the list of all managed events in audit.",
        "operationId" : "events",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/loggers/memoryAppenders" : {
      "get" : {
        "tags" : [ "Loggers" ],
        "summary" : "Returns the list of memory appenders available in the current logging configuration.",
        "operationId" : "memoryAppenders",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/loggers/memoryAppenders/{memoryAppender}/lastLogStatements" : {
      "get" : {
        "tags" : [ "Loggers" ],
        "summary" : "Return the last log statements available in the provided memory appender.",
        "operationId" : "getLastLogStatements",
        "parameters" : [ {
          "name" : "memoryAppender",
          "in" : "path",
          "description" : "memory appender name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/loggers/{type}/{key}" : {
      "put" : {
        "tags" : [ "Loggers" ],
        "summary" : "Creates or updates (if existing) the logger with matching name.",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Logger's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "path",
          "description" : "Logger to be created or updated",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "LOG", "AUDIT" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "LoggerType to be selected",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoggerTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoggerTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoggerTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/loggers/{type}/{name}" : {
      "get" : {
        "tags" : [ "Loggers" ],
        "summary" : "Returns logger with matching type and name.",
        "operationId" : "read_14",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "LoggerType to be selected.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "LOG", "AUDIT" ]
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Logger name to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Loggers" ],
        "summary" : "Deletes the logger with matching name.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "LoggerType to be selected",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "LOG", "AUDIT" ]
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Logger name to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/loggers/{type}" : {
      "get" : {
        "tags" : [ "Loggers" ],
        "summary" : "Returns a list of loggers with matching type.",
        "operationId" : "list_11",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "LoggerType to be selected",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "LOG", "AUDIT" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/mailTemplates/{key}/{format}" : {
      "get" : {
        "tags" : [ "MailTemplates" ],
        "summary" : "Gets the template for the given key and format, if available.",
        "operationId" : "getFormat",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "mail template",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "format",
          "in" : "path",
          "description" : "template format",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "HTML", "TEXT" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "MailTemplates" ],
        "summary" : "Sets the template for the given key and format, if available.",
        "operationId" : "setFormat",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "mail template",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "format",
          "in" : "path",
          "description" : "template format",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "HTML", "TEXT" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "template to be set",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "MailTemplates" ],
        "summary" : "Removes the template for the given key and format, if available.",
        "operationId" : "removeFormat",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "mail template",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "format",
          "in" : "path",
          "description" : "template format",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "HTML", "TEXT" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/mailTemplates/{key}" : {
      "get" : {
        "tags" : [ "MailTemplates" ],
        "summary" : "Returns mail template with matching key.",
        "operationId" : "read_15",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "key of mail template to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "MailTemplates" ],
        "summary" : "Deletes the mail template matching the given key.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "key for mail template to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "mail template",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/mailTemplates" : {
      "get" : {
        "tags" : [ "MailTemplates" ],
        "summary" : "Returns a list of all mail templates.",
        "operationId" : "list_12",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "MailTemplates" ],
        "summary" : "Creates a new mail template.",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "Creates a new mail template.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MailTemplateTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MailTemplateTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MailTemplateTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "MailTemplate successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "Key value for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/notifications/job" : {
      "get" : {
        "tags" : [ "Notifications" ],
        "summary" : "Returns details about notification job.",
        "operationId" : "getJob",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Notifications" ],
        "summary" : "Executes an action on the notification job.",
        "operationId" : "actionJob",
        "parameters" : [ {
          "name" : "action",
          "in" : "query",
          "description" : "action to execute",
          "schema" : {
            "type" : "string",
            "enum" : [ "START", "STOP", "DELETE" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/notifications/{key}" : {
      "get" : {
        "tags" : [ "Notifications" ],
        "summary" : "Returns notification with matching key.",
        "operationId" : "read_16",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "key of notification to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Notifications" ],
        "summary" : "Updates the notification matching the given key.",
        "operationId" : "update_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Notification's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "key for notification to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Notifications" ],
        "summary" : "Deletes the notification matching the given key.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "key for notification to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/notifications" : {
      "get" : {
        "tags" : [ "Notifications" ],
        "summary" : "Returns a list of all notifications.",
        "operationId" : "list_13",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Notifications" ],
        "summary" : "Creates a new notification.",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "Creates a new notification.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "Notification successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "UUID generated for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/oidcclient/clients/login" : {
      "post" : {
        "tags" : [ "OIDCClients" ],
        "summary" : "Uses the provided authorization code to go through the OpenID Connect tokens process and finally creates JWT for\n the matching user, if found.",
        "operationId" : "login_1",
        "parameters" : [ {
          "name" : "redirect_uri",
          "in" : "query",
          "description" : "redirect URI",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationCode",
          "in" : "query",
          "description" : "authorization code generated by the remote OpenID Connect Provider",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "op",
          "in" : "query",
          "description" : "OpenID Connect Provider",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/oidcclient/clients/logout" : {
      "post" : {
        "tags" : [ "OIDCClients" ],
        "summary" : "Returns the endSession endpoint for the provided op.",
        "operationId" : "createLogoutRequest",
        "parameters" : [ {
          "name" : "op",
          "in" : "query",
          "description" : "OpenID Connect Provider",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/oidcclient/clients/loginRequest" : {
      "post" : {
        "tags" : [ "OIDCClients" ],
        "summary" : "Generates OpenID Connect authentication request for the Provider matching the provided op.",
        "operationId" : "createLoginRequest",
        "parameters" : [ {
          "name" : "redirect_uri",
          "in" : "query",
          "description" : "redirect URI",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "op",
          "in" : "query",
          "description" : "OpenID Connect Provider",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/oidcclient/providers/actionsClasses" : {
      "get" : {
        "tags" : [ "OIDCProviders" ],
        "summary" : "Returns the list of available OIDCProviderActions implementations.",
        "operationId" : "getActionsClasses",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/oidcclient/providers/fromDiscovery" : {
      "post" : {
        "tags" : [ "OIDCProviders" ],
        "summary" : "Creates a new OIDC Provider by using its Discovery Document.",
        "operationId" : "createFromDiscovery",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "OpenID Connect Provider configuration to be stored",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OIDCProviderTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/OIDCProviderTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/OIDCProviderTO"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "OIDC Provider successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "Key value for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/oidcclient/providers/{key}" : {
      "get" : {
        "tags" : [ "OIDCProviders" ],
        "summary" : "Returns the OIDC Provider with matching key, if available.",
        "operationId" : "read_17",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "OIDC Provider's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "OIDCProviders" ],
        "summary" : "Updates the OIDC Provider with matching key.",
        "operationId" : "update_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "OIDC Provider's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "OIDC Provider key",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OIDCProviderTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/OIDCProviderTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/OIDCProviderTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "OIDCProviders" ],
        "summary" : "Deletes the OIDC Provider with matching key.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "OIDC Provider key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/oidcclient/providers" : {
      "get" : {
        "tags" : [ "OIDCProviders" ],
        "summary" : "Returns a list of all defined OIDC Providers.",
        "operationId" : "list_14",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "OIDCProviders" ],
        "summary" : "Creates a new OIDC Provider.",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "OpenID Connect Provider configuration to be stored",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OIDCProviderTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/OIDCProviderTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/OIDCProviderTO"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "OIDC Provider successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "Key value for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/policies/{type}/{key}" : {
      "get" : {
        "tags" : [ "Policies" ],
        "summary" : "Returns the policy matching the given key.",
        "operationId" : "read_18",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "response type (extending PolicyTO)",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ACCOUNT", "PASSWORD", "PULL", "PUSH" ]
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "policy type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "key of requested policy",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Policies" ],
        "summary" : "Updates policy matching the given key.",
        "operationId" : "update_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Policy's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "path",
          "description" : "Policy to replace existing policy",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ACCOUNT", "PASSWORD", "PULL", "PUSH" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "policy type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Policies" ],
        "summary" : "Delete policy matching the given key.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "policy type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ACCOUNT", "PASSWORD", "PULL", "PUSH" ]
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "key of policy to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/policies/{type}" : {
      "get" : {
        "tags" : [ "Policies" ],
        "summary" : "Returns a list of policies of the matching type.",
        "operationId" : "list_15",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "response type (extending PolicyTO)",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ACCOUNT", "PASSWORD", "PULL", "PUSH" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "Type selector for requested policies",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Policies" ],
        "summary" : "Create a new policy.",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "policy type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ACCOUNT", "PASSWORD", "PULL", "PUSH" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "Policy to be created (needs to match type)",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "Policy successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "UUID generated for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/realms/{fullPath}" : {
      "get" : {
        "tags" : [ "Realms" ],
        "summary" : "Returns realms rooted at the given path.",
        "operationId" : "listRealm",
        "parameters" : [ {
          "name" : "fullPath",
          "in" : "path",
          "description" : "full path of the root realm where to read from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Group matching the provided key; if value looks like a UUID then it is interpreted as key, otherwise as a name.",
            "headers" : {
              "ETag" : {
                "description" : "Opaque identifier for the latest modification made to the entity returned by this endpoint",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Realms" ],
        "summary" : "Updates the realm under the given path.",
        "operationId" : "updateRealm",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "fullPath",
          "in" : "path",
          "description" : "Realm's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RealmTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RealmTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RealmTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Realm successfully updated enriched with propagation status information, as Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Realms" ],
        "summary" : "Deletes the realm under the given path.",
        "operationId" : "deleteRealm",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "fullPath",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Realm successfully deleted enriched with propagation status information, as Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/realms/{parentPath}" : {
      "post" : {
        "tags" : [ "Realms" ],
        "summary" : "Creates a new realm under the given path.",
        "operationId" : "createRootedRealm",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "parentPath",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RealmTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RealmTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RealmTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "Realm successfully created enriched with propagation status information, as Entity,or empty if 'Prefer: return-no-content' was specified",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "UUID generated for the realm created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the realm created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/realms" : {
      "get" : {
        "tags" : [ "Realms" ],
        "summary" : "Returns a list of all realms.",
        "operationId" : "listRealm",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/reconciliation/pull" : {
      "post" : {
        "tags" : [ "Reconciliation" ],
        "summary" : "Pulls the given user, group or any object from the External Resource into Syncope.",
        "operationId" : "pull",
        "parameters" : [ {
          "name" : "anyTypeKind",
          "in" : "query",
          "description" : "anyTypeKind",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "USER", "GROUP", "ANY_OBJECT" ]
          }
        }, {
          "name" : "anyKey",
          "in" : "query",
          "description" : "user, group or any object: if value looks like a UUID then it is interpreted as key, otherwise as\n a (user)name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceKey",
          "in" : "query",
          "description" : "resource key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "pull specification",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PullTaskTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/PullTaskTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/PullTaskTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/reconciliation/push" : {
      "post" : {
        "tags" : [ "Reconciliation" ],
        "summary" : "Pushes the given user, group or any object in Syncope onto the External Resource.",
        "operationId" : "push",
        "parameters" : [ {
          "name" : "anyTypeKind",
          "in" : "query",
          "description" : "anyTypeKind",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "USER", "GROUP", "ANY_OBJECT" ]
          }
        }, {
          "name" : "anyKey",
          "in" : "query",
          "description" : "user, group or any object: if value looks like a UUID then it is interpreted as key, otherwise as\n a (user)name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceKey",
          "in" : "query",
          "description" : "resource key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "push specification",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PushTaskTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/PushTaskTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/PushTaskTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/reconciliation" : {
      "get" : {
        "tags" : [ "Reconciliation" ],
        "summary" : "Gets current attributes on Syncope and on the given External Resource, related to given user, group or\n any object.",
        "operationId" : "status",
        "parameters" : [ {
          "name" : "anyTypeKind",
          "in" : "query",
          "description" : "anyTypeKind",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "USER", "GROUP", "ANY_OBJECT" ]
          }
        }, {
          "name" : "anyKey",
          "in" : "query",
          "description" : "user, group or any object: if value looks like a UUID then it is interpreted as key, otherwise as\n a (user)name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceKey",
          "in" : "query",
          "description" : "resource key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/relationshipTypes/{key}" : {
      "get" : {
        "tags" : [ "RelationshipTypes" ],
        "summary" : "Returns relationshipType with matching key.",
        "operationId" : "read_19",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "relationshipType key to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "RelationshipTypes" ],
        "summary" : "Updates the relationshipType matching the provided key.",
        "operationId" : "update_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "RelationshipType's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "relationshipType key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelationshipTypeTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelationshipTypeTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelationshipTypeTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "RelationshipTypes" ],
        "summary" : "Deletes the relationshipType matching the provided key.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "relationshipType key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/relationshipTypes" : {
      "get" : {
        "tags" : [ "RelationshipTypes" ],
        "summary" : "Returns a list of all relationshipTypes.",
        "operationId" : "list_18",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "RelationshipTypes" ],
        "summary" : "Creates a new relationshipType.",
        "operationId" : "create_1",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "relationshipType to be created",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelationshipTypeTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelationshipTypeTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelationshipTypeTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "RelationshipType successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "Key value for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/remediations/{remediationKey}" : {
      "post" : {
        "tags" : [ "Remediations" ],
        "summary" : "Perform remediation by creating the provided user, group or any object.",
        "operationId" : "remedy_2",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Entity's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "Object successfully created enriched with propagation status information, as Entity,or empty if 'Prefer: return-no-content' was specified",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "UUID generated for the object created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the object created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Remediations" ],
        "summary" : "Perform remediation by creating the provided user, group or any object.",
        "operationId" : "remedy",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Entity's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyPatch"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyPatch"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnyPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Object successfully updated enriched with propagation status information, as Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/remediations/{remediationKey}/{anyKey}" : {
      "delete" : {
        "tags" : [ "Remediations" ],
        "summary" : "Perform remediation by creating the provided user, group or any object.",
        "operationId" : "remedy_1",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "remediationKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "anyKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Object successfully deleted enriched with propagation status information, as Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/remediations/{key}" : {
      "get" : {
        "tags" : [ "Remediations" ],
        "summary" : "Returns remediation with matching key.",
        "operationId" : "read_20",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "key of remediation to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Remediations" ],
        "summary" : "Deletes the remediation matching the given key.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "key for remediation to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/remediations" : {
      "get" : {
        "tags" : [ "Remediations" ],
        "summary" : "Returns a list of all remediations.",
        "operationId" : "list_19",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "query conditions",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          }
        }, {
          "name" : "orderby",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/reports/executions/{executionKey}/stream" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Exports the report execution with matching key in the requested format.",
        "operationId" : "exportExecutionResult",
        "parameters" : [ {
          "name" : "executionKey",
          "in" : "path",
          "description" : "key of execution report to be selected",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "file-format selection",
          "schema" : {
            "type" : "string",
            "enum" : [ "XML", "HTML", "PDF", "RTF", "CSV" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/reports/{key}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Returns report with matching key.",
        "operationId" : "read_21",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "key of report to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Reports" ],
        "summary" : "Updates report with matching key.",
        "operationId" : "update_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Report's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "Deletes report with matching key",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Reports" ],
        "summary" : "Deletes report with matching key.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Deletes report with matching key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "key of execution report to be selected",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/reports" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Returns a list of all existing reports.",
        "operationId" : "list_20",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Creates a new report.",
        "operationId" : "create_1",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "report to be created",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "Report successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "UUID generated for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/reports/jobs/{key}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Returns job (running or scheduled) for the executable matching the given key.",
        "operationId" : "getJob_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "executable key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Executes an action on an existing executable's job.",
        "operationId" : "actionJob",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "executable key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "query",
          "description" : "action to execute",
          "schema" : {
            "type" : "string",
            "enum" : [ "START", "STOP", "DELETE" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/reports/{key}/executions" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Returns a paged list of executions matching the given query.",
        "operationId" : "listExecutions",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "query conditions",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          }
        }, {
          "name" : "orderby",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Reports" ],
        "summary" : "Deletes the executions belonging matching the given query.",
        "operationId" : "deleteExecutions",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "query conditions",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startedBefore",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "startedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endedBefore",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "multipart/mixed" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Batch results available, returned as Response entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/reports/executions/recent" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Returns the list of recently completed executions, ordered by end date descendent.",
        "operationId" : "listRecentExecutions",
        "parameters" : [ {
          "name" : "max",
          "in" : "query",
          "description" : "the maximum number of executions to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/reports/executions/{executionKey}" : {
      "delete" : {
        "tags" : [ "Reports" ],
        "summary" : "Deletes the executable execution matching the provided key.",
        "operationId" : "deleteExecution",
        "parameters" : [ {
          "name" : "executionKey",
          "in" : "path",
          "description" : "key of executable execution to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "query conditions",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/reports/jobs" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "List jobs (running and / or scheduled).",
        "operationId" : "listJobs",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/reports/{key}/execute" : {
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Executes the executable matching the given query.",
        "operationId" : "execute",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "query conditions",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startAt",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "dryRun",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/reportTemplates/{key}/{format}" : {
      "get" : {
        "tags" : [ "ReportTemplates" ],
        "summary" : "Gets the template for the given key and format, if available.",
        "operationId" : "getFormat_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "report template",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "format",
          "in" : "path",
          "description" : "template format",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "FO", "HTML", "CSV" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "ReportTemplates" ],
        "summary" : "Sets the template for the given key and format, if available.",
        "operationId" : "setFormat",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "report template",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "format",
          "in" : "path",
          "description" : "template format",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "FO", "HTML", "CSV" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "template to be set",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "ReportTemplates" ],
        "summary" : "Removes the template for the given key and format, if available.",
        "operationId" : "removeFormat",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "report template",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "format",
          "in" : "path",
          "description" : "template format",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "FO", "HTML", "CSV" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/reportTemplates/{key}" : {
      "get" : {
        "tags" : [ "ReportTemplates" ],
        "summary" : "Returns report template with matching key.",
        "operationId" : "read_22",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "key of report template to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "ReportTemplates" ],
        "summary" : "Deletes the report template matching the given key.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "key for report template to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "report template",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/reportTemplates" : {
      "get" : {
        "tags" : [ "ReportTemplates" ],
        "summary" : "Returns a list of all report templates.",
        "operationId" : "list_21",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "ReportTemplates" ],
        "summary" : "Creates a new report template.",
        "operationId" : "create_1",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "Creates a new report template.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportTemplateTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportTemplateTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportTemplateTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "ReportTemplate successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "Key value for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/resourcesHistory/{key}" : {
      "post" : {
        "tags" : [ "ResourceHistory" ],
        "summary" : "Restores the resource configuration history matching the provided key.",
        "operationId" : "restore_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "resource configuration history key to be restored",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "resource configuration history key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "ResourceHistory" ],
        "summary" : "Deletes the resource configuration history matching the provided key.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "resource configuration history key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/resourcesHistory/{resourceKey}" : {
      "get" : {
        "tags" : [ "ResourceHistory" ],
        "summary" : "Returns a list of all resource configuration history for the given resource key.",
        "operationId" : "list_22",
        "parameters" : [ {
          "name" : "resourceKey",
          "in" : "path",
          "description" : "resource key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/resources/{key}/{anyTypeKey}" : {
      "get" : {
        "tags" : [ "Resources" ],
        "summary" : "Returns a paged list of connector objects from external resource, for the given type, matching\n page/size conditions.",
        "operationId" : "listConnObjects",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "name of resource to read connector object from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "anyTypeKey",
          "in" : "path",
          "description" : "any object type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "query conditions",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          }
        }, {
          "name" : "connIdPagedResultsCookie",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderby",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Resources" ],
        "summary" : "Queries the connector underlying the given resource for the latest sync token value associated to the given any\n type and stores the value internally, for later usage.",
        "operationId" : "setLatestSyncToken",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "anyTypeKey",
          "in" : "path",
          "description" : "any type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "resource",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Resources" ],
        "summary" : "Removes the sync token value associated to the given any type from the given resource.",
        "operationId" : "removeSyncToken",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "resource",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "anyTypeKey",
          "in" : "path",
          "description" : "any type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "name of resource to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/resources/{key}/{anyTypeKey}/{anyKey}" : {
      "get" : {
        "tags" : [ "Resources" ],
        "summary" : "Returns connector object from the external resource, for the given type and key.",
        "operationId" : "readConnObject",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "name of resource to read connector object from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "anyTypeKey",
          "in" : "path",
          "description" : "any object type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "anyKey",
          "in" : "path",
          "description" : "any object key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/resources/{key}" : {
      "get" : {
        "tags" : [ "Resources" ],
        "summary" : "Returns the resource with matching name.",
        "operationId" : "read_23",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Name of resource to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Resources" ],
        "summary" : "Updates the resource matching the given name.",
        "operationId" : "update_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Resource's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "resource",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Resources" ],
        "summary" : "Deletes the resource matching the given name.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "name of resource to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "resource to be checked",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/resources/check" : {
      "post" : {
        "tags" : [ "Resources" ],
        "summary" : "Checks whether the connection to resource could be established.",
        "operationId" : "check_1",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "resource to be checked",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/resources" : {
      "get" : {
        "tags" : [ "Resources" ],
        "summary" : "Returns a list of all resources.",
        "operationId" : "list_23",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Resources" ],
        "summary" : "Creates a new resource.",
        "operationId" : "create_1",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "Resource to be created",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "Resource successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "Key value for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/roles/{key}/consoleLayout" : {
      "get" : {
        "tags" : [ "Roles" ],
        "summary" : "Gets the console layout information as JSON string for the role with the given key, if available.",
        "operationId" : "getConsoleLayoutInfo",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "role key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Roles" ],
        "summary" : "Sets the console layout information as JSON string for the role with the given key, if available.",
        "operationId" : "setConsoleLayoutInfo",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "role key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "console layout information to be set",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Roles" ],
        "summary" : "Removes the console layout information for the role with the given key, if available.",
        "operationId" : "removeConsoleLayoutInfo",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "role key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/roles/{key}" : {
      "get" : {
        "tags" : [ "Roles" ],
        "summary" : "Returns role with matching key.",
        "operationId" : "readRole",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "role key to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Roles" ],
        "summary" : "Updates the role matching the provided key.",
        "operationId" : "updateRole",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Role's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "role key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoleTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoleTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoleTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Roles" ],
        "summary" : "Deletes the role matching the provided key.",
        "operationId" : "deleteRole",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "role key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "role key",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/roles" : {
      "get" : {
        "tags" : [ "Roles" ],
        "summary" : "Returns a list of all roles.",
        "operationId" : "listRoles",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Roles" ],
        "summary" : "Creates a new role.",
        "operationId" : "createRole",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "role to be created",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoleTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoleTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoleTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "Role successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "Key value for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/saml2sp/identityProviders/actionsClasses" : {
      "get" : {
        "tags" : [ "SAML2IdP" ],
        "summary" : "Returns the list of available SAML2IdPActions implementations.",
        "operationId" : "getActionsClasses_1",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/saml2sp/identityProviders" : {
      "get" : {
        "tags" : [ "SAML2IdP" ],
        "summary" : "Returns a list of all defined SAML 2.0 Identity Providers.",
        "operationId" : "list_25",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "SAML2IdP" ],
        "summary" : "Imports the SAML 2.0 Identity Provider definitions available in the provided XML metadata.",
        "operationId" : "importFromMetadata",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "XML metadata",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/saml2sp/identityProviders/{key}" : {
      "get" : {
        "tags" : [ "SAML2IdP" ],
        "summary" : "Returns the SAML 2.0 Identity Provider with matching entityID, if available.",
        "operationId" : "read_25",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "SAML 2.0 Identity Provider's entityID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "SAML2IdP" ],
        "summary" : "Updates the SAML 2.0 Identity Provider with matching entityID.",
        "operationId" : "update_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "IdP's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "SAML 2.0 Identity Provider's entityID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SAML2IdPTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SAML2IdPTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SAML2IdPTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "SAML2IdP" ],
        "summary" : "Deletes the SAML 2.0 Identity Provider with matching entityID.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "SAML 2.0 Identity Provider's entityID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/saml2sp/serviceProvider/logoutResponse" : {
      "post" : {
        "tags" : [ "SAML2SP" ],
        "summary" : "Validates the received SAML 2.0 logout response.",
        "operationId" : "validateLogoutResponse",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "SAML response and relay state",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/saml2sp/serviceProvider/logoutRequest" : {
      "post" : {
        "tags" : [ "SAML2SP" ],
        "summary" : "Generates SAML 2.0 logout request for the IdP matching the requesting access token.",
        "operationId" : "createLogoutRequest_1",
        "parameters" : [ {
          "name" : "spEntityID",
          "in" : "query",
          "description" : "SAML 2.0 SP entity ID.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/saml2sp/serviceProvider/loginResponse" : {
      "post" : {
        "tags" : [ "SAML2SP" ],
        "summary" : "Validates the received SAML 2.0 authentication response and creates JWT for the matching user, if found.",
        "operationId" : "validateLoginResponse",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "SAML response and relay state",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/saml2sp/serviceProvider/loginRequest" : {
      "post" : {
        "tags" : [ "SAML2SP" ],
        "summary" : "Generates SAML 2.0 authentication request for the IdP matching the provided entity ID.",
        "operationId" : "createLoginRequest_1",
        "parameters" : [ {
          "name" : "spEntityID",
          "in" : "query",
          "description" : "SAML 2.0 SP entity ID.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "idpEntityID",
          "in" : "query",
          "description" : "SAML 2.0 IdP entity ID.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/saml2sp/serviceProvider" : {
      "get" : {
        "tags" : [ "SAML2SP" ],
        "summary" : "Returns the XML metadata for the provided SAML 2.0 Service Provider.",
        "operationId" : "getMetadata",
        "parameters" : [ {
          "name" : "spEntityID",
          "in" : "query",
          "description" : "SAML 2.0 SP entity ID.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "urlContext",
          "in" : "query",
          "description" : "SAML 2.0 SP agent URL context",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/scimv2conf" : {
      "get" : {
        "tags" : [ "SCIMConf" ],
        "summary" : "Reads SCIM configuration, generates empty if missing.",
        "operationId" : "get_1",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "SCIMConf" ],
        "summary" : "Sets SCIM configuration.",
        "operationId" : "set",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "SCIM configuration",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SCIMConf"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SCIMConf"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SCIMConf"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/schemas/{type}/{key}" : {
      "get" : {
        "tags" : [ "Schemas" ],
        "summary" : "Returns schema matching the given type and key.",
        "operationId" : "readSchema",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "actual SchemaTO",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PLAIN", "DERIVED", "VIRTUAL" ]
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "type for schemas to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "name of schema to be read",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Schemas" ],
        "summary" : "Updates the schema matching the given type and key.",
        "operationId" : "updateSchema",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Schema's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "path",
          "description" : "updated schema to be stored",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PLAIN", "DERIVED", "VIRTUAL" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "type for schema to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchemaTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchemaTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchemaTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Schemas" ],
        "summary" : "Deletes the schema matching the given type and key.",
        "operationId" : "deleteSchema",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "type for schema to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PLAIN", "DERIVED", "VIRTUAL" ]
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "name of schema to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/schemas/{type}" : {
      "get" : {
        "tags" : [ "Schemas" ],
        "summary" : "Returns a list of schemas matching the given query.",
        "operationId" : "searchSchema",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "actual SchemaTO",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PLAIN", "DERIVED", "VIRTUAL" ]
          }
        }, {
          "name" : "anyTypeClass",
          "in" : "query",
          "description" : "query conditions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "keyword",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Schemas" ],
        "summary" : "Creates a new schema.",
        "operationId" : "createSchema",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "type for schema to be created",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PLAIN", "DERIVED", "VIRTUAL" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "schema to be created",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchemaTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchemaTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchemaTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "Schema successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "Key value for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/securityQuestions/byUser/{username}" : {
      "get" : {
        "tags" : [ "SecurityQuestions" ],
        "summary" : "Ask for security question configured for the user matching the given username, if any.",
        "operationId" : "readByUser",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "username for which the security question is requested",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/securityQuestions/{key}" : {
      "get" : {
        "tags" : [ "SecurityQuestions" ],
        "summary" : "Returns security question with matching key.",
        "operationId" : "read_27",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "security question key to be read",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "SecurityQuestions" ],
        "summary" : "Updates the security question matching the provided key.",
        "operationId" : "update_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "SecurityQuestion's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "security question key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecurityQuestionTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecurityQuestionTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecurityQuestionTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "SecurityQuestions" ],
        "summary" : "Deletes the security question matching the provided key.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "security question key to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "username for which the security question is requested",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/securityQuestions" : {
      "get" : {
        "tags" : [ "SecurityQuestions" ],
        "summary" : "Returns a list of all security questions.",
        "operationId" : "list_26",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "SecurityQuestions" ],
        "summary" : "Creates a new security question.",
        "operationId" : "create_1",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "security question to be created",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecurityQuestionTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecurityQuestionTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecurityQuestionTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "SecurityQuestion successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "UUID generated for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/batch" : {
      "get" : {
        "tags" : [ "Syncope" ],
        "summary" : "Gets batch results, in case asynchronous was requested.",
        "operationId" : "batch",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "multipart/mixed" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Batch results available, returned as Response entity"
          },
          "202" : {
            "description" : "Batch results not yet available, retry later",
            "headers" : {
              "Retry-After" : {
                "description" : "seconds after which attempt again to get batch results",
                "style" : "simple",
                "schema" : {
                  "type" : "integer"
                }
              },
              "Location" : {
                "description" : "URL to poll in order to get the results of the requested batch processing",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "No batch process was found for the provided boundary"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Syncope" ],
        "summary" : "Requests for batch execution.",
        "operationId" : "batch_1",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference to process the batch request asynchronously",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "respond-async" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/mixed" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "multipart/mixed" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Batch request processed, results returned as Response entity, in case no 'Prefer: respond-async' was specified"
          },
          "202" : {
            "description" : "Batch accepted for asynchronous processing, in case 'Prefer: respond-async' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL to poll in order to get the results of the requested batch processing",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/numbers" : {
      "get" : {
        "tags" : [ "Syncope" ],
        "summary" : "Provides some numbers about the managed entities (users, groups, any objects...).",
        "operationId" : "numbers",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/assignableGroups/{realm}" : {
      "post" : {
        "tags" : [ "Syncope" ],
        "summary" : "Returns the list of Groups, according to provided paging instructions, assignable to Users and Any Objects of\n the provided Realm.",
        "operationId" : "searchAssignableGroups",
        "parameters" : [ {
          "name" : "realm",
          "in" : "path",
          "description" : "groups search term",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "term",
          "in" : "query",
          "description" : "of the User and Any Objects assignable to the returned Groups",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "search page",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "search page size",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/platform" : {
      "get" : {
        "tags" : [ "Syncope" ],
        "summary" : "Provides information summary about platform configuration (workflow adapters, provisioning managers, validators,\n actions, correlation rules, reportlets, ...).",
        "operationId" : "platform",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/userTypeExtension/{groupName}" : {
      "get" : {
        "tags" : [ "Syncope" ],
        "summary" : "Extracts User type extension information, for the provided group.",
        "operationId" : "readUserTypeExtension",
        "parameters" : [ {
          "name" : "groupName",
          "in" : "path",
          "description" : "group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/system" : {
      "get" : {
        "tags" : [ "Syncope" ],
        "summary" : "Provides information about the underlying system (Operating System, CPU / memory usage, ...).",
        "operationId" : "system",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/tasks/{type}/{key}" : {
      "get" : {
        "tags" : [ "Tasks" ],
        "summary" : "Returns the task matching the given key.",
        "operationId" : "read_28",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "type of taskTO",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PROPAGATION", "NOTIFICATION", "SCHEDULED", "PULL", "PUSH" ]
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "task type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "description" : "key of task to be read",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "whether include executions or not, defaults to true",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Tasks" ],
        "summary" : "Updates the task matching the provided key.",
        "operationId" : "update_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Task's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "path",
          "description" : "updated task to be stored",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PROPAGATION", "NOTIFICATION", "SCHEDULED", "PULL", "PUSH" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "task type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchedTaskTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchedTaskTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchedTaskTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Tasks" ],
        "summary" : "Deletes the task matching the provided key.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "task type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PROPAGATION", "NOTIFICATION", "SCHEDULED", "PULL", "PUSH" ]
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "key of task to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/tasks/{type}" : {
      "get" : {
        "tags" : [ "Tasks" ],
        "summary" : "Returns a paged list of existing tasks matching the given query.",
        "operationId" : "search_3",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "type of taskTO",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "query conditions",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          }
        }, {
          "name" : "orderby",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PROPAGATION", "NOTIFICATION", "SCHEDULED", "PULL", "PUSH" ]
          }
        }, {
          "name" : "resource",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "notification",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "anyTypeKind",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "USER", "GROUP", "ANY_OBJECT" ]
          }
        }, {
          "name" : "entityKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Tasks" ],
        "summary" : "Creates a new task.",
        "operationId" : "create_1",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "task type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PROPAGATION", "NOTIFICATION", "SCHEDULED", "PULL", "PUSH" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "task to be created",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchedTaskTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchedTaskTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchedTaskTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "Task successfully created",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "UUID generated for the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the entity created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/tasks/jobs/{key}" : {
      "get" : {
        "tags" : [ "Tasks" ],
        "summary" : "Returns job (running or scheduled) for the executable matching the given key.",
        "operationId" : "getJob_2",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "executable key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Tasks" ],
        "summary" : "Executes an action on an existing executable's job.",
        "operationId" : "actionJob",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "executable key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "query",
          "description" : "action to execute",
          "schema" : {
            "type" : "string",
            "enum" : [ "START", "STOP", "DELETE" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/tasks/{key}/executions" : {
      "get" : {
        "tags" : [ "Tasks" ],
        "summary" : "Returns a paged list of executions matching the given query.",
        "operationId" : "listExecutions_1",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "query conditions",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          }
        }, {
          "name" : "orderby",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Tasks" ],
        "summary" : "Deletes the executions belonging matching the given query.",
        "operationId" : "deleteExecutions",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "query conditions",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startedBefore",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "startedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endedBefore",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "multipart/mixed" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Batch results available, returned as Response entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/tasks/executions/recent" : {
      "get" : {
        "tags" : [ "Tasks" ],
        "summary" : "Returns the list of recently completed executions, ordered by end date descendent.",
        "operationId" : "listRecentExecutions_1",
        "parameters" : [ {
          "name" : "max",
          "in" : "query",
          "description" : "the maximum number of executions to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/tasks/executions/{executionKey}" : {
      "delete" : {
        "tags" : [ "Tasks" ],
        "summary" : "Deletes the executable execution matching the provided key.",
        "operationId" : "deleteExecution_1",
        "parameters" : [ {
          "name" : "executionKey",
          "in" : "path",
          "description" : "key of executable execution to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "query conditions",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/tasks/jobs" : {
      "get" : {
        "tags" : [ "Tasks" ],
        "summary" : "List jobs (running and / or scheduled).",
        "operationId" : "listJobs_1",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/tasks/{key}/execute" : {
      "post" : {
        "tags" : [ "Tasks" ],
        "summary" : "Executes the executable matching the given query.",
        "operationId" : "execute_1",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "query conditions",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startAt",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "dryRun",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/users/self/mustChangePassword" : {
      "post" : {
        "tags" : [ "UserSelf" ],
        "summary" : "Changes own password when change was forced by an administrator.",
        "operationId" : "mustChangePassword",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "the password value to update",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/users/self/requestPasswordReset" : {
      "post" : {
        "tags" : [ "UserSelf" ],
        "summary" : "Provides answer for the security question configured for user matching the given username, if any.\n If provided answer matches the one stored for that user, a password reset token is internally generated,\n otherwise an error is returned.",
        "operationId" : "requestPasswordReset",
        "parameters" : [ {
          "name" : "username",
          "in" : "query",
          "description" : "username for which the security answer is provided",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "actual answer text",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        }
      }
    },
    "/users/self/confirmPasswordReset" : {
      "post" : {
        "tags" : [ "UserSelf" ],
        "summary" : "Reset the password value for the user matching the provided token, if available and still valid.\n If the token actually matches one of users, and if it is still valid at the time of submission, the matching\n user's password value is set as provided. The new password value will need anyway to comply with all relevant\n password policies.",
        "operationId" : "confirmPasswordReset",
        "parameters" : [ {
          "name" : "token",
          "in" : "query",
          "description" : "password reset token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "new password to be set",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        }
      }
    },
    "/users/self/{key}" : {
      "put" : {
        "tags" : [ "UserSelf" ],
        "summary" : "Self-updates user.",
        "operationId" : "update_1",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "User's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "User successfully updated enriched with propagation status information, as Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "UserSelf" ],
        "summary" : "Self-updates user.",
        "operationId" : "update_2",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "User's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserPatch"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserPatch"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "User successfully updated enriched with propagation status information, as Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/users/self" : {
      "get" : {
        "tags" : [ "UserSelf" ],
        "summary" : "Returns the user making the service call.",
        "operationId" : "read_29",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Calling user data, including own UUID and entitlements",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "UUID of the calling user",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Syncope-Entitlements" : {
                "description" : "List of entitlements owned by the calling user",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "UserSelf" ],
        "summary" : "Self-registration for new user.",
        "operationId" : "create_1",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "storePassword",
          "in" : "query",
          "description" : "whether password shall be stored internally",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "User successfully created enriched with propagation status information, as Entity,or empty if 'Prefer: return-no-content' was specified",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "UUID generated for the user created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the user created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "UserSelf" ],
        "summary" : "Self-deletes user.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/users/self/{key}/status" : {
      "post" : {
        "tags" : [ "UserSelf" ],
        "summary" : "Self-perform a status update.",
        "operationId" : "status_1",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "User's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StatusPatch"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StatusPatch"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StatusPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "User successfully updated enriched with propagation status information, as Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/users/{key}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Reads the any object matching the provided key.",
        "operationId" : "readUser",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "if value looks like a UUID then it is interpreted as key, otherwise as a (user)name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "User matching the provided key; if value looks like a UUID then it is interpreted as key, otherwise as a username.",
            "headers" : {
              "ETag" : {
                "description" : "Opaque identifier for the latest modification made to the entity returned by this endpoint",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "Updates user matching the provided key.",
        "operationId" : "updateUser",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "User's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "User successfully updated enriched with propagation status information, as Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "Deletes any object matching provided key.",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "User, Group or Any Object successfully deleted enriched with propagation status information, as Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Users" ],
        "summary" : "Updates user matching the provided key.",
        "operationId" : "updateUser",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "User's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserPatch"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserPatch"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "User successfully updated enriched with propagation status information, as Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Returns a paged list of any objects matching the given query.",
        "operationId" : "searchUser",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "query conditions",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          }
        }, {
          "name" : "orderby",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "realm",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "/"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "fiql",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Creates a new user.",
        "operationId" : "createUser",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "storePassword",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "201" : {
            "description" : "User successfully created enriched with propagation status information, as Entity,or empty if 'Prefer: return-no-content' was specified",
            "headers" : {
              "X-Syncope-Key" : {
                "description" : "UUID generated for the user created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "URL of the user created",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/users/{key}/status" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Performs a status update on given user.",
        "operationId" : "statusUpdate",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "User's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StatusPatch"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StatusPatch"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StatusPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "User successfully updated enriched with propagation status information, as Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResult"
                }
              }
            }
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/users/{key}/associate/{action}" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Executes resource-related operations on given entity.",
        "operationId" : "associateUser",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Entity's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "path",
          "description" : "Association action",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "LINK", "PROVISION", "ASSIGN" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssociationPatch"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssociationPatch"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssociationPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "multipart/mixed" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Batch results available, returned as Response entity"
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/users/{key}/deassociate/{action}" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Executes resource-related operations on given entity.",
        "operationId" : "deassociateUser",
        "parameters" : [ {
          "name" : "Prefer",
          "in" : "header",
          "description" : "Allows client to specify a preference for the result to be returned from the server",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "return-content", "return-no-content" ],
            "default" : "return-content"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When the provided ETag value does not match the latest modification date of the entity, an error is reported and the requested operation is not performed.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Null-Priority-Async",
          "in" : "header",
          "description" : "If 'true', instructs the propagation process not to wait for completion when communicating with External Resources with no priority set",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Entity's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "path",
          "description" : "Deassociation action",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "UNLINK", "DEPROVISION", "UNASSIGN" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeassociationPatch"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeassociationPatch"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeassociationPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "multipart/mixed" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "200" : {
            "description" : "Batch results available, returned as Response entity"
          },
          "204" : {
            "description" : "No content if 'Prefer: return-no-content' was specified",
            "headers" : {
              "Preference-Applied" : {
                "description" : "Allows the server to inform the client about the fact that a specified preference was applied",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "412" : {
            "description" : "The ETag value provided via the 'If-Match' header does not match the latest modification date of the entity"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/users/{key}/{schemaType}/{schema}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Reads the attribute, owned by the given any object, for the given schema type and schema.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
        "operationId" : "readUserAttribute",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "any object key or name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaType",
          "in" : "path",
          "description" : "schema type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PLAIN", "DERIVED", "VIRTUAL" ]
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "schema",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "Adds or replaces the attribute, owned by the given any object, for the given schema type and schema.",
        "operationId" : "updateUserAttribute",
        "parameters" : [ {
          "name" : "schema",
          "in" : "path",
          "description" : "Attribute schema's key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "schema type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaType",
          "in" : "path",
          "description" : "attribute",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PLAIN", "DERIVED", "VIRTUAL" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttrTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttrTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttrTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "Deletes the attribute, owned by the given any object, for the given schema type and schema.",
        "operationId" : "deleteUserAttribute",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "any object key or name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaType",
          "in" : "path",
          "description" : "schema type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PLAIN", "DERIVED", "VIRTUAL" ]
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "schema",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "any object key or name",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/users/{key}/{schemaType}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Reads the list of attributes owned by the given any object for the given schema type.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
        "operationId" : "readUserAttributes",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "any object key or name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaType",
          "in" : "path",
          "description" : "schema type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "PLAIN", "DERIVED", "VIRTUAL" ]
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/userworkflow/forms/{userKey}" : {
      "get" : {
        "tags" : [ "UserWorkflow" ],
        "summary" : "Returns a list of available forms for the given user key.",
        "operationId" : "getFormForUser",
        "parameters" : [ {
          "name" : "userKey",
          "in" : "path",
          "description" : "user key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/userworkflow/forms" : {
      "get" : {
        "tags" : [ "UserWorkflow" ],
        "summary" : "Returns a list of all available workflow forms.",
        "operationId" : "getForms",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "query conditions",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          }
        }, {
          "name" : "orderby",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "UserWorkflow" ],
        "summary" : "Submits a workflow form.",
        "operationId" : "submitForm",
        "parameters" : [ {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "workflow form.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowFormTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowFormTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowFormTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/userworkflow/tasks/{userKey}" : {
      "get" : {
        "tags" : [ "UserWorkflow" ],
        "summary" : "Returns a list of available tasks for the given user key.",
        "operationId" : "getAvailableTasks",
        "parameters" : [ {
          "name" : "userKey",
          "in" : "path",
          "description" : "user key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/userworkflow/forms/{taskId}/claim" : {
      "post" : {
        "tags" : [ "UserWorkflow" ],
        "summary" : "Claims the form for the given task id.",
        "operationId" : "claimForm",
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "workflow task id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/userworkflow/tasks/{taskId}/execute" : {
      "post" : {
        "tags" : [ "UserWorkflow" ],
        "summary" : "Executes workflow task for matching id.",
        "operationId" : "executeTask",
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "workflow task id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "argument to be passed to workflow task",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTO"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/workflows/{anyType}/{key}/diagram.png" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "summary" : "Exports the workflow diagram representation (if available), for matching any object type and key.",
        "operationId" : "exportDiagram",
        "parameters" : [ {
          "name" : "anyType",
          "in" : "path",
          "description" : "any object type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "workflow definition key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "image/png" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/workflows/{anyType}/{key}" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "summary" : "Exports the workflow definition for matching any object type and key.",
        "operationId" : "get_2",
        "parameters" : [ {
          "name" : "anyType",
          "in" : "path",
          "description" : "any object type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "workflow definition key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Workflow" ],
        "summary" : "Imports the workflow definition for matching any object type, under the provided key.",
        "operationId" : "set",
        "parameters" : [ {
          "name" : "anyType",
          "in" : "path",
          "description" : "any object type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "workflow definition key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "description" : "workflow definition for matching kind",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/yaml" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/xml" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Workflow" ],
        "summary" : "Removes the workflow definition for matching any object type, under the provided key.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "anyType",
          "in" : "path",
          "description" : "any object type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "workflow definition key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          },
          "204" : {
            "description" : "Operation was successful"
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    },
    "/workflows/{anyType}" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "summary" : "Lists the available workflow definitions, for the given any object type.",
        "operationId" : "list_27",
        "parameters" : [ {
          "name" : "anyType",
          "in" : "path",
          "description" : "any object type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Syncope-Domain",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Master", "Two" ],
            "default" : "Master"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
            "headers" : {
              "X-Application-Error-Code" : {
                "description" : "Error code",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Application-Error-Info" : {
                "description" : "Error message",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuthentication" : [ ]
        }, {
          "Bearer" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "ConnIdObjectClassTO" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "container" : {
            "type" : "boolean"
          },
          "auxiliary" : {
            "type" : "boolean"
          },
          "attributes" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "attribute"
              }
            }
          }
        },
        "xml" : {
          "name" : "connIdObjectClass"
        }
      },
      "OIDCProviderTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "clientID" : {
            "type" : "string"
          },
          "clientSecret" : {
            "type" : "string"
          },
          "authorizationEndpoint" : {
            "type" : "string"
          },
          "tokenEndpoint" : {
            "type" : "string"
          },
          "jwksUri" : {
            "type" : "string"
          },
          "issuer" : {
            "type" : "string"
          },
          "userinfoEndpoint" : {
            "type" : "string"
          },
          "endSessionEndpoint" : {
            "type" : "string"
          },
          "hasDiscovery" : {
            "type" : "boolean"
          },
          "userTemplate" : {
            "$ref" : "#/components/schemas/UserTO"
          },
          "createUnmatching" : {
            "type" : "boolean"
          },
          "updateMatching" : {
            "type" : "boolean"
          },
          "selfRegUnmatching" : {
            "type" : "boolean"
          },
          "connObjectKeyItem" : {
            "$ref" : "#/components/schemas/ItemTO"
          },
          "items" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ItemTO"
            }
          },
          "actionsClassNames" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "actionsClassName"
              }
            }
          }
        },
        "xml" : {
          "name" : "oidcprovider"
        }
      },
      "TaskTO" : {
        "required" : [ "@class" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string",
            "readOnly" : true
          },
          "start" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "end" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "latestExecStatus" : {
            "type" : "string",
            "readOnly" : true
          },
          "executions" : {
            "type" : "array",
            "readOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ExecTO"
            }
          }
        },
        "xml" : {
          "name" : "task"
        },
        "discriminator" : {
          "propertyName" : "@class"
        }
      },
      "AnyTypeTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string",
            "enum" : [ "USER", "GROUP", "ANY_OBJECT" ]
          },
          "classes" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "class"
              }
            }
          }
        },
        "xml" : {
          "name" : "anyType"
        }
      },
      "SCIMEnterpriseUserConf" : {
        "type" : "object",
        "properties" : {
          "employeeNumber" : {
            "type" : "string"
          },
          "costCenter" : {
            "type" : "string"
          },
          "organization" : {
            "type" : "string"
          },
          "division" : {
            "type" : "string"
          },
          "department" : {
            "type" : "string"
          },
          "manager" : {
            "$ref" : "#/components/schemas/SCIMManagerConf"
          }
        }
      },
      "TypeExtensionTO" : {
        "type" : "object",
        "properties" : {
          "anyType" : {
            "type" : "string"
          },
          "auxClasses" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "privilege"
              }
            }
          }
        },
        "xml" : {
          "name" : "typeExtension"
        }
      },
      "EventCategoryTO" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "LOGIC", "TASK", "PropagationTask", "PullTask", "PushTask", "CUSTOM" ]
          },
          "category" : {
            "type" : "string"
          },
          "subcategory" : {
            "type" : "string"
          },
          "events" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "event"
              }
            }
          }
        },
        "xml" : {
          "name" : "eventCategory"
        }
      },
      "RelationshipPatch" : {
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "enum" : [ "ADD_REPLACE", "DELETE" ]
          },
          "relationshipTO" : {
            "$ref" : "#/components/schemas/RelationshipTO"
          }
        },
        "xml" : {
          "name" : "relationshipPatch"
        }
      },
      "MappingTO" : {
        "type" : "object",
        "properties" : {
          "connObjectLink" : {
            "type" : "string"
          },
          "connObjectKeyItem" : {
            "$ref" : "#/components/schemas/ItemTO"
          },
          "items" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ItemTO"
            }
          },
          "linkingItems" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ItemTO"
            }
          }
        },
        "xml" : {
          "name" : "mapping"
        }
      },
      "PagedResultRemediationTO" : {
        "type" : "object",
        "properties" : {
          "prev" : {
            "type" : "string",
            "format" : "uri"
          },
          "next" : {
            "type" : "string",
            "format" : "uri"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "result" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RemediationTO"
            }
          }
        },
        "xml" : {
          "name" : "pagedResult"
        }
      },
      "SCIMUserAddressConf" : {
        "type" : "object",
        "properties" : {
          "formatted" : {
            "type" : "string"
          },
          "streetAddress" : {
            "type" : "string"
          },
          "locality" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string"
          },
          "postalCode" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "work", "home", "other" ]
          },
          "primary" : {
            "type" : "boolean"
          }
        }
      },
      "WorkflowFormPropertyTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "String", "Long", "Enum", "Date", "Boolean" ]
          },
          "value" : {
            "type" : "string"
          },
          "readable" : {
            "type" : "boolean"
          },
          "writable" : {
            "type" : "boolean"
          },
          "required" : {
            "type" : "boolean"
          },
          "datePattern" : {
            "type" : "string"
          },
          "enumValues" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "xml" : {
                "name" : "resource"
              }
            }
          }
        },
        "xml" : {
          "name" : "workflowFormProperty"
        }
      },
      "PagedResultGroupTO" : {
        "type" : "object",
        "properties" : {
          "prev" : {
            "type" : "string",
            "format" : "uri"
          },
          "next" : {
            "type" : "string",
            "format" : "uri"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "result" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/GroupTO"
            }
          }
        },
        "xml" : {
          "name" : "pagedResult"
        }
      },
      "OIDCLoginResponseTO" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "logoutSupported" : {
            "type" : "boolean"
          },
          "selfReg" : {
            "type" : "boolean"
          },
          "accessToken" : {
            "type" : "string"
          },
          "accessTokenExpiryTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "attrs" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AttrTO"
            }
          }
        },
        "xml" : {
          "name" : "oidcLoginResponse"
        }
      },
      "PagedResultAccessTokenTO" : {
        "type" : "object",
        "properties" : {
          "prev" : {
            "type" : "string",
            "format" : "uri"
          },
          "next" : {
            "type" : "string",
            "format" : "uri"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "result" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AccessTokenTO"
            }
          }
        },
        "xml" : {
          "name" : "pagedResult"
        }
      },
      "PagedConnObjectTOResult" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "type" : "string",
            "format" : "uri"
          },
          "pagedResultsCookie" : {
            "type" : "string"
          },
          "remainingPagedResults" : {
            "type" : "integer",
            "format" : "int32"
          },
          "allResultsReturned" : {
            "type" : "boolean"
          },
          "result" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ConnObjectTO"
            }
          }
        },
        "xml" : {
          "name" : "pagedConnObjectResult"
        }
      },
      "MeanRate" : {
        "type" : "object",
        "properties" : {
          "routeId" : {
            "type" : "string"
          },
          "value" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "xml" : {
          "name" : "meanRate"
        }
      },
      "EntityTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          }
        }
      },
      "DeassociationPatch" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "action" : {
            "type" : "string",
            "enum" : [ "UNLINK", "DEPROVISION", "UNASSIGN" ]
          },
          "resources" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "resource"
              }
            }
          }
        },
        "xml" : {
          "name" : "deassociationPatch"
        }
      },
      "SchedTaskTO" : {
        "required" : [ "@class", "name" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string",
            "example" : "org.apache.syncope.common.lib.to.SchedTaskTO"
          },
          "latestExecStatus" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          },
          "startAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "cronExpression" : {
            "type" : "string"
          },
          "jobDelegate" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "lastExec" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "nextExec" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "active" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "schedTask"
        },
        "discriminator" : {
          "propertyName" : "@class"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaskTO"
        } ]
      },
      "UserTO": {
        "xml": {
          "name": "user"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/AnyTO"
          },
          {
            "required": [
              "@class",
              "username"
            ],
            "type": "object",
            "properties": {
              "@class": {
                "type": "string",
                "example": "org.apache.syncope.common.lib.to.UserTO"
              },
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "token": {
                "type": "string",
                "readOnly": true,
                "xml": {
                  "name": "role"
                }
              },
              "tokenExpireTime": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "lastLoginDate": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "changePwdDate": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "failedLogins": {
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "securityQuestion": {
                "type": "string"
              },
              "securityAnswer": {
                "type": "string"
              },
              "suspended": {
                "type": "boolean",
                "readOnly": true
              },
              "mustChangePassword": {
                "type": "boolean",
                "readOnly": true
              },
              "roles": {
                "type": "array",
                "xml": {
                  "wrapped": true
                },
                "items": {
                  "type": "string",
                  "xml": {
                    "name": "privilege"
                  }
                }
              },
              "dynRoles": {
                "type": "array",
                "readOnly": true,
                "xml": {
                  "wrapped": true
                },
                "items": {
                  "type": "string",
                  "readOnly": true,
                  "xml": {
                    "name": "role"
                  }
                }
              },
              "privileges": {
                "uniqueItems": true,
                "type": "array",
                "xml": {
                  "wrapped": true
                },
                "items": {
                  "type": "string",
                  "xml": {
                    "name": "privilege"
                  }
                }
              },
              "relationships": {
                "type": "array",
                "xml": {
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/RelationshipTO"
                }
              },
              "memberships": {
                "type": "array",
                "xml": {
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/MembershipTO"
                }
              },
              "dynMemberships": {
                "type": "array",
                "readOnly": true,
                "xml": {
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/MembershipTO"
                }
              }
            }
          }
        ]
      },
      "StringPatchItem" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "enum" : [ "ADD_REPLACE", "DELETE" ]
          },
          "value" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "stringPatchItem"
        }
      },
      "CamelRouteTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "anyTypeKind" : {
            "type" : "string",
            "enum" : [ "USER", "GROUP", "ANY_OBJECT" ]
          },
          "content" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "camelRoute"
        }
      },
      "ConnInstanceTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "adminRealm" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "connectorName" : {
            "type" : "string"
          },
          "bundleName" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "connRequestTimeout" : {
            "type" : "integer",
            "format" : "int32"
          },
          "poolConf" : {
            "$ref" : "#/components/schemas/ConnPoolConfTO"
          },
          "conf" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ConnConfProperty"
            }
          },
          "capabilities" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "capability"
              },
              "enum" : [ "AUTHENTICATE", "CREATE", "UPDATE", "DELETE", "SEARCH", "SYNC" ]
            }
          }
        },
        "xml" : {
          "name" : "connInstance"
        }
      },
      "StatusPatch" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "enum" : [ "ADD_REPLACE", "DELETE" ]
          },
          "value" : {
            "type" : "string"
          },
          "onSyncope" : {
            "type" : "boolean"
          },
          "key" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "ACTIVATE", "SUSPEND", "REACTIVATE" ]
          },
          "token" : {
            "type" : "string"
          },
          "resources" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "resource"
              }
            }
          }
        },
        "xml" : {
          "name" : "statusPatch"
        }
      },
      "ConnPoolConfTO" : {
        "type" : "object",
        "properties" : {
          "maxObjects" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minIdle" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxIdle" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxWait" : {
            "type" : "integer",
            "format" : "int64"
          },
          "minEvictableIdleTimeMillis" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "xml" : {
          "name" : "connPoolConf"
        }
      },
      "PolicyTO" : {
        "required" : [ "@class", "description" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string",
            "readOnly" : true
          },
          "description" : {
            "type" : "string"
          },
          "usedByResources" : {
            "type" : "array",
            "readOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "readOnly" : true,
              "xml" : {
                "name" : "group"
              }
            }
          },
          "usedByRealms" : {
            "type" : "array",
            "readOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "readOnly" : true,
              "xml" : {
                "name" : "group"
              }
            }
          }
        },
        "xml" : {
          "name" : "policy"
        },
        "discriminator" : {
          "propertyName" : "@class"
        }
      },
      "AccessTokenTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "body" : {
            "type" : "string"
          },
          "expiryTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "owner" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "accessToken"
        }
      },
      "PropagationTaskTO" : {
        "required" : [ "@class", "anyType", "anyTypeKind", "attributes", "connObjectKey", "entityKey", "objectClassName", "operation", "resource" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string",
            "example" : "org.apache.syncope.common.lib.to.PropagationTaskTO"
          },
          "operation" : {
            "type" : "string",
            "enum" : [ "CREATE", "UPDATE", "DELETE", "NONE" ]
          },
          "connObjectKey" : {
            "type" : "string"
          },
          "oldConnObjectKey" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "string"
          },
          "resource" : {
            "type" : "string"
          },
          "objectClassName" : {
            "type" : "string"
          },
          "anyTypeKind" : {
            "type" : "string",
            "enum" : [ "USER", "GROUP", "ANY_OBJECT" ]
          },
          "anyType" : {
            "type" : "string"
          },
          "entityKey" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "propagationTask"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaskTO"
        } ]
      },
      "VirSchemaTO" : {
        "required" : [ "@class" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string",
            "example" : "org.apache.syncope.common.lib.to.VirSchemaTO"
          },
          "readonly" : {
            "type" : "boolean"
          },
          "resource" : {
            "type" : "string"
          },
          "anyType" : {
            "type" : "string"
          },
          "extAttrName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "virSchema"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SchemaTO"
        } ]
      },
      "BooleanReplacePatchItem" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "enum" : [ "ADD_REPLACE", "DELETE" ]
          },
          "value" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "booleanReplacePatchItem"
        }
      },
      "PrivilegeTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "application" : {
            "type" : "string",
            "readOnly" : true
          },
          "spec" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "privilege"
        }
      },
      "GroupPatch" : {
        "required" : [ "@class", "key" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string",
            "example" : "org.apache.syncope.common.lib.patch.GroupPatch"
          },
          "name" : {
            "$ref" : "#/components/schemas/StringReplacePatchItem"
          },
          "userOwner" : {
            "$ref" : "#/components/schemas/StringReplacePatchItem"
          },
          "groupOwner" : {
            "$ref" : "#/components/schemas/StringReplacePatchItem"
          },
          "udynMembershipCond" : {
            "type" : "string"
          },
          "adynMembershipConds" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "xml" : {
                "name" : "resource"
              }
            }
          },
          "typeExtensions" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TypeExtensionTO"
            }
          }
        },
        "xml" : {
          "name" : "groupPatch"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/AnyPatch"
        } ]
      },
      "ReconStatus" : {
        "type" : "object",
        "properties" : {
          "onSyncope" : {
            "$ref" : "#/components/schemas/ConnObjectTO"
          },
          "onResource" : {
            "$ref" : "#/components/schemas/ConnObjectTO"
          }
        },
        "xml" : {
          "name" : "reconStatus"
        }
      },
      "PagedResultWorkflowFormTO" : {
        "type" : "object",
        "properties" : {
          "prev" : {
            "type" : "string",
            "format" : "uri"
          },
          "next" : {
            "type" : "string",
            "format" : "uri"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "result" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/WorkflowFormTO"
            }
          }
        },
        "xml" : {
          "name" : "pagedResult"
        }
      },
      "MembershipTO" : {
        "type" : "object",
        "properties" : {
          "groupKey" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "plainAttrs" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AttrTO"
            }
          },
          "derAttrs" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AttrTO"
            }
          },
          "virAttrs" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AttrTO"
            }
          }
        },
        "readOnly" : true,
        "xml" : {
          "name" : "membership"
        }
      },
      "PushTaskTO" : {
        "required" : [ "@class", "name", "resource", "sourceRealm" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string",
            "example" : "org.apache.syncope.common.lib.to.PushTaskTO"
          },
          "sourceRealm" : {
            "type" : "string"
          },
          "filters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "xml" : {
                "name" : "privilege"
              }
            }
          }
        },
        "xml" : {
          "name" : "pushTask"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProvisioningTaskTO"
        } ]
      },
      "LoggerTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "level" : {
            "type" : "string",
            "enum" : [ "OFF", "FATAL", "ERROR", "WARN", "INFO", "DEBUG", "TRACE", "ALL" ]
          }
        },
        "xml" : {
          "name" : "logger"
        }
      },
      "MembershipPatch" : {
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "enum" : [ "ADD_REPLACE", "DELETE" ]
          },
          "group" : {
            "type" : "string"
          },
          "plainAttrs" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AttrTO"
            }
          },
          "virAttrs" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AttrTO"
            }
          }
        },
        "xml" : {
          "name" : "membershipPatch"
        }
      },
      "PasswordPatch" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "enum" : [ "ADD_REPLACE", "DELETE" ]
          },
          "value" : {
            "type" : "string"
          },
          "onSyncope" : {
            "type" : "boolean"
          },
          "resources" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "resource"
              }
            }
          }
        },
        "xml" : {
          "name" : "passwordPatch"
        }
      },
      "SAML2LoginResponseTO" : {
        "type" : "object",
        "properties" : {
          "nameID" : {
            "type" : "string"
          },
          "sessionIndex" : {
            "type" : "string"
          },
          "authInstant" : {
            "type" : "string",
            "format" : "date-time"
          },
          "notOnOrAfter" : {
            "type" : "string",
            "format" : "date-time"
          },
          "accessToken" : {
            "type" : "string"
          },
          "accessTokenExpiryTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "username" : {
            "type" : "string"
          },
          "idp" : {
            "type" : "string"
          },
          "sloSupported" : {
            "type" : "boolean"
          },
          "selfReg" : {
            "type" : "boolean"
          },
          "attrs" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AttrTO"
            }
          }
        },
        "xml" : {
          "name" : "saml2LoginResponse"
        }
      },
      "ExecTO" : {
        "type" : "object",
        "properties" : {
          "start" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "end" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "key" : {
            "type" : "string"
          },
          "jobType" : {
            "type" : "string",
            "enum" : [ "NOTIFICATION", "REPORT", "TASK", "CUSTOM" ]
          },
          "refKey" : {
            "type" : "string"
          },
          "refDesc" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "exec"
        }
      },
      "PagedResultAnyObjectTO" : {
        "type" : "object",
        "properties" : {
          "prev" : {
            "type" : "string",
            "format" : "uri"
          },
          "next" : {
            "type" : "string",
            "format" : "uri"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "result" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AnyObjectTO"
            }
          }
        },
        "xml" : {
          "name" : "pagedResult"
        }
      },
      "JavaImplInfo" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "JWT_SSO_PROVIDER", "REPORTLET", "ACCOUNT_RULE", "PASSWORD_RULE", "ITEM_TRANSFORMER", "TASKJOB_DELEGATE", "RECON_FILTER_BUILDER", "LOGIC_ACTIONS", "PROPAGATION_ACTIONS", "PULL_ACTIONS", "PUSH_ACTIONS", "PULL_CORRELATION_RULE", "PUSH_CORRELATION_RULE", "VALIDATOR", "RECIPIENTS_PROVIDER", "AUDIT_APPENDER" ]
          },
          "classes" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "class"
              }
            }
          }
        },
        "xml" : {
          "name" : "javaImplInfo"
        }
      },
      "AttrPatch" : {
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "enum" : [ "ADD_REPLACE", "DELETE" ]
          },
          "attrTO" : {
            "$ref" : "#/components/schemas/AttrTO"
          }
        },
        "xml" : {
          "name" : "attrPatch"
        }
      },
      "ErrorTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "AssociatedAnys", "AssociatedResources", "Composite", "ConcurrentModification", "ConnectorException", "DataIntegrityViolation", "EntityExists", "GenericPersistence", "HasChildren", "InvalidPrivilege", "InvalidImplementation", "InvalidSecurityAnswer", "InvalidEntity", "InvalidLogger", "InvalidConnInstance", "InvalidConnIdConf", "InvalidPolicy", "InvalidConf", "InvalidPath", "InvalidProvision", "InvalidOrgUnit", "InvalidReport", "InvalidReportExec", "InvalidRelationship", "InvalidRelationshipType", "InvalidAnyType", "InvalidAnyObject", "InvalidGroup", "InvalidSchemaDefinition", "InvalidSearchExpression", "InvalidPageOrSize", "InvalidPropagationTaskExecReport", "InvalidPlainSchema", "InvalidDerSchema", "InvalidVirSchema", "InvalidMapping", "InvalidMembership", "InvalidRealm", "InvalidDynRealm", "InvalidRole", "InvalidUser", "InvalidExternalResource", "InvalidPullTask", "InvalidRequest", "InvalidValues", "NotFound", "RequiredValuesMissing", "RESTValidation", "GroupOwnership", "InUse", "Scheduling", "DelegatedAdministration", "Reconciliation", "Unknown", "Workflow" ]
          },
          "elements" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "element"
              }
            }
          }
        },
        "xml" : {
          "name" : "error"
        }
      },
      "ResourceHistoryConfTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "creator" : {
            "type" : "string"
          },
          "creation" : {
            "type" : "string",
            "format" : "date-time"
          },
          "resourceTO" : {
            "$ref" : "#/components/schemas/ResourceTO"
          }
        },
        "xml" : {
          "name" : "resourceHistoryConf"
        }
      },
      "DomainTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "adminPwd" : {
            "type" : "string"
          },
          "adminCipherAlgorithm" : {
            "type" : "string",
            "enum" : [ "SHA", "SHA1", "SHA256", "SHA512", "AES", "SMD5", "SSHA", "SSHA1", "SSHA256", "SSHA512", "BCRYPT" ]
          }
        },
        "xml" : {
          "name" : "domain"
        }
      },
      "ProvisioningTaskTO" : {
        "required" : [ "@class", "name", "resource" ],
        "type" : "object",
        "properties" : {
          "resource" : {
            "type" : "string"
          },
          "performCreate" : {
            "type" : "boolean"
          },
          "performUpdate" : {
            "type" : "boolean"
          },
          "performDelete" : {
            "type" : "boolean"
          },
          "syncStatus" : {
            "type" : "boolean"
          },
          "unmatchingRule" : {
            "type" : "string",
            "enum" : [ "IGNORE", "ASSIGN", "PROVISION", "UNLINK" ]
          },
          "matchingRule" : {
            "type" : "string",
            "enum" : [ "IGNORE", "UPDATE", "DEPROVISION", "UNASSIGN", "UNLINK", "LINK" ]
          },
          "actions" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "action"
              }
            }
          }
        },
        "xml" : {
          "name" : "provisioningTask"
        },
        "discriminator" : {
          "propertyName" : "@class"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SchedTaskTO"
        }, {
          "$ref" : "#/components/schemas/TaskTO"
        } ]
      },
      "SAML2ReceivedResponseTO" : {
        "type" : "object",
        "properties" : {
          "spEntityID" : {
            "type" : "string"
          },
          "urlContext" : {
            "type" : "string"
          },
          "samlResponse" : {
            "type" : "string"
          },
          "relayState" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "saml2ReceivedResponse"
        }
      },
      "LogStatementTO" : {
        "type" : "object",
        "properties" : {
          "level" : {
            "type" : "string",
            "enum" : [ "OFF", "FATAL", "ERROR", "WARN", "INFO", "DEBUG", "TRACE", "ALL" ]
          },
          "loggerName" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "stackTrace" : {
            "type" : "string"
          },
          "timeMillis" : {
            "type" : "integer",
            "format" : "int64"
          },
          "threadId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "threadName" : {
            "type" : "string"
          },
          "threadPriority" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "logStatement"
        }
      },
      "LoadInstant" : {
        "type" : "object",
        "properties" : {
          "uptime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "systemLoadAverage" : {
            "type" : "number",
            "format" : "double"
          },
          "totalMemory" : {
            "type" : "integer",
            "format" : "int64"
          },
          "freeMemory" : {
            "type" : "integer",
            "format" : "int64"
          },
          "maxMemory" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "xml" : {
          "name" : "loadInstant"
        }
      },
      "AnyTO" : {
        "required" : [ "@class" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          },
          "type" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          },
          "realm" : {
            "type" : "string"
          },
          "creator" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "lastModifier" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          },
          "lastChangeDate" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          },
          "dynRealms" : {
            "type" : "array",
            "readOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "readOnly" : true,
              "xml" : {
                "name" : "role"
              }
            }
          },
          "auxClasses" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "privilege"
              }
            }
          },
          "plainAttrs" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AttrTO"
            }
          },
          "derAttrs" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AttrTO"
            }
          },
          "virAttrs" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AttrTO"
            }
          },
          "resources" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "privilege"
              }
            }
          }
        },
        "discriminator" : {
          "propertyName" : "@class"
        }
      },
      "ProvisioningPolicyTO" : {
        "required" : [ "@class", "description" ],
        "type" : "object",
        "properties" : {
          "conflictResolutionAction" : {
            "type" : "string",
            "enum" : [ "IGNORE", "FIRSTMATCH", "LASTMATCH", "ALL" ]
          },
          "correlationRules" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "xml" : {
                "name" : "passthroughResource"
              }
            }
          }
        },
        "xml" : {
          "name" : "policy"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyTO"
        } ]
      },
      "ReportTemplateTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "reportTemplate"
        }
      },
      "SystemInfo" : {
        "type" : "object",
        "properties" : {
          "hostname" : {
            "type" : "string"
          },
          "os" : {
            "type" : "string"
          },
          "jvm" : {
            "type" : "string"
          },
          "availableProcessors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "load" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/LoadInstant"
            }
          }
        },
        "xml" : {
          "name" : "systemInfo"
        }
      },
      "NotificationTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "abouts" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "xml" : {
                "name" : "staticRecipient"
              }
            }
          },
          "recipientsFIQL" : {
            "type" : "string"
          },
          "recipientAttrName" : {
            "type" : "string"
          },
          "selfAsRecipient" : {
            "type" : "boolean"
          },
          "recipientsProvider" : {
            "type" : "string"
          },
          "sender" : {
            "type" : "string"
          },
          "subject" : {
            "type" : "string"
          },
          "template" : {
            "type" : "string"
          },
          "traceLevel" : {
            "type" : "string",
            "enum" : [ "NONE", "FAILURES", "SUMMARY", "ALL" ]
          },
          "active" : {
            "type" : "boolean"
          },
          "events" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "event"
              }
            }
          },
          "staticRecipients" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "staticRecipient"
              }
            }
          }
        },
        "xml" : {
          "name" : "notification"
        }
      },
      "LogAppender" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "RealmTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "parent" : {
            "type" : "string"
          },
          "fullPath" : {
            "type" : "string"
          },
          "accountPolicy" : {
            "type" : "string"
          },
          "passwordPolicy" : {
            "type" : "string"
          },
          "templates" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AnyTO"
            }
          },
          "actions" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "action"
              }
            }
          },
          "resources" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "action"
              }
            }
          }
        },
        "xml" : {
          "name" : "realm"
        }
      },
      "ConnConfProperty" : {
        "type" : "object",
        "properties" : {
          "schema" : {
            "$ref" : "#/components/schemas/ConnConfPropSchema"
          },
          "overridable" : {
            "type" : "boolean"
          },
          "values" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "object"
            }
          }
        }
      },
      "SCIMConf" : {
        "type" : "object",
        "properties" : {
          "generalConf" : {
            "$ref" : "#/components/schemas/SCIMGeneralConf"
          },
          "userConf" : {
            "$ref" : "#/components/schemas/SCIMUserConf"
          },
          "enterpriseUserConf" : {
            "$ref" : "#/components/schemas/SCIMEnterpriseUserConf"
          }
        }
      },
      "DynRealmTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "dynMembershipConds" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "dynRealm"
        }
      },
      "WorkflowFormTO" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "taskId" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "createTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "owner" : {
            "type" : "string"
          },
          "userTO" : {
            "$ref" : "#/components/schemas/UserTO"
          },
          "userPatch" : {
            "$ref" : "#/components/schemas/UserPatch"
          },
          "workflowFormProperties" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/WorkflowFormPropertyTO"
            }
          }
        },
        "xml" : {
          "name" : "workflowForm"
        }
      },
      "ImplementationTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "engine" : {
            "type" : "string",
            "enum" : [ "JAVA", "GROOVY" ]
          },
          "type" : {
            "type" : "string",
            "enum" : [ "JWT_SSO_PROVIDER", "REPORTLET", "ACCOUNT_RULE", "PASSWORD_RULE", "ITEM_TRANSFORMER", "TASKJOB_DELEGATE", "RECON_FILTER_BUILDER", "LOGIC_ACTIONS", "PROPAGATION_ACTIONS", "PULL_ACTIONS", "PUSH_ACTIONS", "PULL_CORRELATION_RULE", "PUSH_CORRELATION_RULE", "VALIDATOR", "RECIPIENTS_PROVIDER", "AUDIT_APPENDER" ]
          },
          "body" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "implementation"
        }
      },
      "MailTemplateTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "mailTemplate"
        }
      },
      "NumbersInfo" : {
        "type" : "object",
        "properties" : {
          "totalUsers" : {
            "type" : "integer",
            "format" : "int32"
          },
          "any2ByRealm" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "totalGroups" : {
            "type" : "integer",
            "format" : "int32"
          },
          "anyType1" : {
            "type" : "string"
          },
          "totalAny1" : {
            "type" : "integer",
            "format" : "int32"
          },
          "anyType2" : {
            "type" : "string"
          },
          "totalAny2" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalResources" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalRoles" : {
            "type" : "integer",
            "format" : "int32"
          },
          "confCompleteness" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean"
            }
          }
        },
        "xml" : {
          "name" : "numbersInfo"
        }
      },
      "DerSchemaTO" : {
        "required" : [ "@class" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string",
            "example" : "org.apache.syncope.common.lib.to.DerSchemaTO"
          },
          "expression" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "derSchema"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SchemaTO"
        } ]
      },
      "JobTO" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "NOTIFICATION", "REPORT", "TASK", "CUSTOM" ]
          },
          "refKey" : {
            "type" : "string"
          },
          "refDesc" : {
            "type" : "string"
          },
          "running" : {
            "type" : "boolean"
          },
          "scheduled" : {
            "type" : "boolean"
          },
          "start" : {
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "job"
        }
      },
      "PagedResultTaskTO" : {
        "type" : "object",
        "properties" : {
          "prev" : {
            "type" : "string",
            "format" : "uri"
          },
          "next" : {
            "type" : "string",
            "format" : "uri"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "result" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TaskTO"
            }
          }
        },
        "xml" : {
          "name" : "pagedResult"
        }
      },
      "PagedResultUserTO" : {
        "type" : "object",
        "properties" : {
          "prev" : {
            "type" : "string",
            "format" : "uri"
          },
          "next" : {
            "type" : "string",
            "format" : "uri"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "result" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/UserTO"
            }
          }
        },
        "xml" : {
          "name" : "pagedResult"
        }
      },
      "SAML2IdPTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "entityID" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "metadata" : {
            "type" : "string"
          },
          "createUnmatching" : {
            "type" : "boolean"
          },
          "updateMatching" : {
            "type" : "boolean"
          },
          "selfRegUnmatching" : {
            "type" : "boolean"
          },
          "useDeflateEncoding" : {
            "type" : "boolean"
          },
          "supportUnsolicited" : {
            "type" : "boolean"
          },
          "bindingType" : {
            "type" : "string",
            "enum" : [ "POST", "REDIRECT" ]
          },
          "logoutSupported" : {
            "type" : "boolean"
          },
          "userTemplate" : {
            "$ref" : "#/components/schemas/UserTO"
          },
          "connObjectKeyItem" : {
            "$ref" : "#/components/schemas/ItemTO"
          },
          "items" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ItemTO"
            }
          },
          "actions" : {
            "type" : "array",
            "xml" : {
              "name" : "actionsClassNames",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "actionsClassNames"
              }
            }
          }
        },
        "xml" : {
          "name" : "saml2idp"
        }
      },
      "ConnBundleTO" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "bundleName" : {
            "type" : "string"
          },
          "connectorName" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ConnConfPropSchema"
            }
          }
        },
        "xml" : {
          "name" : "connectorBundle"
        }
      },
      "RelationshipTypeTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "relationshipType"
        }
      },
      "SCIMComplexConfIMCanonicalType" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "display" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "aim", "gtalk", "icq", "xmpp", "msn", "skype", "qq", "yahoo" ]
          },
          "primary" : {
            "type" : "boolean"
          }
        }
      },
      "SCIMGeneralConf" : {
        "type" : "object",
        "properties" : {
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "bulkMaxOperations" : {
            "type" : "integer",
            "format" : "int32"
          },
          "bulkMaxPayloadSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "filterMaxResults" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ProvisioningResult" : {
        "type" : "object",
        "properties" : {
          "entity" : {
            "$ref" : "#/components/schemas/EntityTO"
          },
          "propagationStatuses" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PropagationStatus"
            }
          }
        },
        "xml" : {
          "name" : "provisioningResult"
        }
      },
      "PropagationStatus" : {
        "type" : "object",
        "properties" : {
          "beforeObj" : {
            "$ref" : "#/components/schemas/ConnObjectTO"
          },
          "afterObj" : {
            "$ref" : "#/components/schemas/ConnObjectTO"
          },
          "resource" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "CREATED", "SUCCESS", "FAILURE", "NOT_ATTEMPTED" ]
          },
          "failureReason" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "propagationStatus"
        }
      },
      "ReportTO" : {
        "type" : "object",
        "properties" : {
          "start" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "end" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "cronExpression" : {
            "type" : "string"
          },
          "latestExecStatus" : {
            "type" : "string"
          },
          "lastExec" : {
            "type" : "string",
            "format" : "date-time"
          },
          "nextExec" : {
            "type" : "string",
            "format" : "date-time"
          },
          "active" : {
            "type" : "boolean"
          },
          "template" : {
            "type" : "string"
          },
          "reportlets" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "reportlets"
              }
            }
          },
          "executions" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ExecTO"
            }
          }
        },
        "xml" : {
          "name" : "report"
        }
      },
      "SCIMComplexConfPhotoCanonicalType" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "display" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "photo", "thumbnail" ]
          },
          "primary" : {
            "type" : "boolean"
          }
        }
      },
      "RoleTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "dynMembershipCond" : {
            "type" : "string"
          },
          "entitlements" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "entitlement"
              }
            }
          },
          "realms" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "realm"
              }
            }
          },
          "dynRealms" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "dynRealm"
              }
            }
          },
          "privileges" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "privilege"
              }
            }
          }
        },
        "xml" : {
          "name" : "role"
        }
      },
      "GroupTO": {
        "xml": {
          "name": "group"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/AnyTO"
          },
          {
            "required": [
              "@class"
            ],
            "type": "object",
            "properties": {
              "@class": {
                "type": "string",
                "example": "org.apache.syncope.common.lib.to.GroupTO"
              },
              "name": {
                "type": "string"
              },
              "userOwner": {
                "type": "string"
              },
              "groupOwner": {
                "type": "string"
              },
              "udynMembershipCond": {
                "type": "string"
              },
              "staticUserMembershipCount": {
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "dynamicUserMembershipCount": {
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "staticAnyObjectMembershipCount": {
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "dynamicAnyObjectMembershipCount": {
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "adynMembershipConds": {
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "xml": {
                    "name": "privilege"
                  }
                }
              },
              "typeExtensions": {
                "type": "array",
                "xml": {
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/TypeExtensionTO"
                }
              }
            }
          }
        ]
      },
      "SecurityQuestionTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "content" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "securityQuestion"
        }
      },
      "OrgUnitTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "objectClass" : {
            "type" : "string"
          },
          "syncToken" : {
            "type" : "string"
          },
          "ignoreCaseMatch" : {
            "type" : "boolean"
          },
          "connObjectLink" : {
            "type" : "string"
          },
          "connObjectKeyItem" : {
            "$ref" : "#/components/schemas/ItemTO"
          },
          "items" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ItemTO"
            }
          }
        },
        "xml" : {
          "name" : "orgUnit"
        }
      },
      "SCIMComplexConfEmailCanonicalType" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "display" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "work", "home", "other" ]
          },
          "primary" : {
            "type" : "boolean"
          }
        }
      },
      "StringReplacePatchItem" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "enum" : [ "ADD_REPLACE", "DELETE" ]
          },
          "value" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "stringReplacePatchItem"
        }
      },
      "RelationshipTO" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "otherEndType" : {
            "type" : "string"
          },
          "otherEndKey" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "relationship"
        }
      },
      "ResourceTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "connector" : {
            "type" : "string"
          },
          "connectorDisplayName" : {
            "type" : "string"
          },
          "orgUnit" : {
            "$ref" : "#/components/schemas/OrgUnitTO"
          },
          "propagationPriority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "randomPwdIfNotProvided" : {
            "type" : "boolean"
          },
          "enforceMandatoryCondition" : {
            "type" : "boolean"
          },
          "createTraceLevel" : {
            "type" : "string",
            "enum" : [ "NONE", "FAILURES", "SUMMARY", "ALL" ]
          },
          "updateTraceLevel" : {
            "type" : "string",
            "enum" : [ "NONE", "FAILURES", "SUMMARY", "ALL" ]
          },
          "deleteTraceLevel" : {
            "type" : "string",
            "enum" : [ "NONE", "FAILURES", "SUMMARY", "ALL" ]
          },
          "provisioningTraceLevel" : {
            "type" : "string",
            "enum" : [ "NONE", "FAILURES", "SUMMARY", "ALL" ]
          },
          "passwordPolicy" : {
            "type" : "string"
          },
          "accountPolicy" : {
            "type" : "string"
          },
          "pullPolicy" : {
            "type" : "string"
          },
          "pushPolicy" : {
            "type" : "string"
          },
          "overrideCapabilities" : {
            "type" : "boolean"
          },
          "provisions" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ProvisionTO"
            }
          },
          "confOverride" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ConnConfProperty"
            }
          },
          "capabilitiesOverride" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "capability"
              },
              "enum" : [ "AUTHENTICATE", "CREATE", "UPDATE", "DELETE", "SEARCH", "SYNC" ]
            }
          },
          "propagationActions" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "propagationAction"
              }
            }
          }
        },
        "xml" : {
          "name" : "resource"
        }
      },
      "SchemaTO" : {
        "required" : [ "@class" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "anyTypeClass" : {
            "type" : "string"
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "xml" : {
                "name" : "privilege"
              }
            }
          }
        },
        "xml" : {
          "name" : "schema"
        },
        "discriminator" : {
          "propertyName" : "@class"
        }
      },
      "PullTaskTO" : {
        "required" : [ "@class", "destinationRealm", "name", "pullMode", "resource" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string",
            "example" : "org.apache.syncope.common.lib.to.PullTaskTO"
          },
          "pullMode" : {
            "type" : "string",
            "enum" : [ "FULL_RECONCILIATION", "FILTERED_RECONCILIATION", "INCREMENTAL" ]
          },
          "reconFilterBuilder" : {
            "type" : "string"
          },
          "destinationRealm" : {
            "type" : "string"
          },
          "remediation" : {
            "type" : "boolean"
          },
          "templates" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AnyTO"
            }
          },
          "actions" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "privilege"
              }
            }
          }
        },
        "xml" : {
          "name" : "pullTask"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProvisioningTaskTO"
        } ]
      },
      "ConnInstanceHistoryConfTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "creator" : {
            "type" : "string"
          },
          "creation" : {
            "type" : "string",
            "format" : "date-time"
          },
          "connInstanceTO" : {
            "$ref" : "#/components/schemas/ConnInstanceTO"
          }
        },
        "xml" : {
          "name" : "connInstanceHistoryConf"
        }
      },
      "ProvisionTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "anyType" : {
            "type" : "string"
          },
          "objectClass" : {
            "type" : "string"
          },
          "syncToken" : {
            "type" : "string"
          },
          "ignoreCaseMatch" : {
            "type" : "boolean"
          },
          "uidOnCreate" : {
            "type" : "string"
          },
          "mapping" : {
            "$ref" : "#/components/schemas/MappingTO"
          },
          "auxClasses" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "class"
              }
            }
          },
          "virSchemas" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "virSchema"
              }
            }
          }
        },
        "xml" : {
          "name" : "provision"
        }
      },
      "ConnObjectTO" : {
        "type" : "object",
        "properties" : {
          "attrs" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AttrTO"
            }
          }
        },
        "xml" : {
          "name" : "connObject"
        }
      },
      "AssociationPatch" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "enum" : [ "ADD_REPLACE", "DELETE" ]
          },
          "value" : {
            "type" : "string"
          },
          "onSyncope" : {
            "type" : "boolean"
          },
          "key" : {
            "type" : "string"
          },
          "action" : {
            "type" : "string",
            "enum" : [ "LINK", "PROVISION", "ASSIGN" ]
          },
          "resources" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "resource"
              }
            }
          }
        },
        "xml" : {
          "name" : "associationPatch"
        }
      },
      "ConnConfPropSchema" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "helpMessage" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "required" : {
            "type" : "boolean"
          },
          "order" : {
            "type" : "integer",
            "format" : "int32"
          },
          "confidential" : {
            "type" : "boolean"
          },
          "defaultValues" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "object"
            }
          }
        }
      },
      "SAML2RequestTO" : {
        "type" : "object",
        "properties" : {
          "idpServiceAddress" : {
            "type" : "string"
          },
          "bindingType" : {
            "type" : "string",
            "enum" : [ "POST", "REDIRECT" ]
          },
          "content" : {
            "type" : "string"
          },
          "relayState" : {
            "type" : "string"
          },
          "signAlg" : {
            "type" : "string"
          },
          "signature" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "saml2request"
        }
      },
      "SCIMComplexConfPhoneNumberCanonicalType" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "display" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "work", "home", "mobile", "fax", "pager", "other" ]
          },
          "primary" : {
            "type" : "boolean"
          }
        }
      },
      "AttrTO" : {
        "required" : [ "schema", "values" ],
        "type" : "object",
        "properties" : {
          "schemaInfo" : {
            "$ref" : "#/components/schemas/SchemaTO"
          },
          "schema" : {
            "type" : "string"
          },
          "values" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "value"
              }
            }
          }
        },
        "xml" : {
          "name" : "attribute"
        }
      },
      "SCIMUserConf" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/SCIMUserNameConf"
          },
          "displayName" : {
            "type" : "string"
          },
          "nickName" : {
            "type" : "string"
          },
          "profileUrl" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "userType" : {
            "type" : "string"
          },
          "preferredLanguage" : {
            "type" : "string"
          },
          "locale" : {
            "type" : "string"
          },
          "timezone" : {
            "type" : "string"
          },
          "emails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SCIMComplexConfEmailCanonicalType"
            }
          },
          "phoneNumbers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SCIMComplexConfPhoneNumberCanonicalType"
            }
          },
          "ims" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SCIMComplexConfIMCanonicalType"
            }
          },
          "photos" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SCIMComplexConfPhotoCanonicalType"
            }
          },
          "addresses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SCIMUserAddressConf"
            }
          },
          "x509Certificates" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ItemTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "intAttrName" : {
            "type" : "string"
          },
          "extAttrName" : {
            "type" : "string"
          },
          "connObjectKey" : {
            "type" : "boolean"
          },
          "password" : {
            "type" : "boolean"
          },
          "mandatoryCondition" : {
            "type" : "string"
          },
          "purpose" : {
            "type" : "string",
            "enum" : [ "BOTH", "PULL", "PROPAGATION", "NONE" ]
          },
          "propagationJEXLTransformer" : {
            "type" : "string"
          },
          "pullJEXLTransformer" : {
            "type" : "string"
          },
          "transformers" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "transformer"
              }
            }
          }
        },
        "xml" : {
          "name" : "item"
        }
      },
      "UserPatch" : {
        "required" : [ "@class", "key" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string",
            "example" : "org.apache.syncope.common.lib.patch.UserPatch"
          },
          "username" : {
            "$ref" : "#/components/schemas/StringReplacePatchItem"
          },
          "password" : {
            "$ref" : "#/components/schemas/PasswordPatch"
          },
          "securityQuestion" : {
            "$ref" : "#/components/schemas/StringReplacePatchItem"
          },
          "securityAnswer" : {
            "$ref" : "#/components/schemas/StringReplacePatchItem"
          },
          "mustChangePassword" : {
            "$ref" : "#/components/schemas/BooleanReplacePatchItem"
          },
          "relationships" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelationshipPatch"
            }
          },
          "memberships" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MembershipPatch"
            }
          },
          "roles" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/StringPatchItem"
            }
          }
        },
        "xml" : {
          "name" : "userPatch"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/AnyPatch"
        } ]
      },
      "AnyObjectTO": {
        "xml": {
          "name": "anyObject"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/AnyTO"
          },
          {
            "required": [
              "@class"
            ],
            "type": "object",
            "properties": {
              "@class": {
                "type": "string",
                "example": "org.apache.syncope.common.lib.to.AnyObjectTO"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "type": "array",
                "xml": {
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/RelationshipTO"
                }
              },
              "memberships": {
                "type": "array",
                "xml": {
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/MembershipTO"
                }
              },
              "dynMemberships": {
                "type": "array",
                "readOnly": true,
                "xml": {
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/MembershipTO"
                }
              }
            }
          }
        ]
      },
      "CamelMetrics" : {
        "type" : "object",
        "properties" : {
          "responseMeanRates" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MeanRate"
            }
          }
        },
        "xml" : {
          "name" : "camelMetrics"
        }
      },
      "AnyTypeClassTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "plainSchemas" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "schema"
              }
            }
          },
          "derSchemas" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "schema"
              }
            }
          },
          "virSchemas" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "schema"
              }
            }
          },
          "inUseByTypes" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "anyTypeClass"
              }
            }
          }
        },
        "xml" : {
          "name" : "anyTypeClass"
        }
      },
      "AnyObjectPatch" : {
        "required" : [ "@class", "key" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string",
            "example" : "org.apache.syncope.common.lib.patch.AnyObjectPatch"
          },
          "name" : {
            "$ref" : "#/components/schemas/StringReplacePatchItem"
          },
          "relationships" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelationshipPatch"
            }
          },
          "memberships" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MembershipPatch"
            }
          }
        },
        "xml" : {
          "name" : "anyObjectPatch"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/AnyPatch"
        } ]
      },
      "SCIMUserNameConf" : {
        "type" : "object",
        "properties" : {
          "formatted" : {
            "type" : "string"
          },
          "familyName" : {
            "type" : "string"
          },
          "givenName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "honorificPrefix" : {
            "type" : "string"
          },
          "honorificSuffix" : {
            "type" : "string"
          }
        }
      },
      "PasswordPolicyTO" : {
        "required" : [ "@class", "description" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string",
            "example" : "org.apache.syncope.common.lib.policy.PasswordPolicyTO"
          },
          "allowNullPassword" : {
            "type" : "boolean"
          },
          "historyLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "rules" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "passthroughResource"
              }
            }
          }
        },
        "xml" : {
          "name" : "passwordPolicy"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyTO"
        } ]
      },
      "NotificationTaskTO" : {
        "required" : [ "@class" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string",
            "example" : "org.apache.syncope.common.lib.to.NotificationTaskTO"
          },
          "latestExecStatus" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          },
          "notification" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          },
          "anyTypeKind" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "USER", "GROUP", "ANY_OBJECT" ]
          },
          "entityKey" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          },
          "sender" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          },
          "subject" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          },
          "textBody" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          },
          "htmlBody" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          },
          "executed" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "traceLevel" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "NONE", "FAILURES", "SUMMARY", "ALL" ]
          },
          "recipients" : {
            "uniqueItems" : true,
            "type" : "array",
            "readOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "readOnly" : true,
              "xml" : {
                "name" : "recipient"
              }
            }
          }
        },
        "xml" : {
          "name" : "notificationTask"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaskTO"
        } ]
      },
      "PullPolicyTO" : {
        "required" : [ "@class", "description" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string",
            "example" : "org.apache.syncope.common.lib.policy.PullPolicyTO"
          },
          "conflictResolutionAction" : {
            "type" : "string",
            "enum" : [ "IGNORE", "FIRSTMATCH", "LASTMATCH", "ALL" ]
          },
          "correlationRules" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "xml" : {
                "name" : "passthroughResource"
              }
            }
          }
        },
        "xml" : {
          "name" : "pullPolicy"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProvisioningPolicyTO"
        }, {
          "$ref" : "#/components/schemas/PolicyTO"
        } ]
      },
      "OIDCLogoutRequestTO" : {
        "type" : "object",
        "properties" : {
          "endSessionEndpoint" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "oidcLogoutRequest"
        }
      },
      "RemediationTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "anyType" : {
            "type" : "string",
            "readOnly" : true
          },
          "operation" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "CREATE", "UPDATE", "DELETE", "NONE" ]
          },
          "anyTOPayload" : {
            "$ref" : "#/components/schemas/AnyTO"
          },
          "anyPatchPayload" : {
            "$ref" : "#/components/schemas/AnyPatch"
          },
          "keyPayload" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          },
          "error" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          },
          "instant" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "pullTask" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          },
          "resource" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          },
          "remoteName" : {
            "type" : "string",
            "readOnly" : true,
            "xml" : {
              "name" : "role"
            }
          }
        },
        "xml" : {
          "name" : "remediation"
        }
      },
      "SCIMManagerConf" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          }
        }
      },
      "AccountPolicyTO" : {
        "required" : [ "@class", "description" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string",
            "example" : "org.apache.syncope.common.lib.policy.AccountPolicyTO"
          },
          "propagateSuspension" : {
            "type" : "boolean"
          },
          "maxAuthenticationAttempts" : {
            "type" : "integer",
            "format" : "int32"
          },
          "rules" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "rule"
              }
            }
          },
          "passthroughResources" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "passthroughResource"
              }
            }
          }
        },
        "xml" : {
          "name" : "accountPolicy"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyTO"
        } ]
      },
      "PlatformInfo" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string"
          },
          "buildNumber" : {
            "type" : "string"
          },
          "selfRegAllowed" : {
            "type" : "boolean"
          },
          "pwdResetAllowed" : {
            "type" : "boolean"
          },
          "pwdResetRequiringSecurityQuestions" : {
            "type" : "boolean"
          },
          "propagationTaskExecutor" : {
            "type" : "string"
          },
          "anyObjectWorkflowAdapter" : {
            "type" : "string"
          },
          "userWorkflowAdapter" : {
            "type" : "string"
          },
          "groupWorkflowAdapter" : {
            "type" : "string"
          },
          "anyObjectProvisioningManager" : {
            "type" : "string"
          },
          "userProvisioningManager" : {
            "type" : "string"
          },
          "groupProvisioningManager" : {
            "type" : "string"
          },
          "virAttrCache" : {
            "type" : "string"
          },
          "passwordGenerator" : {
            "type" : "string"
          },
          "anySearchDAO" : {
            "type" : "string"
          },
          "connIdLocations" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "connIdLocation"
              }
            }
          },
          "anyTypes" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "anyType"
              }
            }
          },
          "userClasses" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "userClass"
              }
            }
          },
          "anyTypeClasses" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "anyTypeClass"
              }
            }
          },
          "resources" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "resource"
              }
            }
          },
          "entitlements" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "entitlement"
              }
            }
          },
          "javaImplInfos" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/JavaImplInfo"
            }
          }
        },
        "xml" : {
          "name" : "platformInfo"
        }
      },
      "PagedResultExecTO" : {
        "type" : "object",
        "properties" : {
          "prev" : {
            "type" : "string",
            "format" : "uri"
          },
          "next" : {
            "type" : "string",
            "format" : "uri"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "result" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ExecTO"
            }
          }
        },
        "xml" : {
          "name" : "pagedResult"
        }
      },
      "WorkflowTaskTO" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "workflowTask"
        }
      },
      "PlainSchemaTO" : {
        "required" : [ "@class" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string",
            "example" : "org.apache.syncope.common.lib.to.PlainSchemaTO"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "String", "Long", "Double", "Boolean", "Date", "Enum", "Encrypted", "Binary" ]
          },
          "mandatoryCondition" : {
            "type" : "string"
          },
          "multivalue" : {
            "type" : "boolean"
          },
          "uniqueConstraint" : {
            "type" : "boolean"
          },
          "readonly" : {
            "type" : "boolean"
          },
          "conversionPattern" : {
            "type" : "string"
          },
          "validator" : {
            "type" : "string"
          },
          "enumerationValues" : {
            "type" : "string"
          },
          "enumerationKeys" : {
            "type" : "string"
          },
          "secretKey" : {
            "type" : "string"
          },
          "cipherAlgorithm" : {
            "type" : "string",
            "enum" : [ "SHA", "SHA1", "SHA256", "SHA512", "AES", "SMD5", "SSHA", "SSHA1", "SSHA256", "SSHA512", "BCRYPT" ]
          },
          "mimeType" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "plainSchema"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SchemaTO"
        } ]
      },
      "AnyPatch" : {
        "required" : [ "@class", "key" ],
        "type" : "object",
        "properties" : {
          "@class" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "realm" : {
            "$ref" : "#/components/schemas/StringReplacePatchItem"
          },
          "auxClasses" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/StringPatchItem"
            }
          },
          "plainAttrs" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AttrPatch"
            }
          },
          "virAttrs" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AttrTO"
            }
          },
          "resources" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/StringPatchItem"
            }
          }
        },
        "discriminator" : {
          "propertyName" : "@class"
        }
      },
      "OIDCLoginRequestTO" : {
        "type" : "object",
        "properties" : {
          "providerAddress" : {
            "type" : "string"
          },
          "clientId" : {
            "type" : "string"
          },
          "scope" : {
            "type" : "string"
          },
          "responseType" : {
            "type" : "string"
          },
          "redirectURI" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "oidcLoginRequest"
        }
      },
      "WorkflowDefinitionTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "modelId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "main" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "workflowDefinition"
        }
      },
      "ApplicationTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "privileges" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PrivilegeTO"
            }
          }
        },
        "xml" : {
          "name" : "application"
        }
      }
    },
    "responses" : {
      "400" : {
        "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
        "headers" : {
          "X-Application-Error-Code" : {
            "description" : "Error code",
            "schema" : {
              "type" : "string"
            }
          },
          "X-Application-Error-Info" : {
            "description" : "Error message",
            "schema" : {
              "type" : "string"
            }
          }
        },
        "content" : {
          "application/json" : {
            "schema" : { }
          },
          "application/xml" : {
            "schema" : { }
          }
        }
      }
    },
    "securitySchemes" : {
      "BasicAuthentication" : {
        "type" : "http",
        "scheme" : "basic"
      },
      "Bearer" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}