diff --git a/openapi.json b/openapi.json
index 1967193..71b75b1 100644
--- a/openapi.json
+++ b/openapi.json
@@ -394,7 +394,7 @@
       "get" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Reads the any object matching the provided key.",
-        "operationId" : "read_1",
+        "operationId" : "readAnyObject",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -460,7 +460,25 @@
                   "type" : "string"
                 }
               }
+            },
+            "content" : {
+              "application/json" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/AnyObjectTO"
+                }
+              },
+              "application/yaml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/AnyObjectTO"
+                }
+              },
+              "application/xml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/AnyObjectTO"
+                }
+              }
             }
+
           }
         },
         "security" : [ {
@@ -472,7 +490,7 @@
       "put" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Updates any object matching the provided key.",
-        "operationId" : "update",
+        "operationId" : "updateAnyObject",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -620,7 +638,7 @@
       "delete" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Deletes any object matching provided key.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteAnyObject",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -747,7 +765,7 @@
       "patch" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Updates any object matching the provided key.",
-        "operationId" : "update_1",
+        "operationId" : "updateAnyObjectPartial",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -897,7 +915,7 @@
       "get" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Returns a paged list of any objects matching the given query.",
-        "operationId" : "search",
+        "operationId" : "searchAnyObject",
         "parameters" : [ {
           "name" : "page",
           "in" : "query",
@@ -998,7 +1016,7 @@
       "post" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Creates a new any object.",
-        "operationId" : "create",
+        "operationId" : "createAnyObject",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -1140,7 +1158,7 @@
       "post" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Executes resource-related operations on given entity.",
-        "operationId" : "associate",
+        "operationId" : "associateAnyObject",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -1272,7 +1290,7 @@
       "post" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Executes resource-related operations on given entity.",
-        "operationId" : "deassociate",
+        "operationId" : "deassociateAnyObject",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -1404,7 +1422,7 @@
       "get" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Reads the attribute, owned by the given any object, for the given schema type and schema.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
-        "operationId" : "read",
+        "operationId" : "readAnyObjectAttribute",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -1487,7 +1505,7 @@
       "put" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Adds or replaces the attribute, owned by the given any object, for the given schema type and schema.",
-        "operationId" : "update",
+        "operationId" : "updateAnyObjectAttribute",
         "parameters" : [ {
           "name" : "schema",
           "in" : "path",
@@ -1590,7 +1608,7 @@
       "delete" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Deletes the attribute, owned by the given any object, for the given schema type and schema.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteAnyObjectAttribute",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -1679,7 +1697,7 @@
       "get" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Reads the list of attributes owned by the given any object for the given schema type.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
-        "operationId" : "read_2",
+        "operationId" : "readAnyObjectAttributeForSchema",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -1756,7 +1774,7 @@
       "get" : {
         "tags" : [ "AnyTypeClasses" ],
         "summary" : "Returns anyTypeClass with matching key.",
-        "operationId" : "read_3",
+        "operationId" : "readAnyTypeClass",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -1822,7 +1840,7 @@
       "put" : {
         "tags" : [ "AnyTypeClasses" ],
         "summary" : "Updates the anyTypeClass matching the provided key.",
-        "operationId" : "update",
+        "operationId" : "updateAnyTypeClass",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -1912,7 +1930,7 @@
       "delete" : {
         "tags" : [ "AnyTypeClasses" ],
         "summary" : "Deletes the anyTypeClass matching the provided key.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteAnyTypeClass",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -1983,7 +2001,7 @@
       "get" : {
         "tags" : [ "AnyTypeClasses" ],
         "summary" : "Returns a list of all anyTypeClasss.",
-        "operationId" : "list_1",
+        "operationId" : "listAnyTypeClass",
         "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -2041,7 +2059,7 @@
       "post" : {
         "tags" : [ "AnyTypeClasses" ],
         "summary" : "Creates a new anyTypeClass.",
-        "operationId" : "create",
+        "operationId" : "createAnyTypeClass",
         "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -2141,7 +2159,7 @@
       "get" : {
         "tags" : [ "AnyTypes" ],
         "summary" : "Returns anyType with matching key.",
-        "operationId" : "read_4",
+        "operationId" : "readAnyType",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -2207,7 +2225,7 @@
       "put" : {
         "tags" : [ "AnyTypes" ],
         "summary" : "Updates the anyType matching the provided key.",
-        "operationId" : "update",
+        "operationId" : "updateAnyType",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -2287,7 +2305,7 @@
       "delete" : {
         "tags" : [ "AnyTypes" ],
         "summary" : "Deletes the anyType matching the provided key.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteAnyType",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -2358,7 +2376,7 @@
       "get" : {
         "tags" : [ "AnyTypes" ],
         "summary" : "Returns a list of all anyTypes.",
-        "operationId" : "list_2",
+        "operationId" : "listAnyType",
         "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -2416,7 +2434,7 @@
       "post" : {
         "tags" : [ "AnyTypes" ],
         "summary" : "Creates a new anyType.",
-        "operationId" : "create",
+        "operationId" : "createAnyType",
         "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -5423,12 +5441,29 @@
         } ]
       }
     },
-    "/groups/own" : {
-      "get" : {
+    "/groups/{key}/members/{action}" : {
+      "post" : {
         "tags" : [ "Groups" ],
-        "summary" : "This method allows a user to read his own groups.",
-        "operationId" : "own",
+        "summary" : "(De)provision all members of the given group from / onto all the resources associated to it.",
+        "operationId" : "provisionMembers",
         "parameters" : [ {
+          "name" : "key",
+          "in" : "path",
+          "description" : "group key",
+          "required" : true,
+          "schema" : {
+            "type" : "string"
+          }
+        }, {
+          "name" : "action",
+          "in" : "path",
+          "description" : "action type to perform on all group members",
+          "required" : true,
+          "schema" : {
+            "type" : "string",
+            "enum" : [ "PROVISION", "DEPROVISION" ]
+          }
+        }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
           "required" : true,
@@ -5483,29 +5518,12 @@
         } ]
       }
     },
-    "/groups/{key}/members/{action}" : {
-      "post" : {
+    "/groups/own" : {
+      "get" : {
         "tags" : [ "Groups" ],
-        "summary" : "(De)provision all members of the given group from / onto all the resources associated to it.",
-        "operationId" : "provisionMembers",
+        "summary" : "This method allows a user to read his own groups.",
+        "operationId" : "own",
         "parameters" : [ {
-          "name" : "key",
-          "in" : "path",
-          "description" : "group key",
-          "required" : true,
-          "schema" : {
-            "type" : "string"
-          }
-        }, {
-          "name" : "action",
-          "in" : "path",
-          "description" : "action type to perform on all group members",
-          "required" : true,
-          "schema" : {
-            "type" : "string",
-            "enum" : [ "PROVISION", "DEPROVISION" ]
-          }
-        }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
           "required" : true,
@@ -5564,7 +5582,7 @@
       "get" : {
         "tags" : [ "Groups" ],
         "summary" : "Reads the any object matching the provided key.",
-        "operationId" : "read_11",
+        "operationId" : "readGroup",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -5630,6 +5648,23 @@
                   "type" : "string"
                 }
               }
+            },
+            "content" : {
+              "application/json" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/GroupTO"
+                }
+              },
+              "application/yaml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/GroupTO"
+                }
+              },
+              "application/xml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/GroupTO"
+                }
+              }
             }
           }
         },
@@ -5642,7 +5677,7 @@
       "put" : {
         "tags" : [ "Groups" ],
         "summary" : "Updates group matching the provided key.",
-        "operationId" : "update_1",
+        "operationId" : "updateGroup",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -5790,7 +5825,7 @@
       "delete" : {
         "tags" : [ "Groups" ],
         "summary" : "Deletes any object matching provided key.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteGroup",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -5917,7 +5952,7 @@
       "patch" : {
         "tags" : [ "Groups" ],
         "summary" : "Updates group matching the provided key.",
-        "operationId" : "update",
+        "operationId" : "updateGroup",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -6067,7 +6102,7 @@
       "get" : {
         "tags" : [ "Groups" ],
         "summary" : "Returns a paged list of any objects matching the given query.",
-        "operationId" : "search_1",
+        "operationId" : "searchGroup",
         "parameters" : [ {
           "name" : "page",
           "in" : "query",
@@ -6168,7 +6203,7 @@
       "post" : {
         "tags" : [ "Groups" ],
         "summary" : "Creates a new group.",
-        "operationId" : "create",
+        "operationId" : "createGroup",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -6310,7 +6345,7 @@
       "post" : {
         "tags" : [ "Groups" ],
         "summary" : "Executes resource-related operations on given entity.",
-        "operationId" : "associate_1",
+        "operationId" : "associateGroup",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -6442,7 +6477,7 @@
       "post" : {
         "tags" : [ "Groups" ],
         "summary" : "Executes resource-related operations on given entity.",
-        "operationId" : "deassociate_1",
+        "operationId" : "deassociateGroup",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -6574,7 +6609,7 @@
       "get" : {
         "tags" : [ "Groups" ],
         "summary" : "Reads the attribute, owned by the given any object, for the given schema type and schema.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
-        "operationId" : "read_10",
+        "operationId" : "readGroupAttribute",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -6657,7 +6692,7 @@
       "put" : {
         "tags" : [ "Groups" ],
         "summary" : "Adds or replaces the attribute, owned by the given any object, for the given schema type and schema.",
-        "operationId" : "update",
+        "operationId" : "updateGroupAttribute",
         "parameters" : [ {
           "name" : "schema",
           "in" : "path",
@@ -6760,7 +6795,7 @@
       "delete" : {
         "tags" : [ "Groups" ],
         "summary" : "Deletes the attribute, owned by the given any object, for the given schema type and schema.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteGroupAttribute",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -6849,7 +6884,7 @@
       "get" : {
         "tags" : [ "Groups" ],
         "summary" : "Reads the list of attributes owned by the given any object for the given schema type.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
-        "operationId" : "read_12",
+        "operationId" : "readGroupAttributeForSchema",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -10080,7 +10115,7 @@
       "get" : {
         "tags" : [ "Realms" ],
         "summary" : "Returns realms rooted at the given path.",
-        "operationId" : "list_16",
+        "operationId" : "listRealm",
         "parameters" : [ {
           "name" : "fullPath",
           "in" : "path",
@@ -10135,6 +10170,35 @@
                 }
               }
             }
+          },
+          "200" : {
+            "description" : "Group matching the provided key; if value looks like a UUID then it is interpreted as key, otherwise as a name.",
+            "headers" : {
+              "ETag" : {
+                "description" : "Opaque identifier for the latest modification made to the entity returned by this endpoint",
+                "style" : "simple",
+                "schema" : {
+                  "type" : "string"
+                }
+              }
+            },
+            "content" : {
+              "application/json" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/GroupTO"
+                }
+              },
+              "application/yaml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/GroupTO"
+                }
+              },
+              "application/xml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/GroupTO"
+                }
+              }
+            }
           }
         },
         "security" : [ {
@@ -10146,7 +10210,7 @@
       "put" : {
         "tags" : [ "Realms" ],
         "summary" : "Updates the realm under the given path.",
-        "operationId" : "update_1",
+        "operationId" : "updateRealm",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -10283,7 +10347,7 @@
       "delete" : {
         "tags" : [ "Realms" ],
         "summary" : "Deletes the realm under the given path.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteRealm",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -10401,7 +10465,7 @@
       "post" : {
         "tags" : [ "Realms" ],
         "summary" : "Creates a new realm under the given path.",
-        "operationId" : "create",
+        "operationId" : "createRootedRealm",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -10550,7 +10614,7 @@
       "get" : {
         "tags" : [ "Realms" ],
         "summary" : "Returns a list of all realms.",
-        "operationId" : "list_17",
+        "operationId" : "listRealm",
         "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -14731,7 +14795,7 @@
       "get" : {
         "tags" : [ "Roles" ],
         "summary" : "Returns role with matching key.",
-        "operationId" : "read_24",
+        "operationId" : "readRole",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -14797,7 +14861,7 @@
       "put" : {
         "tags" : [ "Roles" ],
         "summary" : "Updates the role matching the provided key.",
-        "operationId" : "update_1",
+        "operationId" : "updateRole",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -14887,7 +14951,7 @@
       "delete" : {
         "tags" : [ "Roles" ],
         "summary" : "Deletes the role matching the provided key.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteRole",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -14959,7 +15023,7 @@
       "get" : {
         "tags" : [ "Roles" ],
         "summary" : "Returns a list of all roles.",
-        "operationId" : "list_24",
+        "operationId" : "listRoles",
         "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -15017,7 +15081,7 @@
       "post" : {
         "tags" : [ "Roles" ],
         "summary" : "Creates a new role.",
-        "operationId" : "create_1",
+        "operationId" : "createRole",
         "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -15669,28 +15733,15 @@
         } ]
       }
     },
-    "/saml2sp/serviceProvider/loginRequest" : {
+    "/saml2sp/serviceProvider/loginResponse" : {
       "post" : {
         "tags" : [ "SAML2SP" ],
-        "summary" : "Generates SAML 2.0 authentication request for the IdP matching the provided entity ID.",
-        "operationId" : "createLoginRequest_1",
+        "summary" : "Validates the received SAML 2.0 authentication response and creates JWT for the matching user, if found.",
+        "operationId" : "validateLoginResponse",
         "parameters" : [ {
-          "name" : "spEntityID",
-          "in" : "query",
-          "description" : "SAML 2.0 SP entity ID.",
-          "schema" : {
-            "type" : "string"
-          }
-        }, {
-          "name" : "idpEntityID",
-          "in" : "query",
-          "description" : "SAML 2.0 IdP entity ID.",
-          "schema" : {
-            "type" : "string"
-          }
-        }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
+          "description" : "SAML response and relay state",
           "required" : true,
           "schema" : {
             "type" : "string",
@@ -15698,6 +15749,25 @@
             "default" : "Master"
           }
         } ],
+        "requestBody" : {
+          "content" : {
+            "application/json" : {
+              "schema" : {
+                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
+              }
+            },
+            "application/yaml" : {
+              "schema" : {
+                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
+              }
+            },
+            "application/xml" : {
+              "schema" : {
+                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
+              }
+            }
+          }
+        },
         "responses" : {
           "400" : {
             "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
@@ -15743,15 +15813,28 @@
         } ]
       }
     },
-    "/saml2sp/serviceProvider/loginResponse" : {
+    "/saml2sp/serviceProvider/loginRequest" : {
       "post" : {
         "tags" : [ "SAML2SP" ],
-        "summary" : "Validates the received SAML 2.0 authentication response and creates JWT for the matching user, if found.",
-        "operationId" : "validateLoginResponse",
+        "summary" : "Generates SAML 2.0 authentication request for the IdP matching the provided entity ID.",
+        "operationId" : "createLoginRequest_1",
         "parameters" : [ {
+          "name" : "spEntityID",
+          "in" : "query",
+          "description" : "SAML 2.0 SP entity ID.",
+          "schema" : {
+            "type" : "string"
+          }
+        }, {
+          "name" : "idpEntityID",
+          "in" : "query",
+          "description" : "SAML 2.0 IdP entity ID.",
+          "schema" : {
+            "type" : "string"
+          }
+        }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
-          "description" : "SAML response and relay state",
           "required" : true,
           "schema" : {
             "type" : "string",
@@ -15759,25 +15842,6 @@
             "default" : "Master"
           }
         } ],
-        "requestBody" : {
-          "content" : {
-            "application/json" : {
-              "schema" : {
-                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
-              }
-            },
-            "application/yaml" : {
-              "schema" : {
-                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
-              }
-            },
-            "application/xml" : {
-              "schema" : {
-                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
-              }
-            }
-          }
-        },
         "responses" : {
           "400" : {
             "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
@@ -16033,7 +16097,7 @@
       "get" : {
         "tags" : [ "Schemas" ],
         "summary" : "Returns schema matching the given type and key.",
-        "operationId" : "read_26",
+        "operationId" : "readSchema",
         "parameters" : [ {
           "name" : "type",
           "in" : "path",
@@ -16109,7 +16173,7 @@
       "put" : {
         "tags" : [ "Schemas" ],
         "summary" : "Updates the schema matching the given type and key.",
-        "operationId" : "update_1",
+        "operationId" : "updateSchema",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -16208,7 +16272,7 @@
       "delete" : {
         "tags" : [ "Schemas" ],
         "summary" : "Deletes the schema matching the given type and key.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteSchema",
         "parameters" : [ {
           "name" : "type",
           "in" : "path",
@@ -16288,7 +16352,7 @@
       "get" : {
         "tags" : [ "Schemas" ],
         "summary" : "Returns a list of schemas matching the given query.",
-        "operationId" : "search_2",
+        "operationId" : "searchSchema",
         "parameters" : [ {
           "name" : "type",
           "in" : "path",
@@ -16371,7 +16435,7 @@
       "post" : {
         "tags" : [ "Schemas" ],
         "summary" : "Creates a new schema.",
-        "operationId" : "create_1",
+        "operationId" : "createSchema",
         "parameters" : [ {
           "name" : "type",
           "in" : "path",
@@ -16934,7 +16998,7 @@
       "get" : {
         "tags" : [ "Syncope" ],
         "summary" : "Gets batch results, in case asynchronous was requested.",
-        "operationId" : "batch_1",
+        "operationId" : "batch",
         "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -17007,7 +17071,7 @@
       "post" : {
         "tags" : [ "Syncope" ],
         "summary" : "Requests for batch execution.",
-        "operationId" : "batch",
+        "operationId" : "batch_1",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -17093,11 +17157,11 @@
         } ]
       }
     },
-    "/platform" : {
+    "/numbers" : {
       "get" : {
         "tags" : [ "Syncope" ],
-        "summary" : "Provides information summary about platform configuration (workflow adapters, provisioning managers, validators,\n actions, correlation rules, reportlets, ...).",
-        "operationId" : "platform",
+        "summary" : "Provides some numbers about the managed entities (users, groups, any objects...).",
+        "operationId" : "numbers",
         "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -17246,20 +17310,12 @@
         } ]
       }
     },
-    "/userTypeExtension/{groupName}" : {
+    "/platform" : {
       "get" : {
         "tags" : [ "Syncope" ],
-        "summary" : "Extracts User type extension information, for the provided group.",
-        "operationId" : "readUserTypeExtension",
+        "summary" : "Provides information summary about platform configuration (workflow adapters, provisioning managers, validators,\n actions, correlation rules, reportlets, ...).",
+        "operationId" : "platform",
         "parameters" : [ {
-          "name" : "groupName",
-          "in" : "path",
-          "description" : "group name",
-          "required" : true,
-          "schema" : {
-            "type" : "string"
-          }
-        }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
           "required" : true,
@@ -17314,12 +17370,20 @@
         } ]
       }
     },
-    "/numbers" : {
+    "/userTypeExtension/{groupName}" : {
       "get" : {
         "tags" : [ "Syncope" ],
-        "summary" : "Provides some numbers about the managed entities (users, groups, any objects...).",
-        "operationId" : "numbers",
+        "summary" : "Extracts User type extension information, for the provided group.",
+        "operationId" : "readUserTypeExtension",
         "parameters" : [ {
+          "name" : "groupName",
+          "in" : "path",
+          "description" : "group name",
+          "required" : true,
+          "schema" : {
+            "type" : "string"
+          }
+        }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
           "required" : true,
@@ -18593,15 +18657,15 @@
         } ]
       }
     },
-    "/users/self/confirmPasswordReset" : {
+    "/users/self/requestPasswordReset" : {
       "post" : {
         "tags" : [ "UserSelf" ],
-        "summary" : "Reset the password value for the user matching the provided token, if available and still valid.\n If the token actually matches one of users, and if it is still valid at the time of submission, the matching\n user's password value is set as provided. The new password value will need anyway to comply with all relevant\n password policies.",
-        "operationId" : "confirmPasswordReset",
+        "summary" : "Provides answer for the security question configured for user matching the given username, if any.\n If provided answer matches the one stored for that user, a password reset token is internally generated,\n otherwise an error is returned.",
+        "operationId" : "requestPasswordReset",
         "parameters" : [ {
-          "name" : "token",
+          "name" : "username",
           "in" : "query",
-          "description" : "password reset token",
+          "description" : "username for which the security answer is provided",
           "required" : true,
           "schema" : {
             "type" : "string"
@@ -18609,7 +18673,7 @@
         }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
-          "description" : "new password to be set",
+          "description" : "actual answer text",
           "required" : true,
           "schema" : {
             "type" : "string",
@@ -18669,15 +18733,15 @@
         }
       }
     },
-    "/users/self/requestPasswordReset" : {
+    "/users/self/confirmPasswordReset" : {
       "post" : {
         "tags" : [ "UserSelf" ],
-        "summary" : "Provides answer for the security question configured for user matching the given username, if any.\n If provided answer matches the one stored for that user, a password reset token is internally generated,\n otherwise an error is returned.",
-        "operationId" : "requestPasswordReset",
+        "summary" : "Reset the password value for the user matching the provided token, if available and still valid.\n If the token actually matches one of users, and if it is still valid at the time of submission, the matching\n user's password value is set as provided. The new password value will need anyway to comply with all relevant\n password policies.",
+        "operationId" : "confirmPasswordReset",
         "parameters" : [ {
-          "name" : "username",
+          "name" : "token",
           "in" : "query",
-          "description" : "username for which the security answer is provided",
+          "description" : "password reset token",
           "required" : true,
           "schema" : {
             "type" : "string"
@@ -18685,7 +18749,7 @@
         }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
-          "description" : "actual answer text",
+          "description" : "new password to be set",
           "required" : true,
           "schema" : {
             "type" : "string",
@@ -19425,7 +19489,7 @@
       "get" : {
         "tags" : [ "Users" ],
         "summary" : "Reads the any object matching the provided key.",
-        "operationId" : "read_31",
+        "operationId" : "readUser",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -19491,6 +19555,23 @@
                   "type" : "string"
                 }
               }
+            },
+            "content" : {
+              "application/json" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/UserTO"
+                }
+              },
+              "application/yaml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/UserTO"
+                }
+              },
+              "application/xml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/UserTO"
+                }
+              }
             }
           }
         },
@@ -19503,7 +19584,7 @@
       "put" : {
         "tags" : [ "Users" ],
         "summary" : "Updates user matching the provided key.",
-        "operationId" : "update_2",
+        "operationId" : "updateUser",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -19651,7 +19732,7 @@
       "delete" : {
         "tags" : [ "Users" ],
         "summary" : "Deletes any object matching provided key.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteUser",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -19778,7 +19859,7 @@
       "patch" : {
         "tags" : [ "Users" ],
         "summary" : "Updates user matching the provided key.",
-        "operationId" : "update_3",
+        "operationId" : "updateUser",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -19928,7 +20009,7 @@
       "get" : {
         "tags" : [ "Users" ],
         "summary" : "Returns a paged list of any objects matching the given query.",
-        "operationId" : "search_4",
+        "operationId" : "searchUser",
         "parameters" : [ {
           "name" : "page",
           "in" : "query",
@@ -20029,7 +20110,7 @@
       "post" : {
         "tags" : [ "Users" ],
         "summary" : "Creates a new user.",
-        "operationId" : "create_1",
+        "operationId" : "createUser",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -20178,7 +20259,7 @@
       "post" : {
         "tags" : [ "Users" ],
         "summary" : "Performs a status update on given user.",
-        "operationId" : "status_2",
+        "operationId" : "statusUpdate",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -20328,7 +20409,7 @@
       "post" : {
         "tags" : [ "Users" ],
         "summary" : "Executes resource-related operations on given entity.",
-        "operationId" : "associate_2",
+        "operationId" : "associateUser",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -20460,7 +20541,7 @@
       "post" : {
         "tags" : [ "Users" ],
         "summary" : "Executes resource-related operations on given entity.",
-        "operationId" : "deassociate_2",
+        "operationId" : "deassociateUser",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -20592,7 +20673,7 @@
       "get" : {
         "tags" : [ "Users" ],
         "summary" : "Reads the attribute, owned by the given any object, for the given schema type and schema.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
-        "operationId" : "read_30",
+        "operationId" : "readUserAttribute",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -20675,7 +20756,7 @@
       "put" : {
         "tags" : [ "Users" ],
         "summary" : "Adds or replaces the attribute, owned by the given any object, for the given schema type and schema.",
-        "operationId" : "update_2",
+        "operationId" : "updateUserAttribute",
         "parameters" : [ {
           "name" : "schema",
           "in" : "path",
@@ -20778,7 +20859,7 @@
       "delete" : {
         "tags" : [ "Users" ],
         "summary" : "Deletes the attribute, owned by the given any object, for the given schema type and schema.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteUserAttribute",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -20867,7 +20948,7 @@
       "get" : {
         "tags" : [ "Users" ],
         "summary" : "Reads the list of attributes owned by the given any object for the given schema type.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
-        "operationId" : "read_32",
+        "operationId" : "readUserAttributes",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
