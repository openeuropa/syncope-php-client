diff --git a/openapi.json b/openapi.json
index d215c45..26b8ce3 100644
--- a/openapi.json
+++ b/openapi.json
@@ -394,7 +394,7 @@
       "get" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Reads the any object matching the provided key.",
-        "operationId" : "read_1",
+        "operationId" : "readAnyObject",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -460,7 +460,25 @@
                   "type" : "string"
                 }
               }
+            },
+            "content" : {
+              "application/json" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/AnyObjectTO"
+                }
+              },
+              "application/yaml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/AnyObjectTO"
+                }
+              },
+              "application/xml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/AnyObjectTO"
+                }
+              }
             }
+
           }
         },
         "security" : [ {
@@ -472,7 +490,7 @@
       "put" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Updates any object matching the provided key.",
-        "operationId" : "update",
+        "operationId" : "updateAnyObject",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -620,7 +638,7 @@
       "delete" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Deletes any object matching provided key.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteAnyObject",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -747,7 +765,7 @@
       "patch" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Updates any object matching the provided key.",
-        "operationId" : "update_1",
+        "operationId" : "updateAnyObjectPartial",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -897,7 +915,7 @@
       "get" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Returns a paged list of any objects matching the given query.",
-        "operationId" : "search",
+        "operationId" : "searchAnyObject",
         "parameters" : [ {
           "name" : "page",
           "in" : "query",
@@ -952,6 +970,35 @@
           }
         } ],
         "responses" : {
+          "200": {
+            "description": "A list of AnyObjects.",
+            "content": {
+              "application/json": {
+                "schema": {
+                  "type": "array",
+                  "items": {
+                    "$ref": "#/components/schemas/AnyObject"
+                  }
+                }
+              },
+              "application/yaml": {
+                "schema": {
+                  "type": "array",
+                  "items": {
+                    "$ref": "#/components/schemas/AnyObject"
+                  }
+                }
+              },
+              "application/xml": {
+                "schema": {
+                  "type": "array",
+                  "items": {
+                    "$ref": "#/components/schemas/AnyObject"
+                  }
+                }
+              }
+            }
+          },
           "400" : {
             "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
             "headers" : {
@@ -998,7 +1045,7 @@
       "post" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Creates a new any object.",
-        "operationId" : "create",
+        "operationId" : "createAnyObject",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -1140,7 +1187,7 @@
       "post" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Executes resource-related operations on given entity.",
-        "operationId" : "associate",
+        "operationId" : "associateAnyObject",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -1272,7 +1319,7 @@
       "post" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Executes resource-related operations on given entity.",
-        "operationId" : "deassociate",
+        "operationId" : "deassociateAnyObject",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -1404,7 +1451,7 @@
       "get" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Reads the attribute, owned by the given any object, for the given schema type and schema.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
-        "operationId" : "read",
+        "operationId" : "readAnyObjectAttribute",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -1487,7 +1534,7 @@
       "put" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Adds or replaces the attribute, owned by the given any object, for the given schema type and schema.",
-        "operationId" : "update",
+        "operationId" : "updateAnyObjectAttribute",
         "parameters" : [ {
           "name" : "schema",
           "in" : "path",
@@ -1590,7 +1637,7 @@
       "delete" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Deletes the attribute, owned by the given any object, for the given schema type and schema.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteAnyObjectAttribute",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -1679,7 +1726,7 @@
       "get" : {
         "tags" : [ "AnyObjects" ],
         "summary" : "Reads the list of attributes owned by the given any object for the given schema type.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
-        "operationId" : "read_2",
+        "operationId" : "readAnyObjectAttributeForSchema",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -1756,7 +1803,7 @@
       "get" : {
         "tags" : [ "AnyTypeClasses" ],
         "summary" : "Returns anyTypeClass with matching key.",
-        "operationId" : "read_3",
+        "operationId" : "readAnyTypeClass",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -1822,7 +1869,7 @@
       "put" : {
         "tags" : [ "AnyTypeClasses" ],
         "summary" : "Updates the anyTypeClass matching the provided key.",
-        "operationId" : "update",
+        "operationId" : "updateAnyTypeClass",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -1912,7 +1959,7 @@
       "delete" : {
         "tags" : [ "AnyTypeClasses" ],
         "summary" : "Deletes the anyTypeClass matching the provided key.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteAnyTypeClass",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -1983,7 +2030,7 @@
       "get" : {
         "tags" : [ "AnyTypeClasses" ],
         "summary" : "Returns a list of all anyTypeClasss.",
-        "operationId" : "list_1",
+        "operationId" : "listAnyTypeClass",
         "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -2041,7 +2088,7 @@
       "post" : {
         "tags" : [ "AnyTypeClasses" ],
         "summary" : "Creates a new anyTypeClass.",
-        "operationId" : "create",
+        "operationId" : "createAnyTypeClass",
         "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -2141,7 +2188,7 @@
       "get" : {
         "tags" : [ "AnyTypes" ],
         "summary" : "Returns anyType with matching key.",
-        "operationId" : "read_4",
+        "operationId" : "readAnyType",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -2207,7 +2254,7 @@
       "put" : {
         "tags" : [ "AnyTypes" ],
         "summary" : "Updates the anyType matching the provided key.",
-        "operationId" : "update",
+        "operationId" : "updateAnyType",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -2287,7 +2334,7 @@
       "delete" : {
         "tags" : [ "AnyTypes" ],
         "summary" : "Deletes the anyType matching the provided key.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteAnyType",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -2358,7 +2405,7 @@
       "get" : {
         "tags" : [ "AnyTypes" ],
         "summary" : "Returns a list of all anyTypes.",
-        "operationId" : "list_2",
+        "operationId" : "listAnyType",
         "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -2416,7 +2463,7 @@
       "post" : {
         "tags" : [ "AnyTypes" ],
         "summary" : "Creates a new anyType.",
-        "operationId" : "create",
+        "operationId" : "createAnyType",
         "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -5564,7 +5611,7 @@
       "get" : {
         "tags" : [ "Groups" ],
         "summary" : "Reads the any object matching the provided key.",
-        "operationId" : "read_11",
+        "operationId" : "readGroup",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -5630,6 +5677,23 @@
                   "type" : "string"
                 }
               }
+            },
+            "content" : {
+              "application/json" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/GroupTO"
+                }
+              },
+              "application/yaml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/GroupTO"
+                }
+              },
+              "application/xml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/GroupTO"
+                }
+              }
             }
           }
         },
@@ -5642,7 +5706,7 @@
       "put" : {
         "tags" : [ "Groups" ],
         "summary" : "Updates group matching the provided key.",
-        "operationId" : "update_1",
+        "operationId" : "updateGroup",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -5790,7 +5854,7 @@
       "delete" : {
         "tags" : [ "Groups" ],
         "summary" : "Deletes any object matching provided key.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteGroup",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -5917,7 +5981,7 @@
       "patch" : {
         "tags" : [ "Groups" ],
         "summary" : "Updates group matching the provided key.",
-        "operationId" : "update",
+        "operationId" : "updateGroup",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -6067,7 +6131,7 @@
       "get" : {
         "tags" : [ "Groups" ],
         "summary" : "Returns a paged list of any objects matching the given query.",
-        "operationId" : "search_1",
+        "operationId" : "searchGroup",
         "parameters" : [ {
           "name" : "page",
           "in" : "query",
@@ -6168,7 +6232,7 @@
       "post" : {
         "tags" : [ "Groups" ],
         "summary" : "Creates a new group.",
-        "operationId" : "create",
+        "operationId" : "createGroup",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -6310,7 +6374,7 @@
       "post" : {
         "tags" : [ "Groups" ],
         "summary" : "Executes resource-related operations on given entity.",
-        "operationId" : "associate_1",
+        "operationId" : "associateGroup",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -6442,7 +6506,7 @@
       "post" : {
         "tags" : [ "Groups" ],
         "summary" : "Executes resource-related operations on given entity.",
-        "operationId" : "deassociate_1",
+        "operationId" : "deassociateGroup",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -6574,7 +6638,7 @@
       "get" : {
         "tags" : [ "Groups" ],
         "summary" : "Reads the attribute, owned by the given any object, for the given schema type and schema.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
-        "operationId" : "read_10",
+        "operationId" : "readGroupAttribute",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -6657,7 +6721,7 @@
       "put" : {
         "tags" : [ "Groups" ],
         "summary" : "Adds or replaces the attribute, owned by the given any object, for the given schema type and schema.",
-        "operationId" : "update",
+        "operationId" : "updateGroupAttribute",
         "parameters" : [ {
           "name" : "schema",
           "in" : "path",
@@ -6760,7 +6824,7 @@
       "delete" : {
         "tags" : [ "Groups" ],
         "summary" : "Deletes the attribute, owned by the given any object, for the given schema type and schema.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteGroupAttribute",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -6849,7 +6913,7 @@
       "get" : {
         "tags" : [ "Groups" ],
         "summary" : "Reads the list of attributes owned by the given any object for the given schema type.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
-        "operationId" : "read_12",
+        "operationId" : "readGroupAttributeForSchema",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -7393,20 +7457,12 @@
         } ]
       }
     },
-    "/loggers/memoryAppenders/{memoryAppender}/lastLogStatements" : {
+    "/loggers/memoryAppenders" : {
       "get" : {
         "tags" : [ "Loggers" ],
-        "summary" : "Return the last log statements available in the provided memory appender.",
-        "operationId" : "getLastLogStatements",
+        "summary" : "Returns the list of memory appenders available in the current logging configuration.",
+        "operationId" : "memoryAppenders",
         "parameters" : [ {
-          "name" : "memoryAppender",
-          "in" : "path",
-          "description" : "memory appender name",
-          "required" : true,
-          "schema" : {
-            "type" : "string"
-          }
-        }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
           "required" : true,
@@ -7461,12 +7517,20 @@
         } ]
       }
     },
-    "/loggers/memoryAppenders" : {
+    "/loggers/memoryAppenders/{memoryAppender}/lastLogStatements" : {
       "get" : {
         "tags" : [ "Loggers" ],
-        "summary" : "Returns the list of memory appenders available in the current logging configuration.",
-        "operationId" : "memoryAppenders",
+        "summary" : "Return the last log statements available in the provided memory appender.",
+        "operationId" : "getLastLogStatements",
         "parameters" : [ {
+          "name" : "memoryAppender",
+          "in" : "path",
+          "description" : "memory appender name",
+          "required" : true,
+          "schema" : {
+            "type" : "string"
+          }
+        }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
           "required" : true,
@@ -8970,19 +9034,12 @@
         } ]
       }
     },
-    "/oidcclient/clients/loginRequest" : {
+    "/oidcclient/clients/logout" : {
       "post" : {
         "tags" : [ "OIDCClients" ],
-        "summary" : "Generates OpenID Connect authentication request for the Provider matching the provided op.",
-        "operationId" : "createLoginRequest",
+        "summary" : "Returns the endSession endpoint for the provided op.",
+        "operationId" : "createLogoutRequest",
         "parameters" : [ {
-          "name" : "redirect_uri",
-          "in" : "query",
-          "description" : "redirect URI",
-          "schema" : {
-            "type" : "string"
-          }
-        }, {
           "name" : "op",
           "in" : "query",
           "description" : "OpenID Connect Provider",
@@ -9044,12 +9101,19 @@
         } ]
       }
     },
-    "/oidcclient/clients/logout" : {
+    "/oidcclient/clients/loginRequest" : {
       "post" : {
         "tags" : [ "OIDCClients" ],
-        "summary" : "Returns the endSession endpoint for the provided op.",
-        "operationId" : "createLogoutRequest",
+        "summary" : "Generates OpenID Connect authentication request for the Provider matching the provided op.",
+        "operationId" : "createLoginRequest",
         "parameters" : [ {
+          "name" : "redirect_uri",
+          "in" : "query",
+          "description" : "redirect URI",
+          "schema" : {
+            "type" : "string"
+          }
+        }, {
           "name" : "op",
           "in" : "query",
           "description" : "OpenID Connect Provider",
@@ -9111,6 +9175,56 @@
         } ]
       }
     },
+    "/oidcclient/providers/actionsClasses" : {
+      "get" : {
+        "tags" : [ "OIDCProviders" ],
+        "summary" : "Returns the list of available OIDCProviderActions implementations.",
+        "operationId" : "getActionsClasses",
+        "parameters" : [ {
+          "name" : "X-Syncope-Domain",
+          "in" : "header",
+          "required" : true,
+          "schema" : {
+            "type" : "string",
+            "enum" : [ "Master", "Two" ],
+            "default" : "Master"
+          }
+        } ],
+        "responses" : {
+          "400" : {
+            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
+            "headers" : {
+              "X-Application-Error-Code" : {
+                "description" : "Error code",
+                "style" : "simple",
+                "schema" : {
+                  "type" : "string"
+                }
+              },
+              "X-Application-Error-Info" : {
+                "description" : "Error message",
+                "style" : "simple",
+                "schema" : {
+                  "type" : "string"
+                }
+              }
+            },
+            "content" : {
+              "application/json" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/ErrorTO"
+                }
+              }
+            }
+          }
+        },
+        "security" : [ {
+          "BasicAuthentication" : [ ]
+        }, {
+          "Bearer" : [ ]
+        } ]
+      }
+    },
     "/oidcclient/providers/fromDiscovery" : {
       "post" : {
         "tags" : [ "OIDCProviders" ],
@@ -9210,56 +9324,6 @@
         } ]
       }
     },
-    "/oidcclient/providers/actionsClasses" : {
-      "get" : {
-        "tags" : [ "OIDCProviders" ],
-        "summary" : "Returns the list of available OIDCProviderActions implementations.",
-        "operationId" : "getActionsClasses",
-        "parameters" : [ {
-          "name" : "X-Syncope-Domain",
-          "in" : "header",
-          "required" : true,
-          "schema" : {
-            "type" : "string",
-            "enum" : [ "Master", "Two" ],
-            "default" : "Master"
-          }
-        } ],
-        "responses" : {
-          "400" : {
-            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
-            "headers" : {
-              "X-Application-Error-Code" : {
-                "description" : "Error code",
-                "style" : "simple",
-                "schema" : {
-                  "type" : "string"
-                }
-              },
-              "X-Application-Error-Info" : {
-                "description" : "Error message",
-                "style" : "simple",
-                "schema" : {
-                  "type" : "string"
-                }
-              }
-            },
-            "content" : {
-              "application/json" : {
-                "schema" : {
-                  "$ref" : "#/components/schemas/ErrorTO"
-                }
-              }
-            }
-          }
-        },
-        "security" : [ {
-          "BasicAuthentication" : [ ]
-        }, {
-          "Bearer" : [ ]
-        } ]
-      }
-    },
     "/oidcclient/providers/{key}" : {
       "get" : {
         "tags" : [ "OIDCProviders" ],
@@ -10080,7 +10144,7 @@
       "get" : {
         "tags" : [ "Realms" ],
         "summary" : "Returns realms rooted at the given path.",
-        "operationId" : "list_16",
+        "operationId" : "listRealm",
         "parameters" : [ {
           "name" : "fullPath",
           "in" : "path",
@@ -10135,6 +10199,35 @@
                 }
               }
             }
+          },
+          "200" : {
+            "description" : "Group matching the provided key; if value looks like a UUID then it is interpreted as key, otherwise as a name.",
+            "headers" : {
+              "ETag" : {
+                "description" : "Opaque identifier for the latest modification made to the entity returned by this endpoint",
+                "style" : "simple",
+                "schema" : {
+                  "type" : "string"
+                }
+              }
+            },
+            "content" : {
+              "application/json" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/GroupTO"
+                }
+              },
+              "application/yaml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/GroupTO"
+                }
+              },
+              "application/xml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/GroupTO"
+                }
+              }
+            }
           }
         },
         "security" : [ {
@@ -10146,7 +10239,7 @@
       "put" : {
         "tags" : [ "Realms" ],
         "summary" : "Updates the realm under the given path.",
-        "operationId" : "update_1",
+        "operationId" : "updateRealm",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -10283,7 +10376,7 @@
       "delete" : {
         "tags" : [ "Realms" ],
         "summary" : "Deletes the realm under the given path.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteRealm",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -10401,7 +10494,7 @@
       "post" : {
         "tags" : [ "Realms" ],
         "summary" : "Creates a new realm under the given path.",
-        "operationId" : "create",
+        "operationId" : "createRootedRealm",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -10550,7 +10643,7 @@
       "get" : {
         "tags" : [ "Realms" ],
         "summary" : "Returns a list of all realms.",
-        "operationId" : "list_17",
+        "operationId" : "listRealm",
         "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -12411,40 +12504,18 @@
         } ]
       }
     },
-    "/reports/{key}/executions" : {
+    "/reports/jobs/{key}" : {
       "get" : {
         "tags" : [ "Reports" ],
-        "summary" : "Returns a paged list of executions matching the given query.",
-        "operationId" : "listExecutions",
+        "summary" : "Returns job (running or scheduled) for the executable matching the given key.",
+        "operationId" : "getJob_1",
         "parameters" : [ {
-          "name" : "page",
-          "in" : "query",
-          "description" : "query conditions",
+          "name" : "key",
+          "in" : "path",
+          "description" : "executable key",
+          "required" : true,
           "schema" : {
-            "type" : "integer",
-            "format" : "int32",
-            "default" : 1
-          }
-        }, {
-          "name" : "size",
-          "in" : "query",
-          "schema" : {
-            "type" : "integer",
-            "format" : "int32",
-            "default" : 25
-          }
-        }, {
-          "name" : "orderby",
-          "in" : "query",
-          "schema" : {
-            "type" : "string"
-          }
-        }, {
-          "name" : "key",
-          "in" : "path",
-          "required" : true,
-          "schema" : {
-            "type" : "string"
+            "type" : "string"
           }
         }, {
           "name" : "X-Syncope-Domain",
@@ -12500,45 +12571,25 @@
           "Bearer" : [ ]
         } ]
       },
-      "delete" : {
+      "post" : {
         "tags" : [ "Reports" ],
-        "summary" : "Deletes the executions belonging matching the given query.",
-        "operationId" : "deleteExecutions",
+        "summary" : "Executes an action on an existing executable's job.",
+        "operationId" : "actionJob",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
-          "description" : "query conditions",
+          "description" : "executable key",
           "required" : true,
           "schema" : {
             "type" : "string"
           }
         }, {
-          "name" : "startedBefore",
-          "in" : "query",
-          "schema" : {
-            "type" : "string",
-            "format" : "date-time"
-          }
-        }, {
-          "name" : "startedAfter",
-          "in" : "query",
-          "schema" : {
-            "type" : "string",
-            "format" : "date-time"
-          }
-        }, {
-          "name" : "endedBefore",
-          "in" : "query",
-          "schema" : {
-            "type" : "string",
-            "format" : "date-time"
-          }
-        }, {
-          "name" : "endedAfter",
+          "name" : "action",
           "in" : "query",
+          "description" : "action to execute",
           "schema" : {
             "type" : "string",
-            "format" : "date-time"
+            "enum" : [ "START", "STOP", "DELETE" ]
           }
         }, {
           "name" : "X-Syncope-Domain",
@@ -12570,15 +12621,15 @@
               }
             },
             "content" : {
-              "multipart/mixed" : {
+              "*/*" : {
                 "schema" : {
                   "$ref" : "#/components/schemas/ErrorTO"
                 }
               }
             }
           },
-          "200" : {
-            "description" : "Batch results available, returned as Response entity"
+          "204" : {
+            "description" : "Operation was successful"
           }
         },
         "security" : [ {
@@ -12588,20 +12639,41 @@
         } ]
       }
     },
-    "/reports/executions/recent" : {
+    "/reports/{key}/executions" : {
       "get" : {
         "tags" : [ "Reports" ],
-        "summary" : "Returns the list of recently completed executions, ordered by end date descendent.",
-        "operationId" : "listRecentExecutions",
+        "summary" : "Returns a paged list of executions matching the given query.",
+        "operationId" : "listExecutions",
         "parameters" : [ {
-          "name" : "max",
+          "name" : "page",
+          "in" : "query",
+          "description" : "query conditions",
+          "schema" : {
+            "type" : "integer",
+            "format" : "int32",
+            "default" : 1
+          }
+        }, {
+          "name" : "size",
           "in" : "query",
-          "description" : "the maximum number of executions to return",
           "schema" : {
             "type" : "integer",
             "format" : "int32",
             "default" : 25
           }
+        }, {
+          "name" : "orderby",
+          "in" : "query",
+          "schema" : {
+            "type" : "string"
+          }
+        }, {
+          "name" : "key",
+          "in" : "path",
+          "required" : true,
+          "schema" : {
+            "type" : "string"
+          }
         }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -12655,25 +12727,50 @@
         }, {
           "Bearer" : [ ]
         } ]
-      }
-    },
-    "/reports/executions/{executionKey}" : {
+      },
       "delete" : {
         "tags" : [ "Reports" ],
-        "summary" : "Deletes the executable execution matching the provided key.",
-        "operationId" : "deleteExecution",
+        "summary" : "Deletes the executions belonging matching the given query.",
+        "operationId" : "deleteExecutions",
         "parameters" : [ {
-          "name" : "executionKey",
+          "name" : "key",
           "in" : "path",
-          "description" : "key of executable execution to be deleted",
+          "description" : "query conditions",
           "required" : true,
           "schema" : {
             "type" : "string"
           }
+        }, {
+          "name" : "startedBefore",
+          "in" : "query",
+          "schema" : {
+            "type" : "string",
+            "format" : "date-time"
+          }
+        }, {
+          "name" : "startedAfter",
+          "in" : "query",
+          "schema" : {
+            "type" : "string",
+            "format" : "date-time"
+          }
+        }, {
+          "name" : "endedBefore",
+          "in" : "query",
+          "schema" : {
+            "type" : "string",
+            "format" : "date-time"
+          }
+        }, {
+          "name" : "endedAfter",
+          "in" : "query",
+          "schema" : {
+            "type" : "string",
+            "format" : "date-time"
+          }
         }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
-          "description" : "query conditions",
           "required" : true,
           "schema" : {
             "type" : "string",
@@ -12701,25 +12798,15 @@
               }
             },
             "content" : {
-              "application/json" : {
-                "schema" : {
-                  "$ref" : "#/components/schemas/ErrorTO"
-                }
-              },
-              "application/yaml" : {
-                "schema" : {
-                  "$ref" : "#/components/schemas/ErrorTO"
-                }
-              },
-              "application/xml" : {
+              "multipart/mixed" : {
                 "schema" : {
                   "$ref" : "#/components/schemas/ErrorTO"
                 }
               }
             }
           },
-          "204" : {
-            "description" : "Operation was successful"
+          "200" : {
+            "description" : "Batch results available, returned as Response entity"
           }
         },
         "security" : [ {
@@ -12729,12 +12816,21 @@
         } ]
       }
     },
-    "/reports/jobs" : {
+    "/reports/executions/recent" : {
       "get" : {
         "tags" : [ "Reports" ],
-        "summary" : "List jobs (running and / or scheduled).",
-        "operationId" : "listJobs",
+        "summary" : "Returns the list of recently completed executions, ordered by end date descendent.",
+        "operationId" : "listRecentExecutions",
         "parameters" : [ {
+          "name" : "max",
+          "in" : "query",
+          "description" : "the maximum number of executions to return",
+          "schema" : {
+            "type" : "integer",
+            "format" : "int32",
+            "default" : 25
+          }
+        }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
           "required" : true,
@@ -12789,15 +12885,15 @@
         } ]
       }
     },
-    "/reports/jobs/{key}" : {
-      "get" : {
+    "/reports/executions/{executionKey}" : {
+      "delete" : {
         "tags" : [ "Reports" ],
-        "summary" : "Returns job (running or scheduled) for the executable matching the given key.",
-        "operationId" : "getJob_1",
+        "summary" : "Deletes the executable execution matching the provided key.",
+        "operationId" : "deleteExecution",
         "parameters" : [ {
-          "name" : "key",
+          "name" : "executionKey",
           "in" : "path",
-          "description" : "executable key",
+          "description" : "key of executable execution to be deleted",
           "required" : true,
           "schema" : {
             "type" : "string"
@@ -12805,6 +12901,7 @@
         }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
+          "description" : "query conditions",
           "required" : true,
           "schema" : {
             "type" : "string",
@@ -12848,6 +12945,9 @@
                 }
               }
             }
+          },
+          "204" : {
+            "description" : "Operation was successful"
           }
         },
         "security" : [ {
@@ -12855,28 +12955,14 @@
         }, {
           "Bearer" : [ ]
         } ]
-      },
-      "post" : {
+      }
+    },
+    "/reports/jobs" : {
+      "get" : {
         "tags" : [ "Reports" ],
-        "summary" : "Executes an action on an existing executable's job.",
-        "operationId" : "actionJob",
+        "summary" : "List jobs (running and / or scheduled).",
+        "operationId" : "listJobs",
         "parameters" : [ {
-          "name" : "key",
-          "in" : "path",
-          "description" : "executable key",
-          "required" : true,
-          "schema" : {
-            "type" : "string"
-          }
-        }, {
-          "name" : "action",
-          "in" : "query",
-          "description" : "action to execute",
-          "schema" : {
-            "type" : "string",
-            "enum" : [ "START", "STOP", "DELETE" ]
-          }
-        }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
           "required" : true,
@@ -12906,15 +12992,22 @@
               }
             },
             "content" : {
-              "*/*" : {
+              "application/json" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/ErrorTO"
+                }
+              },
+              "application/yaml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/ErrorTO"
+                }
+              },
+              "application/xml" : {
                 "schema" : {
                   "$ref" : "#/components/schemas/ErrorTO"
                 }
               }
             }
-          },
-          "204" : {
-            "description" : "Operation was successful"
           }
         },
         "security" : [ {
@@ -14731,7 +14824,7 @@
       "get" : {
         "tags" : [ "Roles" ],
         "summary" : "Returns role with matching key.",
-        "operationId" : "read_24",
+        "operationId" : "readRole",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -14797,7 +14890,7 @@
       "put" : {
         "tags" : [ "Roles" ],
         "summary" : "Updates the role matching the provided key.",
-        "operationId" : "update_1",
+        "operationId" : "updateRole",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -14887,7 +14980,7 @@
       "delete" : {
         "tags" : [ "Roles" ],
         "summary" : "Deletes the role matching the provided key.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteRole",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -14959,7 +15052,7 @@
       "get" : {
         "tags" : [ "Roles" ],
         "summary" : "Returns a list of all roles.",
-        "operationId" : "list_24",
+        "operationId" : "listRoles",
         "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -15017,7 +15110,7 @@
       "post" : {
         "tags" : [ "Roles" ],
         "summary" : "Creates a new role.",
-        "operationId" : "create_1",
+        "operationId" : "createRole",
         "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -15519,28 +15612,15 @@
         } ]
       }
     },
-    "/saml2sp/serviceProvider" : {
-      "get" : {
+    "/saml2sp/serviceProvider/logoutResponse" : {
+      "post" : {
         "tags" : [ "SAML2SP" ],
-        "summary" : "Returns the XML metadata for the provided SAML 2.0 Service Provider.",
-        "operationId" : "getMetadata",
+        "summary" : "Validates the received SAML 2.0 logout response.",
+        "operationId" : "validateLogoutResponse",
         "parameters" : [ {
-          "name" : "spEntityID",
-          "in" : "query",
-          "description" : "SAML 2.0 SP entity ID.",
-          "schema" : {
-            "type" : "string"
-          }
-        }, {
-          "name" : "urlContext",
-          "in" : "query",
-          "description" : "SAML 2.0 SP agent URL context",
-          "schema" : {
-            "type" : "string"
-          }
-        }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
+          "description" : "SAML response and relay state",
           "required" : true,
           "schema" : {
             "type" : "string",
@@ -15548,17 +15628,36 @@
             "default" : "Master"
           }
         } ],
-        "responses" : {
-          "400" : {
-            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
-            "headers" : {
-              "X-Application-Error-Code" : {
-                "description" : "Error code",
-                "style" : "simple",
-                "schema" : {
-                  "type" : "string"
-                }
-              },
+        "requestBody" : {
+          "content" : {
+            "application/json" : {
+              "schema" : {
+                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
+              }
+            },
+            "application/yaml" : {
+              "schema" : {
+                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
+              }
+            },
+            "application/xml" : {
+              "schema" : {
+                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
+              }
+            }
+          }
+        },
+        "responses" : {
+          "400" : {
+            "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
+            "headers" : {
+              "X-Application-Error-Code" : {
+                "description" : "Error code",
+                "style" : "simple",
+                "schema" : {
+                  "type" : "string"
+                }
+              },
               "X-Application-Error-Info" : {
                 "description" : "Error message",
                 "style" : "simple",
@@ -15568,12 +15667,25 @@
               }
             },
             "content" : {
+              "application/json" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/ErrorTO"
+                }
+              },
+              "application/yaml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/ErrorTO"
+                }
+              },
               "application/xml" : {
                 "schema" : {
                   "$ref" : "#/components/schemas/ErrorTO"
                 }
               }
             }
+          },
+          "204" : {
+            "description" : "Operation was successful"
           }
         },
         "security" : [ {
@@ -15583,11 +15695,11 @@
         } ]
       }
     },
-    "/saml2sp/serviceProvider/loginRequest" : {
+    "/saml2sp/serviceProvider/logoutRequest" : {
       "post" : {
         "tags" : [ "SAML2SP" ],
-        "summary" : "Generates SAML 2.0 authentication request for the IdP matching the provided entity ID.",
-        "operationId" : "createLoginRequest_1",
+        "summary" : "Generates SAML 2.0 logout request for the IdP matching the requesting access token.",
+        "operationId" : "createLogoutRequest_1",
         "parameters" : [ {
           "name" : "spEntityID",
           "in" : "query",
@@ -15595,13 +15707,6 @@
           "schema" : {
             "type" : "string"
           }
-        }, {
-          "name" : "idpEntityID",
-          "in" : "query",
-          "description" : "SAML 2.0 IdP entity ID.",
-          "schema" : {
-            "type" : "string"
-          }
         }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -15657,11 +15762,11 @@
         } ]
       }
     },
-    "/saml2sp/serviceProvider/logoutResponse" : {
+    "/saml2sp/serviceProvider/loginResponse" : {
       "post" : {
         "tags" : [ "SAML2SP" ],
-        "summary" : "Validates the received SAML 2.0 logout response.",
-        "operationId" : "validateLogoutResponse",
+        "summary" : "Validates the received SAML 2.0 authentication response and creates JWT for the matching user, if found.",
+        "operationId" : "validateLoginResponse",
         "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -15728,9 +15833,6 @@
                 }
               }
             }
-          },
-          "204" : {
-            "description" : "Operation was successful"
           }
         },
         "security" : [ {
@@ -15740,11 +15842,11 @@
         } ]
       }
     },
-    "/saml2sp/serviceProvider/logoutRequest" : {
+    "/saml2sp/serviceProvider/loginRequest" : {
       "post" : {
         "tags" : [ "SAML2SP" ],
-        "summary" : "Generates SAML 2.0 logout request for the IdP matching the requesting access token.",
-        "operationId" : "createLogoutRequest_1",
+        "summary" : "Generates SAML 2.0 authentication request for the IdP matching the provided entity ID.",
+        "operationId" : "createLoginRequest_1",
         "parameters" : [ {
           "name" : "spEntityID",
           "in" : "query",
@@ -15752,6 +15854,13 @@
           "schema" : {
             "type" : "string"
           }
+        }, {
+          "name" : "idpEntityID",
+          "in" : "query",
+          "description" : "SAML 2.0 IdP entity ID.",
+          "schema" : {
+            "type" : "string"
+          }
         }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -15807,15 +15916,28 @@
         } ]
       }
     },
-    "/saml2sp/serviceProvider/loginResponse" : {
-      "post" : {
+    "/saml2sp/serviceProvider" : {
+      "get" : {
         "tags" : [ "SAML2SP" ],
-        "summary" : "Validates the received SAML 2.0 authentication response and creates JWT for the matching user, if found.",
-        "operationId" : "validateLoginResponse",
+        "summary" : "Returns the XML metadata for the provided SAML 2.0 Service Provider.",
+        "operationId" : "getMetadata",
         "parameters" : [ {
+          "name" : "spEntityID",
+          "in" : "query",
+          "description" : "SAML 2.0 SP entity ID.",
+          "schema" : {
+            "type" : "string"
+          }
+        }, {
+          "name" : "urlContext",
+          "in" : "query",
+          "description" : "SAML 2.0 SP agent URL context",
+          "schema" : {
+            "type" : "string"
+          }
+        }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
-          "description" : "SAML response and relay state",
           "required" : true,
           "schema" : {
             "type" : "string",
@@ -15823,25 +15945,6 @@
             "default" : "Master"
           }
         } ],
-        "requestBody" : {
-          "content" : {
-            "application/json" : {
-              "schema" : {
-                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
-              }
-            },
-            "application/yaml" : {
-              "schema" : {
-                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
-              }
-            },
-            "application/xml" : {
-              "schema" : {
-                "$ref" : "#/components/schemas/SAML2ReceivedResponseTO"
-              }
-            }
-          }
-        },
         "responses" : {
           "400" : {
             "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
@@ -15862,16 +15965,6 @@
               }
             },
             "content" : {
-              "application/json" : {
-                "schema" : {
-                  "$ref" : "#/components/schemas/ErrorTO"
-                }
-              },
-              "application/yaml" : {
-                "schema" : {
-                  "$ref" : "#/components/schemas/ErrorTO"
-                }
-              },
               "application/xml" : {
                 "schema" : {
                   "$ref" : "#/components/schemas/ErrorTO"
@@ -16033,7 +16126,7 @@
       "get" : {
         "tags" : [ "Schemas" ],
         "summary" : "Returns schema matching the given type and key.",
-        "operationId" : "read_26",
+        "operationId" : "readSchema",
         "parameters" : [ {
           "name" : "type",
           "in" : "path",
@@ -16109,7 +16202,7 @@
       "put" : {
         "tags" : [ "Schemas" ],
         "summary" : "Updates the schema matching the given type and key.",
-        "operationId" : "update_1",
+        "operationId" : "updateSchema",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -16208,7 +16301,7 @@
       "delete" : {
         "tags" : [ "Schemas" ],
         "summary" : "Deletes the schema matching the given type and key.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteSchema",
         "parameters" : [ {
           "name" : "type",
           "in" : "path",
@@ -16288,7 +16381,7 @@
       "get" : {
         "tags" : [ "Schemas" ],
         "summary" : "Returns a list of schemas matching the given query.",
-        "operationId" : "search_2",
+        "operationId" : "searchSchema",
         "parameters" : [ {
           "name" : "type",
           "in" : "path",
@@ -16371,7 +16464,7 @@
       "post" : {
         "tags" : [ "Schemas" ],
         "summary" : "Creates a new schema.",
-        "operationId" : "create_1",
+        "operationId" : "createSchema",
         "parameters" : [ {
           "name" : "type",
           "in" : "path",
@@ -17928,37 +18021,15 @@
         } ]
       }
     },
-    "/tasks/{key}/executions" : {
+    "/tasks/jobs/{key}" : {
       "get" : {
         "tags" : [ "Tasks" ],
-        "summary" : "Returns a paged list of executions matching the given query.",
-        "operationId" : "listExecutions_1",
+        "summary" : "Returns job (running or scheduled) for the executable matching the given key.",
+        "operationId" : "getJob_2",
         "parameters" : [ {
-          "name" : "page",
-          "in" : "query",
-          "description" : "query conditions",
-          "schema" : {
-            "type" : "integer",
-            "format" : "int32",
-            "default" : 1
-          }
-        }, {
-          "name" : "size",
-          "in" : "query",
-          "schema" : {
-            "type" : "integer",
-            "format" : "int32",
-            "default" : 25
-          }
-        }, {
-          "name" : "orderby",
-          "in" : "query",
-          "schema" : {
-            "type" : "string"
-          }
-        }, {
           "name" : "key",
           "in" : "path",
+          "description" : "executable key",
           "required" : true,
           "schema" : {
             "type" : "string"
@@ -18017,45 +18088,25 @@
           "Bearer" : [ ]
         } ]
       },
-      "delete" : {
+      "post" : {
         "tags" : [ "Tasks" ],
-        "summary" : "Deletes the executions belonging matching the given query.",
-        "operationId" : "deleteExecutions",
+        "summary" : "Executes an action on an existing executable's job.",
+        "operationId" : "actionJob",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
-          "description" : "query conditions",
+          "description" : "executable key",
           "required" : true,
           "schema" : {
             "type" : "string"
           }
         }, {
-          "name" : "startedBefore",
-          "in" : "query",
-          "schema" : {
-            "type" : "string",
-            "format" : "date-time"
-          }
-        }, {
-          "name" : "startedAfter",
-          "in" : "query",
-          "schema" : {
-            "type" : "string",
-            "format" : "date-time"
-          }
-        }, {
-          "name" : "endedBefore",
-          "in" : "query",
-          "schema" : {
-            "type" : "string",
-            "format" : "date-time"
-          }
-        }, {
-          "name" : "endedAfter",
+          "name" : "action",
           "in" : "query",
+          "description" : "action to execute",
           "schema" : {
             "type" : "string",
-            "format" : "date-time"
+            "enum" : [ "START", "STOP", "DELETE" ]
           }
         }, {
           "name" : "X-Syncope-Domain",
@@ -18087,15 +18138,15 @@
               }
             },
             "content" : {
-              "multipart/mixed" : {
+              "*/*" : {
                 "schema" : {
                   "$ref" : "#/components/schemas/ErrorTO"
                 }
               }
             }
           },
-          "200" : {
-            "description" : "Batch results available, returned as Response entity"
+          "204" : {
+            "description" : "Operation was successful"
           }
         },
         "security" : [ {
@@ -18105,20 +18156,41 @@
         } ]
       }
     },
-    "/tasks/executions/recent" : {
+    "/tasks/{key}/executions" : {
       "get" : {
         "tags" : [ "Tasks" ],
-        "summary" : "Returns the list of recently completed executions, ordered by end date descendent.",
-        "operationId" : "listRecentExecutions_1",
+        "summary" : "Returns a paged list of executions matching the given query.",
+        "operationId" : "listExecutions_1",
         "parameters" : [ {
-          "name" : "max",
+          "name" : "page",
+          "in" : "query",
+          "description" : "query conditions",
+          "schema" : {
+            "type" : "integer",
+            "format" : "int32",
+            "default" : 1
+          }
+        }, {
+          "name" : "size",
           "in" : "query",
-          "description" : "the maximum number of executions to return",
           "schema" : {
             "type" : "integer",
             "format" : "int32",
             "default" : 25
           }
+        }, {
+          "name" : "orderby",
+          "in" : "query",
+          "schema" : {
+            "type" : "string"
+          }
+        }, {
+          "name" : "key",
+          "in" : "path",
+          "required" : true,
+          "schema" : {
+            "type" : "string"
+          }
         }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
@@ -18172,25 +18244,50 @@
         }, {
           "Bearer" : [ ]
         } ]
-      }
-    },
-    "/tasks/executions/{executionKey}" : {
+      },
       "delete" : {
         "tags" : [ "Tasks" ],
-        "summary" : "Deletes the executable execution matching the provided key.",
-        "operationId" : "deleteExecution_1",
+        "summary" : "Deletes the executions belonging matching the given query.",
+        "operationId" : "deleteExecutions",
         "parameters" : [ {
-          "name" : "executionKey",
+          "name" : "key",
           "in" : "path",
-          "description" : "key of executable execution to be deleted",
+          "description" : "query conditions",
           "required" : true,
           "schema" : {
             "type" : "string"
           }
+        }, {
+          "name" : "startedBefore",
+          "in" : "query",
+          "schema" : {
+            "type" : "string",
+            "format" : "date-time"
+          }
+        }, {
+          "name" : "startedAfter",
+          "in" : "query",
+          "schema" : {
+            "type" : "string",
+            "format" : "date-time"
+          }
+        }, {
+          "name" : "endedBefore",
+          "in" : "query",
+          "schema" : {
+            "type" : "string",
+            "format" : "date-time"
+          }
+        }, {
+          "name" : "endedAfter",
+          "in" : "query",
+          "schema" : {
+            "type" : "string",
+            "format" : "date-time"
+          }
         }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
-          "description" : "query conditions",
           "required" : true,
           "schema" : {
             "type" : "string",
@@ -18218,25 +18315,15 @@
               }
             },
             "content" : {
-              "application/json" : {
-                "schema" : {
-                  "$ref" : "#/components/schemas/ErrorTO"
-                }
-              },
-              "application/yaml" : {
-                "schema" : {
-                  "$ref" : "#/components/schemas/ErrorTO"
-                }
-              },
-              "application/xml" : {
+              "multipart/mixed" : {
                 "schema" : {
                   "$ref" : "#/components/schemas/ErrorTO"
                 }
               }
             }
           },
-          "204" : {
-            "description" : "Operation was successful"
+          "200" : {
+            "description" : "Batch results available, returned as Response entity"
           }
         },
         "security" : [ {
@@ -18246,12 +18333,21 @@
         } ]
       }
     },
-    "/tasks/jobs" : {
+    "/tasks/executions/recent" : {
       "get" : {
         "tags" : [ "Tasks" ],
-        "summary" : "List jobs (running and / or scheduled).",
-        "operationId" : "listJobs_1",
+        "summary" : "Returns the list of recently completed executions, ordered by end date descendent.",
+        "operationId" : "listRecentExecutions_1",
         "parameters" : [ {
+          "name" : "max",
+          "in" : "query",
+          "description" : "the maximum number of executions to return",
+          "schema" : {
+            "type" : "integer",
+            "format" : "int32",
+            "default" : 25
+          }
+        }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
           "required" : true,
@@ -18306,15 +18402,15 @@
         } ]
       }
     },
-    "/tasks/jobs/{key}" : {
-      "get" : {
+    "/tasks/executions/{executionKey}" : {
+      "delete" : {
         "tags" : [ "Tasks" ],
-        "summary" : "Returns job (running or scheduled) for the executable matching the given key.",
-        "operationId" : "getJob_2",
+        "summary" : "Deletes the executable execution matching the provided key.",
+        "operationId" : "deleteExecution_1",
         "parameters" : [ {
-          "name" : "key",
+          "name" : "executionKey",
           "in" : "path",
-          "description" : "executable key",
+          "description" : "key of executable execution to be deleted",
           "required" : true,
           "schema" : {
             "type" : "string"
@@ -18322,6 +18418,7 @@
         }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
+          "description" : "query conditions",
           "required" : true,
           "schema" : {
             "type" : "string",
@@ -18365,6 +18462,9 @@
                 }
               }
             }
+          },
+          "204" : {
+            "description" : "Operation was successful"
           }
         },
         "security" : [ {
@@ -18372,28 +18472,14 @@
         }, {
           "Bearer" : [ ]
         } ]
-      },
-      "post" : {
+      }
+    },
+    "/tasks/jobs" : {
+      "get" : {
         "tags" : [ "Tasks" ],
-        "summary" : "Executes an action on an existing executable's job.",
-        "operationId" : "actionJob",
+        "summary" : "List jobs (running and / or scheduled).",
+        "operationId" : "listJobs_1",
         "parameters" : [ {
-          "name" : "key",
-          "in" : "path",
-          "description" : "executable key",
-          "required" : true,
-          "schema" : {
-            "type" : "string"
-          }
-        }, {
-          "name" : "action",
-          "in" : "query",
-          "description" : "action to execute",
-          "schema" : {
-            "type" : "string",
-            "enum" : [ "START", "STOP", "DELETE" ]
-          }
-        }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
           "required" : true,
@@ -18423,15 +18509,22 @@
               }
             },
             "content" : {
-              "*/*" : {
+              "application/json" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/ErrorTO"
+                }
+              },
+              "application/yaml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/ErrorTO"
+                }
+              },
+              "application/xml" : {
                 "schema" : {
                   "$ref" : "#/components/schemas/ErrorTO"
                 }
               }
             }
-          },
-          "204" : {
-            "description" : "Operation was successful"
           }
         },
         "security" : [ {
@@ -18523,23 +18616,15 @@
         } ]
       }
     },
-    "/users/self/requestPasswordReset" : {
-      "post" : {
-        "tags" : [ "UserSelf" ],
-        "summary" : "Provides answer for the security question configured for user matching the given username, if any.\n If provided answer matches the one stored for that user, a password reset token is internally generated,\n otherwise an error is returned.",
-        "operationId" : "requestPasswordReset",
-        "parameters" : [ {
-          "name" : "username",
-          "in" : "query",
-          "description" : "username for which the security answer is provided",
-          "required" : true,
-          "schema" : {
-            "type" : "string"
-          }
-        }, {
+    "/users/self/mustChangePassword" : {
+      "post" : {
+        "tags" : [ "UserSelf" ],
+        "summary" : "Changes own password when change was forced by an administrator.",
+        "operationId" : "mustChangePassword",
+        "parameters" : [ {
           "name" : "X-Syncope-Domain",
           "in" : "header",
-          "description" : "actual answer text",
+          "description" : "the password value to update",
           "required" : true,
           "schema" : {
             "type" : "string",
@@ -18592,22 +18677,32 @@
                 }
               }
             }
-          },
-          "204" : {
-            "description" : "Operation was successful"
           }
-        }
+        },
+        "security" : [ {
+          "BasicAuthentication" : [ ]
+        }, {
+          "Bearer" : [ ]
+        } ]
       }
     },
-    "/users/self/mustChangePassword" : {
+    "/users/self/requestPasswordReset" : {
       "post" : {
         "tags" : [ "UserSelf" ],
-        "summary" : "Changes own password when change was forced by an administrator.",
-        "operationId" : "mustChangePassword",
+        "summary" : "Provides answer for the security question configured for user matching the given username, if any.\n If provided answer matches the one stored for that user, a password reset token is internally generated,\n otherwise an error is returned.",
+        "operationId" : "requestPasswordReset",
         "parameters" : [ {
+          "name" : "username",
+          "in" : "query",
+          "description" : "username for which the security answer is provided",
+          "required" : true,
+          "schema" : {
+            "type" : "string"
+          }
+        }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
-          "description" : "the password value to update",
+          "description" : "actual answer text",
           "required" : true,
           "schema" : {
             "type" : "string",
@@ -18660,13 +18755,11 @@
                 }
               }
             }
+          },
+          "204" : {
+            "description" : "Operation was successful"
           }
-        },
-        "security" : [ {
-          "BasicAuthentication" : [ ]
-        }, {
-          "Bearer" : [ ]
-        } ]
+        }
       }
     },
     "/users/self/confirmPasswordReset" : {
@@ -19425,7 +19518,7 @@
       "get" : {
         "tags" : [ "Users" ],
         "summary" : "Reads the any object matching the provided key.",
-        "operationId" : "read_31",
+        "operationId" : "readUser",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -19491,6 +19584,23 @@
                   "type" : "string"
                 }
               }
+            },
+            "content" : {
+              "application/json" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/UserTO"
+                }
+              },
+              "application/yaml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/UserTO"
+                }
+              },
+              "application/xml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/UserTO"
+                }
+              }
             }
           }
         },
@@ -19503,7 +19613,7 @@
       "put" : {
         "tags" : [ "Users" ],
         "summary" : "Updates user matching the provided key.",
-        "operationId" : "update_2",
+        "operationId" : "updateUser",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -19651,7 +19761,7 @@
       "delete" : {
         "tags" : [ "Users" ],
         "summary" : "Deletes any object matching provided key.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteUser",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -19778,7 +19888,7 @@
       "patch" : {
         "tags" : [ "Users" ],
         "summary" : "Updates user matching the provided key.",
-        "operationId" : "update_3",
+        "operationId" : "updateUser",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -19928,7 +20038,7 @@
       "get" : {
         "tags" : [ "Users" ],
         "summary" : "Returns a paged list of any objects matching the given query.",
-        "operationId" : "search_4",
+        "operationId" : "searchUser",
         "parameters" : [ {
           "name" : "page",
           "in" : "query",
@@ -20029,7 +20139,7 @@
       "post" : {
         "tags" : [ "Users" ],
         "summary" : "Creates a new user.",
-        "operationId" : "create_1",
+        "operationId" : "createUser",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -20178,7 +20288,7 @@
       "post" : {
         "tags" : [ "Users" ],
         "summary" : "Performs a status update on given user.",
-        "operationId" : "status_2",
+        "operationId" : "statusUpdate",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -20328,7 +20438,7 @@
       "post" : {
         "tags" : [ "Users" ],
         "summary" : "Executes resource-related operations on given entity.",
-        "operationId" : "associate_2",
+        "operationId" : "associateUser",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -20460,7 +20570,7 @@
       "post" : {
         "tags" : [ "Users" ],
         "summary" : "Executes resource-related operations on given entity.",
-        "operationId" : "deassociate_2",
+        "operationId" : "deassociateUser",
         "parameters" : [ {
           "name" : "Prefer",
           "in" : "header",
@@ -20592,7 +20702,7 @@
       "get" : {
         "tags" : [ "Users" ],
         "summary" : "Reads the attribute, owned by the given any object, for the given schema type and schema.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
-        "operationId" : "read_30",
+        "operationId" : "readUserAttribute",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -20675,7 +20785,7 @@
       "put" : {
         "tags" : [ "Users" ],
         "summary" : "Adds or replaces the attribute, owned by the given any object, for the given schema type and schema.",
-        "operationId" : "update_2",
+        "operationId" : "updateUserAttribute",
         "parameters" : [ {
           "name" : "schema",
           "in" : "path",
@@ -20778,7 +20888,7 @@
       "delete" : {
         "tags" : [ "Users" ],
         "summary" : "Deletes the attribute, owned by the given any object, for the given schema type and schema.",
-        "operationId" : "delete_1",
+        "operationId" : "deleteUserAttribute",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -20867,7 +20977,7 @@
       "get" : {
         "tags" : [ "Users" ],
         "summary" : "Reads the list of attributes owned by the given any object for the given schema type.\n\n Note that for the UserService, GroupService and AnyObjectService subclasses, if the key parameter\n looks like a UUID then it is interpreted as as key, otherwise as a (user)name.",
-        "operationId" : "read_32",
+        "operationId" : "readUserAttributes",
         "parameters" : [ {
           "name" : "key",
           "in" : "path",
@@ -20940,15 +21050,15 @@
         } ]
       }
     },
-    "/userworkflow/tasks/{taskId}/execute" : {
-      "post" : {
+    "/userworkflow/forms/{userKey}" : {
+      "get" : {
         "tags" : [ "UserWorkflow" ],
-        "summary" : "Executes workflow task for matching id.",
-        "operationId" : "executeTask",
+        "summary" : "Returns a list of available forms for the given user key.",
+        "operationId" : "getFormForUser",
         "parameters" : [ {
-          "name" : "taskId",
+          "name" : "userKey",
           "in" : "path",
-          "description" : "workflow task id",
+          "description" : "user key",
           "required" : true,
           "schema" : {
             "type" : "string"
@@ -20956,7 +21066,6 @@
         }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
-          "description" : "argument to be passed to workflow task",
           "required" : true,
           "schema" : {
             "type" : "string",
@@ -20964,26 +21073,6 @@
             "default" : "Master"
           }
         } ],
-        "requestBody" : {
-          "content" : {
-            "application/json" : {
-              "schema" : {
-                "$ref" : "#/components/schemas/UserTO"
-              }
-            },
-            "application/yaml" : {
-              "schema" : {
-                "$ref" : "#/components/schemas/UserTO"
-              }
-            },
-            "application/xml" : {
-              "schema" : {
-                "$ref" : "#/components/schemas/UserTO"
-              }
-            }
-          },
-          "required" : true
-        },
         "responses" : {
           "400" : {
             "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
@@ -21029,16 +21118,31 @@
         } ]
       }
     },
-    "/userworkflow/forms/{taskId}/claim" : {
-      "post" : {
+    "/userworkflow/forms" : {
+      "get" : {
         "tags" : [ "UserWorkflow" ],
-        "summary" : "Claims the form for the given task id.",
-        "operationId" : "claimForm",
+        "summary" : "Returns a list of all available workflow forms.",
+        "operationId" : "getForms",
         "parameters" : [ {
-          "name" : "taskId",
-          "in" : "path",
-          "description" : "workflow task id",
-          "required" : true,
+          "name" : "page",
+          "in" : "query",
+          "description" : "query conditions",
+          "schema" : {
+            "type" : "integer",
+            "format" : "int32",
+            "default" : 1
+          }
+        }, {
+          "name" : "size",
+          "in" : "query",
+          "schema" : {
+            "type" : "integer",
+            "format" : "int32",
+            "default" : 25
+          }
+        }, {
+          "name" : "orderby",
+          "in" : "query",
           "schema" : {
             "type" : "string"
           }
@@ -21095,24 +21199,15 @@
         }, {
           "Bearer" : [ ]
         } ]
-      }
-    },
-    "/userworkflow/forms/{userKey}" : {
-      "get" : {
+      },
+      "post" : {
         "tags" : [ "UserWorkflow" ],
-        "summary" : "Returns a list of available forms for the given user key.",
-        "operationId" : "getFormForUser",
+        "summary" : "Submits a workflow form.",
+        "operationId" : "submitForm",
         "parameters" : [ {
-          "name" : "userKey",
-          "in" : "path",
-          "description" : "user key",
-          "required" : true,
-          "schema" : {
-            "type" : "string"
-          }
-        }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
+          "description" : "workflow form.",
           "required" : true,
           "schema" : {
             "type" : "string",
@@ -21120,6 +21215,26 @@
             "default" : "Master"
           }
         } ],
+        "requestBody" : {
+          "content" : {
+            "application/json" : {
+              "schema" : {
+                "$ref" : "#/components/schemas/WorkflowFormTO"
+              }
+            },
+            "application/yaml" : {
+              "schema" : {
+                "$ref" : "#/components/schemas/WorkflowFormTO"
+              }
+            },
+            "application/xml" : {
+              "schema" : {
+                "$ref" : "#/components/schemas/WorkflowFormTO"
+              }
+            }
+          },
+          "required" : true
+        },
         "responses" : {
           "400" : {
             "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
@@ -21165,31 +21280,16 @@
         } ]
       }
     },
-    "/userworkflow/forms" : {
+    "/userworkflow/tasks/{userKey}" : {
       "get" : {
         "tags" : [ "UserWorkflow" ],
-        "summary" : "Returns a list of all available workflow forms.",
-        "operationId" : "getForms",
+        "summary" : "Returns a list of available tasks for the given user key.",
+        "operationId" : "getAvailableTasks",
         "parameters" : [ {
-          "name" : "page",
-          "in" : "query",
-          "description" : "query conditions",
-          "schema" : {
-            "type" : "integer",
-            "format" : "int32",
-            "default" : 1
-          }
-        }, {
-          "name" : "size",
-          "in" : "query",
-          "schema" : {
-            "type" : "integer",
-            "format" : "int32",
-            "default" : 25
-          }
-        }, {
-          "name" : "orderby",
-          "in" : "query",
+          "name" : "userKey",
+          "in" : "path",
+          "description" : "user key",
+          "required" : true,
           "schema" : {
             "type" : "string"
           }
@@ -21223,17 +21323,7 @@
               }
             },
             "content" : {
-              "application/json" : {
-                "schema" : {
-                  "$ref" : "#/components/schemas/ErrorTO"
-                }
-              },
-              "application/yaml" : {
-                "schema" : {
-                  "$ref" : "#/components/schemas/ErrorTO"
-                }
-              },
-              "application/xml" : {
+              "*/*" : {
                 "schema" : {
                   "$ref" : "#/components/schemas/ErrorTO"
                 }
@@ -21246,15 +21336,24 @@
         }, {
           "Bearer" : [ ]
         } ]
-      },
+      }
+    },
+    "/userworkflow/forms/{taskId}/claim" : {
       "post" : {
         "tags" : [ "UserWorkflow" ],
-        "summary" : "Submits a workflow form.",
-        "operationId" : "submitForm",
+        "summary" : "Claims the form for the given task id.",
+        "operationId" : "claimForm",
         "parameters" : [ {
+          "name" : "taskId",
+          "in" : "path",
+          "description" : "workflow task id",
+          "required" : true,
+          "schema" : {
+            "type" : "string"
+          }
+        }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
-          "description" : "workflow form.",
           "required" : true,
           "schema" : {
             "type" : "string",
@@ -21262,26 +21361,6 @@
             "default" : "Master"
           }
         } ],
-        "requestBody" : {
-          "content" : {
-            "application/json" : {
-              "schema" : {
-                "$ref" : "#/components/schemas/WorkflowFormTO"
-              }
-            },
-            "application/yaml" : {
-              "schema" : {
-                "$ref" : "#/components/schemas/WorkflowFormTO"
-              }
-            },
-            "application/xml" : {
-              "schema" : {
-                "$ref" : "#/components/schemas/WorkflowFormTO"
-              }
-            }
-          },
-          "required" : true
-        },
         "responses" : {
           "400" : {
             "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
@@ -21327,15 +21406,15 @@
         } ]
       }
     },
-    "/userworkflow/tasks/{userKey}" : {
-      "get" : {
+    "/userworkflow/tasks/{taskId}/execute" : {
+      "post" : {
         "tags" : [ "UserWorkflow" ],
-        "summary" : "Returns a list of available tasks for the given user key.",
-        "operationId" : "getAvailableTasks",
+        "summary" : "Executes workflow task for matching id.",
+        "operationId" : "executeTask",
         "parameters" : [ {
-          "name" : "userKey",
+          "name" : "taskId",
           "in" : "path",
-          "description" : "user key",
+          "description" : "workflow task id",
           "required" : true,
           "schema" : {
             "type" : "string"
@@ -21343,6 +21422,7 @@
         }, {
           "name" : "X-Syncope-Domain",
           "in" : "header",
+          "description" : "argument to be passed to workflow task",
           "required" : true,
           "schema" : {
             "type" : "string",
@@ -21350,6 +21430,26 @@
             "default" : "Master"
           }
         } ],
+        "requestBody" : {
+          "content" : {
+            "application/json" : {
+              "schema" : {
+                "$ref" : "#/components/schemas/UserTO"
+              }
+            },
+            "application/yaml" : {
+              "schema" : {
+                "$ref" : "#/components/schemas/UserTO"
+              }
+            },
+            "application/xml" : {
+              "schema" : {
+                "$ref" : "#/components/schemas/UserTO"
+              }
+            }
+          },
+          "required" : true
+        },
         "responses" : {
           "400" : {
             "description" : "An error occurred; HTTP status code can vary depending on the actual error: 400, 403, 404, 409, 412",
@@ -21370,7 +21470,17 @@
               }
             },
             "content" : {
-              "*/*" : {
+              "application/json" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/ErrorTO"
+                }
+              },
+              "application/yaml" : {
+                "schema" : {
+                  "$ref" : "#/components/schemas/ErrorTO"
+                }
+              },
+              "application/xml" : {
                 "schema" : {
                   "$ref" : "#/components/schemas/ErrorTO"
                 }
@@ -22426,135 +22536,142 @@
           "$ref" : "#/components/schemas/TaskTO"
         } ]
       },
-      "UserTO" : {
-        "required" : [ "@class", "username" ],
-        "type" : "object",
-        "properties" : {
-          "@class" : {
-            "type" : "string",
-            "example" : "org.apache.syncope.common.lib.to.UserTO"
-          },
-          "username" : {
-            "type" : "string"
-          },
-          "password" : {
-            "type" : "string"
-          },
-          "token" : {
-            "type" : "string",
-            "readOnly" : true,
-            "xml" : {
-              "name" : "role"
-            }
-          },
-          "tokenExpireTime" : {
-            "type" : "string",
-            "format" : "date-time",
-            "readOnly" : true
-          },
-          "lastLoginDate" : {
-            "type" : "string",
-            "format" : "date-time",
-            "readOnly" : true
-          },
-          "changePwdDate" : {
-            "type" : "string",
-            "format" : "date-time",
-            "readOnly" : true
-          },
-          "failedLogins" : {
-            "type" : "integer",
-            "format" : "int32",
-            "readOnly" : true
-          },
-          "securityQuestion" : {
-            "type" : "string"
-          },
-          "securityAnswer" : {
-            "type" : "string"
-          },
-          "suspended" : {
-            "type" : "boolean",
-            "readOnly" : true
-          },
-          "mustChangePassword" : {
-            "type" : "boolean",
-            "readOnly" : true
-          },
-          "roles" : {
-            "type" : "array",
-            "xml" : {
-              "wrapped" : true
-            },
-            "items" : {
-              "type" : "string",
-              "xml" : {
-                "name" : "privilege"
-              }
-            }
-          },
-          "dynRoles" : {
-            "type" : "array",
-            "readOnly" : true,
-            "xml" : {
-              "wrapped" : true
-            },
-            "items" : {
-              "type" : "string",
-              "readOnly" : true,
-              "xml" : {
-                "name" : "role"
-              }
-            }
-          },
-          "privileges" : {
-            "uniqueItems" : true,
-            "type" : "array",
-            "xml" : {
-              "wrapped" : true
-            },
-            "items" : {
-              "type" : "string",
-              "xml" : {
-                "name" : "privilege"
-              }
-            }
-          },
-          "relationships" : {
-            "type" : "array",
-            "xml" : {
-              "wrapped" : true
-            },
-            "items" : {
-              "$ref" : "#/components/schemas/RelationshipTO"
-            }
-          },
-          "memberships" : {
-            "type" : "array",
-            "xml" : {
-              "wrapped" : true
-            },
-            "items" : {
-              "$ref" : "#/components/schemas/MembershipTO"
-            }
-          },
-          "dynMemberships" : {
-            "type" : "array",
-            "readOnly" : true,
-            "xml" : {
-              "wrapped" : true
-            },
-            "items" : {
-              "$ref" : "#/components/schemas/MembershipTO"
-            }
-          }
-        },
-        "xml" : {
-          "name" : "user"
-        },
-        "allOf" : [ {
-          "$ref" : "#/components/schemas/AnyTO"
-        } ]
+      "UserTO": {
+        "xml": {
+          "name": "user"
+        },
+        "allOf": [
+          {
+            "$ref": "#/components/schemas/AnyTO"
+          },
+          {
+            "required": [
+              "@class",
+              "username"
+            ],
+            "type": "object",
+            "properties": {
+              "@class": {
+                "type": "string",
+                "example": "org.apache.syncope.common.lib.to.UserTO"
+              },
+              "username": {
+                "type": "string"
+              },
+              "password": {
+                "type": "string"
+              },
+              "token": {
+                "type": "string",
+                "readOnly": true,
+                "xml": {
+                  "name": "role"
+                }
+              },
+              "tokenExpireTime": {
+                "type": "string",
+                "format": "date-time",
+                "readOnly": true
+              },
+              "lastLoginDate": {
+                "type": "string",
+                "format": "date-time",
+                "readOnly": true
+              },
+              "changePwdDate": {
+                "type": "string",
+                "format": "date-time",
+                "readOnly": true
+              },
+              "failedLogins": {
+                "type": "integer",
+                "format": "int32",
+                "readOnly": true
+              },
+              "securityQuestion": {
+                "type": "string"
+              },
+              "securityAnswer": {
+                "type": "string"
+              },
+              "suspended": {
+                "type": "boolean",
+                "readOnly": true
+              },
+              "mustChangePassword": {
+                "type": "boolean",
+                "readOnly": true
+              },
+              "roles": {
+                "type": "array",
+                "xml": {
+                  "wrapped": true
+                },
+                "items": {
+                  "type": "string",
+                  "xml": {
+                    "name": "privilege"
+                  }
+                }
+              },
+              "dynRoles": {
+                "type": "array",
+                "readOnly": true,
+                "xml": {
+                  "wrapped": true
+                },
+                "items": {
+                  "type": "string",
+                  "readOnly": true,
+                  "xml": {
+                    "name": "role"
+                  }
+                }
+              },
+              "privileges": {
+                "uniqueItems": true,
+                "type": "array",
+                "xml": {
+                  "wrapped": true
+                },
+                "items": {
+                  "type": "string",
+                  "xml": {
+                    "name": "privilege"
+                  }
+                }
+              },
+              "relationships": {
+                "type": "array",
+                "xml": {
+                  "wrapped": true
+                },
+                "items": {
+                  "$ref": "#/components/schemas/RelationshipTO"
+                }
+              },
+              "memberships": {
+                "type": "array",
+                "xml": {
+                  "wrapped": true
+                },
+                "items": {
+                  "$ref": "#/components/schemas/MembershipTO"
+                }
+              },
+              "dynMemberships": {
+                "type": "array",
+                "readOnly": true,
+                "xml": {
+                  "wrapped": true
+                },
+                "items": {
+                  "$ref": "#/components/schemas/MembershipTO"
+                }
+              }
+            }
+          }
+        ]
       },
       "StringPatchItem" : {
         "required" : [ "value" ],
@@ -24506,71 +24623,77 @@
           "name" : "role"
         }
       },
-      "GroupTO" : {
-        "required" : [ "@class" ],
-        "type" : "object",
-        "properties" : {
-          "@class" : {
-            "type" : "string",
-            "example" : "org.apache.syncope.common.lib.to.GroupTO"
-          },
-          "name" : {
-            "type" : "string"
-          },
-          "userOwner" : {
-            "type" : "string"
-          },
-          "groupOwner" : {
-            "type" : "string"
-          },
-          "udynMembershipCond" : {
-            "type" : "string"
-          },
-          "staticUserMembershipCount" : {
-            "type" : "integer",
-            "format" : "int32",
-            "readOnly" : true
-          },
-          "dynamicUserMembershipCount" : {
-            "type" : "integer",
-            "format" : "int32",
-            "readOnly" : true
-          },
-          "staticAnyObjectMembershipCount" : {
-            "type" : "integer",
-            "format" : "int32",
-            "readOnly" : true
-          },
-          "dynamicAnyObjectMembershipCount" : {
-            "type" : "integer",
-            "format" : "int32",
-            "readOnly" : true
+      "GroupTO": {
+        "xml": {
+          "name": "group"
+        },
+        "allOf": [
+          {
+            "$ref": "#/components/schemas/AnyTO"
           },
-          "adynMembershipConds" : {
-            "type" : "object",
-            "additionalProperties" : {
-              "type" : "string",
-              "xml" : {
-                "name" : "resource"
+          {
+            "required": [
+              "@class"
+            ],
+            "type": "object",
+            "properties": {
+              "@class": {
+                "type": "string",
+                "example": "org.apache.syncope.common.lib.to.GroupTO"
+              },
+              "name": {
+                "type": "string"
+              },
+              "userOwner": {
+                "type": "string"
+              },
+              "groupOwner": {
+                "type": "string"
+              },
+              "udynMembershipCond": {
+                "type": "string"
+              },
+              "staticUserMembershipCount": {
+                "type": "integer",
+                "format": "int32",
+                "readOnly": true
+              },
+              "dynamicUserMembershipCount": {
+                "type": "integer",
+                "format": "int32",
+                "readOnly": true
+              },
+              "staticAnyObjectMembershipCount": {
+                "type": "integer",
+                "format": "int32",
+                "readOnly": true
+              },
+              "dynamicAnyObjectMembershipCount": {
+                "type": "integer",
+                "format": "int32",
+                "readOnly": true
+              },
+              "adynMembershipConds": {
+                "type": "object",
+                "additionalProperties": {
+                  "type": "string",
+                  "xml": {
+                    "name": "privilege"
+                  }
+                }
+              },
+              "typeExtensions": {
+                "type": "array",
+                "xml": {
+                  "wrapped": true
+                },
+                "items": {
+                  "$ref": "#/components/schemas/TypeExtensionTO"
+                }
               }
             }
-          },
-          "typeExtensions" : {
-            "type" : "array",
-            "xml" : {
-              "wrapped" : true
-            },
-            "items" : {
-              "$ref" : "#/components/schemas/TypeExtensionTO"
-            }
           }
-        },
-        "xml" : {
-          "name" : "group"
-        },
-        "allOf" : [ {
-          "$ref" : "#/components/schemas/AnyTO"
-        } ]
+        ]
       },
       "SecurityQuestionTO" : {
         "type" : "object",
@@ -24795,7 +24918,7 @@
             "additionalProperties" : {
               "type" : "string",
               "xml" : {
-                "name" : "resource"
+                "name" : "privilege"
               }
             }
           }
@@ -25083,7 +25206,7 @@
             "items" : {
               "type" : "string",
               "xml" : {
-                "name" : "resource"
+                "name" : "value"
               }
             }
           }
@@ -25269,52 +25392,58 @@
           "$ref" : "#/components/schemas/AnyPatch"
         } ]
       },
-      "AnyObjectTO" : {
-        "required" : [ "@class" ],
-        "type" : "object",
-        "properties" : {
-          "@class" : {
-            "type" : "string",
-            "example" : "org.apache.syncope.common.lib.to.AnyObjectTO"
-          },
-          "name" : {
-            "type" : "string"
-          },
-          "relationships" : {
-            "type" : "array",
-            "xml" : {
-              "wrapped" : true
-            },
-            "items" : {
-              "$ref" : "#/components/schemas/RelationshipTO"
-            }
-          },
-          "memberships" : {
-            "type" : "array",
-            "xml" : {
-              "wrapped" : true
-            },
-            "items" : {
-              "$ref" : "#/components/schemas/MembershipTO"
-            }
-          },
-          "dynMemberships" : {
-            "type" : "array",
-            "readOnly" : true,
-            "xml" : {
-              "wrapped" : true
-            },
-            "items" : {
-              "$ref" : "#/components/schemas/MembershipTO"
-            }
-          }
-        },
-        "xml" : {
-          "name" : "anyObject"
-        },
-        "allOf" : [ {
-          "$ref" : "#/components/schemas/AnyTO"
-        } ]
+      "AnyObjectTO": {
+        "xml": {
+          "name": "anyObject"
+        },
+        "allOf": [
+          {
+            "$ref": "#/components/schemas/AnyTO"
+          },
+          {
+            "required": [
+              "@class"
+            ],
+            "type": "object",
+            "properties": {
+              "@class": {
+                "type": "string",
+                "example": "org.apache.syncope.common.lib.to.AnyObjectTO"
+              },
+              "name": {
+                "type": "string"
+              },
+              "relationships": {
+                "type": "array",
+                "xml": {
+                  "wrapped": true
+                },
+                "items": {
+                  "$ref": "#/components/schemas/RelationshipTO"
+                }
+              },
+              "memberships": {
+                "type": "array",
+                "xml": {
+                  "wrapped": true
+                },
+                "items": {
+                  "$ref": "#/components/schemas/MembershipTO"
+                }
+              },
+              "dynMemberships": {
+                "type": "array",
+                "readOnly": true,
+                "xml": {
+                  "wrapped": true
+                },
+                "items": {
+                  "$ref": "#/components/schemas/MembershipTO"
+                }
+              }
+            }
+          }
+        ]
       },
       "CamelMetrics" : {
         "type" : "object",
